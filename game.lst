                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.2 #13350 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _getInput
                                     13 	.globl _setRotatedSprite
                                     14 	.globl _applyDragToGameObject
                                     15 	.globl _updateGameObject
                                     16 	.globl _rotate
                                     17 	.globl _sqrt
                                     18 	.globl _set_sprite_data
                                     19 	.globl _set_bkg_tiles
                                     20 	.globl _set_bkg_data
                                     21 	.globl _wait_vbl_done
                                     22 	.globl _joypad
                                     23 	.globl _enemyUpdate
                                     24 	.globl _SpaceMap
                                     25 	.globl _SpaceTiles
                                     26 	.globl _SpaceShipTiles
                                     27 	.globl _activeEnemies
                                     28 	.globl _enemies
                                     29 	.globl _cordic_table
                                     30 ;--------------------------------------------------------
                                     31 ; special function registers
                                     32 ;--------------------------------------------------------
                                     33 ;--------------------------------------------------------
                                     34 ; ram data
                                     35 ;--------------------------------------------------------
                                     36 	.area _DATA
                           000000    37 G$enemies$0_0$0==.
      000000                         38 _enemies::
      000000                         39 	.ds 168
                           0000A8    40 G$activeEnemies$0_0$0==.
      0000A8                         41 _activeEnemies::
      0000A8                         42 	.ds 8
                                     43 ;--------------------------------------------------------
                                     44 ; ram data
                                     45 ;--------------------------------------------------------
                                     46 	.area _INITIALIZED
                           000000    47 G$SpaceShipTiles$0_0$0==.
      000000                         48 _SpaceShipTiles::
      000000                         49 	.ds 112
                           000070    50 G$SpaceTiles$0_0$0==.
      000070                         51 _SpaceTiles::
      000070                         52 	.ds 80
                           0000C0    53 G$SpaceMap$0_0$0==.
      0000C0                         54 _SpaceMap::
      0000C0                         55 	.ds 1024
                           0004C0    56 G$enemyUpdate$0_0$0==.
      0004C0                         57 _enemyUpdate::
      0004C0                         58 	.ds 1
                                     59 ;--------------------------------------------------------
                                     60 ; absolute external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area _DABS (ABS)
                                     63 ;--------------------------------------------------------
                                     64 ; global & static initialisations
                                     65 ;--------------------------------------------------------
                                     66 	.area _HOME
                                     67 	.area _GSINIT
                                     68 	.area _GSFINAL
                                     69 	.area _GSINIT
                                     70 ;--------------------------------------------------------
                                     71 ; Home
                                     72 ;--------------------------------------------------------
                                     73 	.area _HOME
                                     74 	.area _HOME
                                     75 ;--------------------------------------------------------
                                     76 ; code
                                     77 ;--------------------------------------------------------
                                     78 	.area _CODE
                           000000    79 	G$sqrt$0$0	= .
                                     80 	.globl	G$sqrt$0$0
                           000000    81 	C$fixed.c$61$0_0$121	= .
                                     82 	.globl	C$fixed.c$61$0_0$121
                                     83 ;fixed.c:61: fixed16 sqrt(fixed16 n) {
                                     84 ;	---------------------------------
                                     85 ; Function sqrt
                                     86 ; ---------------------------------
      000000                         87 _sqrt::
      000000 E8 F6            [16]   88 	add	sp, #-10
                                     89 ;fixed.c:66: fixed16 x = div(n, FIXED(2));
      000002 7A               [ 4]   90 	ld	a, d
      000003 07               [ 4]   91 	rlca
      000004 9F               [ 4]   92 	sbc	a, a
      000005 4F               [ 4]   93 	ld	c, a
      000006 7A               [ 4]   94 	ld	a, d
      000007 53               [ 4]   95 	ld	d, e
      000008 1E 00            [ 8]   96 	ld	e, #0x00
      00000A 33               [ 8]   97 	inc	sp
      00000B 33               [ 8]   98 	inc	sp
      00000C D5               [16]   99 	push	de
      00000D F8 02            [12]  100 	ldhl	sp,	#2
      00000F 22               [ 8]  101 	ld	(hl+), a
      000010 71               [ 8]  102 	ld	(hl), c
      000011 11 00 00         [12]  103 	ld	de, #0x0000
      000014 D5               [16]  104 	push	de
      000015 16 02            [ 8]  105 	ld	d, #0x02
      000017 D5               [16]  106 	push	de
      000018 F8 04            [12]  107 	ldhl	sp,	#4
      00001A 2A               [ 8]  108 	ld	a, (hl+)
      00001B 4F               [ 4]  109 	ld	c, a
      00001C 2A               [ 8]  110 	ld	a, (hl+)
      00001D 47               [ 4]  111 	ld	b, a
      00001E 2A               [ 8]  112 	ld	a, (hl+)
      00001F 5F               [ 4]  113 	ld	e, a
      000020 56               [ 8]  114 	ld	d, (hl)
      000021 CDr00r00         [24]  115 	call	__divslong
      000024 F8 04            [12]  116 	ldhl	sp,	#4
      000026 79               [ 4]  117 	ld	a, c
      000027 22               [ 8]  118 	ld	(hl+), a
      000028 70               [ 8]  119 	ld	(hl), b
                           000029   120 	C$fixed.c$69$1_0$121	= .
                                    121 	.globl	C$fixed.c$69$1_0$121
                                    122 ;fixed.c:69: while (abs(sub(x, div(n, x))) > tol) {
      000029                        123 00101$:
                           000029   124 	C$fixed.c$25$1_0$121	= .
                                    125 	.globl	C$fixed.c$25$1_0$121
                                    126 ;fixed.c:25: return (fixed16)(((int32_t)a << FIXED_SHIFT) / b);
      000029 F8 04            [12]  127 	ldhl	sp,	#4
      00002B 2A               [ 8]  128 	ld	a, (hl+)
      00002C 4F               [ 4]  129 	ld	c, a
      00002D 7E               [ 8]  130 	ld	a, (hl)
      00002E 47               [ 4]  131 	ld	b, a
      00002F 07               [ 4]  132 	rlca
      000030 9F               [ 4]  133 	sbc	a, a
      000031 57               [ 4]  134 	ld	d, a
      000032 5F               [ 4]  135 	ld	e, a
      000033 D5               [16]  136 	push	de
      000034 C5               [16]  137 	push	bc
      000035 F8 04            [12]  138 	ldhl	sp,	#4
      000037 2A               [ 8]  139 	ld	a, (hl+)
      000038 4F               [ 4]  140 	ld	c, a
      000039 2A               [ 8]  141 	ld	a, (hl+)
      00003A 47               [ 4]  142 	ld	b, a
      00003B 2A               [ 8]  143 	ld	a, (hl+)
      00003C 5F               [ 4]  144 	ld	e, a
      00003D 56               [ 8]  145 	ld	d, (hl)
      00003E CDr00r00         [24]  146 	call	__divslong
      000041 F8 08            [12]  147 	ldhl	sp,	#8
      000043 79               [ 4]  148 	ld	a, c
      000044 22               [ 8]  149 	ld	(hl+), a
      000045 78               [ 4]  150 	ld	a, b
      000046 32               [ 8]  151 	ld	(hl-), a
      000047 2A               [ 8]  152 	ld	a, (hl+)
      000048 4F               [ 4]  153 	ld	c, a
      000049 46               [ 8]  154 	ld	b, (hl)
                                    155 ;fixed.c:17: return a - b;
      00004A F8 04            [12]  156 	ldhl	sp,#4
      00004C 2A               [ 8]  157 	ld	a, (hl+)
      00004D 5F               [ 4]  158 	ld	e, a
      00004E 56               [ 8]  159 	ld	d, (hl)
      00004F 7B               [ 4]  160 	ld	a, e
      000050 91               [ 4]  161 	sub	a, c
      000051 5F               [ 4]  162 	ld	e, a
      000052 7A               [ 4]  163 	ld	a, d
      000053 98               [ 4]  164 	sbc	a, b
      000054 4B               [ 4]  165 	ld	c, e
      000055 47               [ 4]  166 	ld	b, a
                                    167 ;fixed.c:30: if (a >= 0)
                                    168 ;	spillPairReg hl
                                    169 ;	spillPairReg hl
      000056 60               [ 4]  170 	ld	h, b
                                    171 ;	spillPairReg hl
                                    172 ;	spillPairReg hl
      000057 CB 7C            [ 8]  173 	bit	7, h
                                    174 ;fixed.c:32: return a;
      000059 28 06            [12]  175 	jr	Z, 00108$
                                    176 ;fixed.c:36: return -a;
      00005B AF               [ 4]  177 	xor	a, a
      00005C 91               [ 4]  178 	sub	a, c
      00005D 4F               [ 4]  179 	ld	c, a
      00005E 9F               [ 4]  180 	sbc	a, a
      00005F 90               [ 4]  181 	sub	a, b
      000060 47               [ 4]  182 	ld	b, a
                                    183 ;fixed.c:69: while (abs(sub(x, div(n, x))) > tol) {
      000061                        184 00108$:
      000061 58               [ 4]  185 	ld	e, b
      000062 AF               [ 4]  186 	xor	a, a
      000063 57               [ 4]  187 	ld	d, a
      000064 B9               [ 4]  188 	cp	a, c
      000065 98               [ 4]  189 	sbc	a, b
      000066 CB 7B            [ 8]  190 	bit	7, e
      000068 28 07            [12]  191 	jr	Z, 00133$
      00006A CB 7A            [ 8]  192 	bit	7, d
      00006C 20 08            [12]  193 	jr	NZ, 00134$
      00006E BF               [ 4]  194 	cp	a, a
      00006F 18 05            [12]  195 	jr	00134$
      000071                        196 00133$:
      000071 CB 7A            [ 8]  197 	bit	7, d
      000073 28 01            [12]  198 	jr	Z, 00134$
      000075 37               [ 4]  199 	scf
      000076                        200 00134$:
      000076 30 64            [12]  201 	jr	NC, 00103$
                                    202 ;fixed.c:25: return (fixed16)(((int32_t)a << FIXED_SHIFT) / b);
      000078 F8 08            [12]  203 	ldhl	sp,	#8
      00007A 3A               [ 8]  204 	ld	a, (hl-)
      00007B 2B               [ 8]  205 	dec	hl
      00007C 77               [ 8]  206 	ld	(hl), a
      00007D F8 09            [12]  207 	ldhl	sp,	#9
      00007F 3A               [ 8]  208 	ld	a, (hl-)
      000080 2B               [ 8]  209 	dec	hl
                                    210 ;fixed.c:13: return a + b;
      000081 32               [ 8]  211 	ld	(hl-), a
      000082 2A               [ 8]  212 	ld	a, (hl+)
      000083 5F               [ 4]  213 	ld	e, a
      000084 56               [ 8]  214 	ld	d, (hl)
      000085 F8 04            [12]  215 	ldhl	sp,	#4
      000087 2A               [ 8]  216 	ld	a,	(hl+)
      000088 66               [ 8]  217 	ld	h, (hl)
      000089 6F               [ 4]  218 	ld	l, a
      00008A 19               [ 8]  219 	add	hl, de
      00008B E5               [16]  220 	push	hl
      00008C 7D               [ 4]  221 	ld	a, l
      00008D F8 0A            [12]  222 	ldhl	sp,	#10
      00008F 77               [ 8]  223 	ld	(hl), a
      000090 E1               [12]  224 	pop	hl
      000091 7C               [ 4]  225 	ld	a, h
      000092 F8 09            [12]  226 	ldhl	sp,	#9
                                    227 ;fixed.c:25: return (fixed16)(((int32_t)a << FIXED_SHIFT) / b);
      000094 32               [ 8]  228 	ld	(hl-), a
      000095 3A               [ 8]  229 	ld	a, (hl-)
      000096 2B               [ 8]  230 	dec	hl
      000097 77               [ 8]  231 	ld	(hl), a
      000098 F8 09            [12]  232 	ldhl	sp,	#9
      00009A 3A               [ 8]  233 	ld	a, (hl-)
      00009B 2B               [ 8]  234 	dec	hl
      00009C 22               [ 8]  235 	ld	(hl+), a
      00009D 07               [ 4]  236 	rlca
      00009E 9F               [ 4]  237 	sbc	a, a
      00009F 22               [ 8]  238 	ld	(hl+), a
      0000A0 77               [ 8]  239 	ld	(hl), a
      0000A1 3E 08            [ 8]  240 	ld	a, #0x08
      0000A3                        241 00135$:
      0000A3 F8 06            [12]  242 	ldhl	sp,	#6
      0000A5 CB 26            [16]  243 	sla	(hl)
      0000A7 23               [ 8]  244 	inc	hl
      0000A8 CB 16            [16]  245 	rl	(hl)
      0000AA 23               [ 8]  246 	inc	hl
      0000AB CB 16            [16]  247 	rl	(hl)
      0000AD 23               [ 8]  248 	inc	hl
      0000AE CB 16            [16]  249 	rl	(hl)
      0000B0 3D               [ 4]  250 	dec	a
      0000B1 20 F0            [12]  251 	jr	NZ,00135$
      0000B3 11 00 00         [12]  252 	ld	de, #0x0000
      0000B6 D5               [16]  253 	push	de
      0000B7 16 02            [ 8]  254 	ld	d, #0x02
      0000B9 D5               [16]  255 	push	de
      0000BA F8 0A            [12]  256 	ldhl	sp,	#10
      0000BC 2A               [ 8]  257 	ld	a, (hl+)
      0000BD 4F               [ 4]  258 	ld	c, a
      0000BE 2A               [ 8]  259 	ld	a, (hl+)
      0000BF 47               [ 4]  260 	ld	b, a
      0000C0 2A               [ 8]  261 	ld	a, (hl+)
      0000C1 5F               [ 4]  262 	ld	e, a
      0000C2 56               [ 8]  263 	ld	d, (hl)
      0000C3 CDr00r00         [24]  264 	call	__divslong
      0000C6 F8 06            [12]  265 	ldhl	sp,	#6
      0000C8 79               [ 4]  266 	ld	a, c
      0000C9 22               [ 8]  267 	ld	(hl+), a
      0000CA 78               [ 4]  268 	ld	a, b
      0000CB 22               [ 8]  269 	ld	(hl+), a
      0000CC 7B               [ 4]  270 	ld	a, e
      0000CD 22               [ 8]  271 	ld	(hl+), a
      0000CE 72               [ 8]  272 	ld	(hl), d
      0000CF F8 06            [12]  273 	ldhl	sp,	#6
      0000D1 3A               [ 8]  274 	ld	a, (hl-)
      0000D2 2B               [ 8]  275 	dec	hl
      0000D3 77               [ 8]  276 	ld	(hl), a
      0000D4 F8 07            [12]  277 	ldhl	sp,	#7
      0000D6 3A               [ 8]  278 	ld	a, (hl-)
      0000D7 2B               [ 8]  279 	dec	hl
      0000D8 77               [ 8]  280 	ld	(hl), a
                           0000D9   281 	C$fixed.c$71$1_0$121	= .
                                    282 	.globl	C$fixed.c$71$1_0$121
                                    283 ;fixed.c:71: x = div(add(x, div(n, x)), FIXED(2));
      0000D9 C3r29r00         [16]  284 	jp	00101$
      0000DC                        285 00103$:
                           0000DC   286 	C$fixed.c$75$1_0$121	= .
                                    287 	.globl	C$fixed.c$75$1_0$121
                                    288 ;fixed.c:75: return x;
      0000DC F8 04            [12]  289 	ldhl	sp,	#4
      0000DE 2A               [ 8]  290 	ld	a, (hl+)
      0000DF 4F               [ 4]  291 	ld	c, a
      0000E0 46               [ 8]  292 	ld	b, (hl)
                           0000E1   293 	C$fixed.c$76$1_0$121	= .
                                    294 	.globl	C$fixed.c$76$1_0$121
                                    295 ;fixed.c:76: }
      0000E1 E8 0A            [16]  296 	add	sp, #10
                           0000E3   297 	C$fixed.c$76$1_0$121	= .
                                    298 	.globl	C$fixed.c$76$1_0$121
                           0000E3   299 	XG$sqrt$0$0	= .
                                    300 	.globl	XG$sqrt$0$0
      0000E3 C9               [16]  301 	ret
                           0000E4   302 	G$rotate$0$0	= .
                                    303 	.globl	G$rotate$0$0
                           0000E4   304 	C$fixed.c$103$1_0$147	= .
                                    305 	.globl	C$fixed.c$103$1_0$147
                                    306 ;fixed.c:103: void rotate(fixed16* x, fixed16* y, fixed16 angle) {
                                    307 ;	---------------------------------
                                    308 ; Function rotate
                                    309 ; ---------------------------------
      0000E4                        310 _rotate::
      0000E4 E8 ED            [16]  311 	add	sp, #-19
      0000E6 F8 10            [12]  312 	ldhl	sp,	#16
      0000E8 7B               [ 4]  313 	ld	a, e
      0000E9 22               [ 8]  314 	ld	(hl+), a
      0000EA 72               [ 8]  315 	ld	(hl), d
      0000EB F8 0E            [12]  316 	ldhl	sp,	#14
      0000ED 79               [ 4]  317 	ld	a, c
      0000EE 22               [ 8]  318 	ld	(hl+), a
      0000EF 70               [ 8]  319 	ld	(hl), b
                           0000F0   320 	C$fixed.c$105$2_0$147	= .
                                    321 	.globl	C$fixed.c$105$2_0$147
                                    322 ;fixed.c:105: fixed16 current_angle = FIXED(0);
      0000F0 AF               [ 4]  323 	xor	a, a
      0000F1 F8 00            [12]  324 	ldhl	sp,	#0
      0000F3 22               [ 8]  325 	ld	(hl+), a
      0000F4 77               [ 8]  326 	ld	(hl), a
                           0000F5   327 	C$fixed.c$108$3_0$149	= .
                                    328 	.globl	C$fixed.c$108$3_0$149
                                    329 ;fixed.c:108: for (int8_t i = 0; i < 11; i++) {
      0000F5 F8 15            [12]  330 	ldhl	sp,	#21
      0000F7 7E               [ 8]  331 	ld	a, (hl)
      0000F8 F8 02            [12]  332 	ldhl	sp,	#2
      0000FA 77               [ 8]  333 	ld	(hl), a
      0000FB F8 16            [12]  334 	ldhl	sp,	#22
      0000FD 7E               [ 8]  335 	ld	a, (hl)
      0000FE F8 03            [12]  336 	ldhl	sp,	#3
      000100 77               [ 8]  337 	ld	(hl), a
      000101 F8 12            [12]  338 	ldhl	sp,	#18
      000103 36 00            [12]  339 	ld	(hl), #0x00
      000105                        340 00107$:
                           000105   341 	C$fixed.c$117$3_0$147	= .
                                    342 	.globl	C$fixed.c$117$3_0$147
                                    343 ;fixed.c:117: fixed16 x_new = *x - sign * (*y >> i);
      000105 F8 10            [12]  344 	ldhl	sp,#16
      000107 2A               [ 8]  345 	ld	a, (hl+)
      000108 5F               [ 4]  346 	ld	e, a
      000109 56               [ 8]  347 	ld	d, (hl)
      00010A 1A               [ 8]  348 	ld	a, (de)
      00010B F8 04            [12]  349 	ldhl	sp,	#4
      00010D 22               [ 8]  350 	ld	(hl+), a
      00010E 13               [ 8]  351 	inc	de
      00010F 1A               [ 8]  352 	ld	a, (de)
      000110 77               [ 8]  353 	ld	(hl), a
                           000111   354 	C$fixed.c$108$2_0$148	= .
                                    355 	.globl	C$fixed.c$108$2_0$148
                                    356 ;fixed.c:108: for (int8_t i = 0; i < 11; i++) {
      000111 F8 12            [12]  357 	ldhl	sp,	#18
      000113 7E               [ 8]  358 	ld	a, (hl)
      000114 EE 80            [ 8]  359 	xor	a, #0x80
      000116 D6 8B            [ 8]  360 	sub	a, #0x8b
      000118 D2r04r02         [16]  361 	jp	NC, 00101$
                           00011B   362 	C$fixed.c$110$3_0$149	= .
                                    363 	.globl	C$fixed.c$110$3_0$149
                                    364 ;fixed.c:110: fixed16 pre_angle = cordic_table[i][0];
      00011B 7E               [ 8]  365 	ld	a, (hl)
      00011C 4F               [ 4]  366 	ld	c, a
      00011D 07               [ 4]  367 	rlca
      00011E 9F               [ 4]  368 	sbc	a, a
      00011F 69               [ 4]  369 	ld	l, c
      000120 67               [ 4]  370 	ld	h, a
      000121 29               [ 8]  371 	add	hl, hl
      000122 29               [ 8]  372 	add	hl, hl
      000123 11r8Fr02         [12]  373 	ld	de, #_cordic_table
      000126 19               [ 8]  374 	add	hl, de
      000127 5D               [ 4]  375 	ld	e, l
      000128 54               [ 4]  376 	ld	d, h
      000129 1A               [ 8]  377 	ld	a, (de)
      00012A F8 06            [12]  378 	ldhl	sp,	#6
      00012C 22               [ 8]  379 	ld	(hl+), a
      00012D 13               [ 8]  380 	inc	de
      00012E 1A               [ 8]  381 	ld	a, (de)
      00012F 77               [ 8]  382 	ld	(hl), a
                                    383 ;fixed.c:114: int sign = (sub(angle, current_angle)) > 0 ? 1 : -1;
      000130 F8 02            [12]  384 	ldhl	sp,#2
      000132 2A               [ 8]  385 	ld	a, (hl+)
      000133 5F               [ 4]  386 	ld	e, a
      000134 56               [ 8]  387 	ld	d, (hl)
      000135 E1               [12]  388 	pop	hl
      000136 E5               [16]  389 	push	hl
      000137 7B               [ 4]  390 	ld	a, e
      000138 95               [ 4]  391 	sub	a, l
      000139 5F               [ 4]  392 	ld	e, a
      00013A 7A               [ 4]  393 	ld	a, d
      00013B 9C               [ 4]  394 	sbc	a, h
      00013C 4B               [ 4]  395 	ld	c, e
      00013D 47               [ 4]  396 	ld	b, a
      00013E 58               [ 4]  397 	ld	e, b
      00013F AF               [ 4]  398 	xor	a, a
      000140 57               [ 4]  399 	ld	d, a
      000141 B9               [ 4]  400 	cp	a, c
      000142 98               [ 4]  401 	sbc	a, b
      000143 CB 7B            [ 8]  402 	bit	7, e
      000145 28 07            [12]  403 	jr	Z, 00129$
      000147 CB 7A            [ 8]  404 	bit	7, d
      000149 20 08            [12]  405 	jr	NZ, 00130$
      00014B BF               [ 4]  406 	cp	a, a
      00014C 18 05            [12]  407 	jr	00130$
      00014E                        408 00129$:
      00014E CB 7A            [ 8]  409 	bit	7, d
      000150 28 01            [12]  410 	jr	Z, 00130$
      000152 37               [ 4]  411 	scf
      000153                        412 00130$:
      000153 30 05            [12]  413 	jr	NC, 00111$
      000155 01 01 00         [12]  414 	ld	bc, #0x0001
      000158 18 03            [12]  415 	jr	00112$
      00015A                        416 00111$:
      00015A 01 FF FF         [12]  417 	ld	bc, #0xffff
      00015D                        418 00112$:
                           00015D   419 	C$fixed.c$117$3_0$149	= .
                                    420 	.globl	C$fixed.c$117$3_0$149
                                    421 ;fixed.c:117: fixed16 x_new = *x - sign * (*y >> i);
      00015D F8 0E            [12]  422 	ldhl	sp,#14
      00015F 2A               [ 8]  423 	ld	a, (hl+)
      000160 5F               [ 4]  424 	ld	e, a
      000161 56               [ 8]  425 	ld	d, (hl)
      000162 1A               [ 8]  426 	ld	a, (de)
      000163 F8 08            [12]  427 	ldhl	sp,	#8
      000165 22               [ 8]  428 	ld	(hl+), a
      000166 13               [ 8]  429 	inc	de
      000167 1A               [ 8]  430 	ld	a, (de)
      000168 77               [ 8]  431 	ld	(hl), a
      000169 F8 12            [12]  432 	ldhl	sp,	#18
      00016B 7E               [ 8]  433 	ld	a, (hl)
      00016C F5               [16]  434 	push	af
      00016D F8 0A            [12]  435 	ldhl	sp,	#10
      00016F 2A               [ 8]  436 	ld	a, (hl+)
      000170 5F               [ 4]  437 	ld	e, a
      000171 56               [ 8]  438 	ld	d, (hl)
      000172 F1               [12]  439 	pop	af
      000173 3C               [ 4]  440 	inc	a
      000174 18 04            [12]  441 	jr	00132$
      000176                        442 00131$:
      000176 CB 2A            [ 8]  443 	sra	d
      000178 CB 1B            [ 8]  444 	rr	e
      00017A                        445 00132$:
      00017A 3D               [ 4]  446 	dec	a
      00017B 20 F9            [12]  447 	jr	NZ, 00131$
      00017D F8 0A            [12]  448 	ldhl	sp,	#10
      00017F 79               [ 4]  449 	ld	a, c
      000180 22               [ 8]  450 	ld	(hl+), a
      000181 78               [ 4]  451 	ld	a, b
      000182 32               [ 8]  452 	ld	(hl-), a
      000183 4B               [ 4]  453 	ld	c, e
      000184 42               [ 4]  454 	ld	b, d
      000185 2A               [ 8]  455 	ld	a, (hl+)
      000186 5F               [ 4]  456 	ld	e, a
      000187 56               [ 8]  457 	ld	d, (hl)
      000188 CDr00r00         [24]  458 	call	__mulint
      00018B F8 04            [12]  459 	ldhl	sp,#4
      00018D 2A               [ 8]  460 	ld	a, (hl+)
      00018E 5F               [ 4]  461 	ld	e, a
      00018F 56               [ 8]  462 	ld	d, (hl)
      000190 7B               [ 4]  463 	ld	a, e
      000191 91               [ 4]  464 	sub	a, c
      000192 5F               [ 4]  465 	ld	e, a
      000193 7A               [ 4]  466 	ld	a, d
      000194 98               [ 4]  467 	sbc	a, b
      000195 4B               [ 4]  468 	ld	c, e
      000196 F8 0C            [12]  469 	ldhl	sp,	#12
      000198 71               [ 8]  470 	ld	(hl), c
      000199 23               [ 8]  471 	inc	hl
      00019A 77               [ 8]  472 	ld	(hl), a
                           00019B   473 	C$fixed.c$118$3_0$149	= .
                                    474 	.globl	C$fixed.c$118$3_0$149
                                    475 ;fixed.c:118: fixed16 y_new = *y + sign * (*x >> i);
      00019B F8 12            [12]  476 	ldhl	sp,	#18
      00019D 7E               [ 8]  477 	ld	a, (hl)
      00019E F5               [16]  478 	push	af
      00019F F8 06            [12]  479 	ldhl	sp,	#6
      0001A1 2A               [ 8]  480 	ld	a, (hl+)
      0001A2 4F               [ 4]  481 	ld	c, a
      0001A3 46               [ 8]  482 	ld	b, (hl)
      0001A4 F1               [12]  483 	pop	af
      0001A5 3C               [ 4]  484 	inc	a
      0001A6 18 04            [12]  485 	jr	00134$
      0001A8                        486 00133$:
      0001A8 CB 28            [ 8]  487 	sra	b
      0001AA CB 19            [ 8]  488 	rr	c
      0001AC                        489 00134$:
      0001AC 3D               [ 4]  490 	dec	a
      0001AD 20 F9            [12]  491 	jr	NZ, 00133$
      0001AF F8 0A            [12]  492 	ldhl	sp,	#10
      0001B1 2A               [ 8]  493 	ld	a, (hl+)
      0001B2 5F               [ 4]  494 	ld	e, a
      0001B3 56               [ 8]  495 	ld	d, (hl)
      0001B4 CDr00r00         [24]  496 	call	__mulint
      0001B7 F8 08            [12]  497 	ldhl	sp,	#8
      0001B9 2A               [ 8]  498 	ld	a,	(hl+)
      0001BA 66               [ 8]  499 	ld	h, (hl)
      0001BB 6F               [ 4]  500 	ld	l, a
      0001BC 09               [ 8]  501 	add	hl, bc
      0001BD 4D               [ 4]  502 	ld	c, l
      0001BE 44               [ 4]  503 	ld	b, h
                           0001BF   504 	C$fixed.c$121$3_0$149	= .
                                    505 	.globl	C$fixed.c$121$3_0$149
                                    506 ;fixed.c:121: *x = x_new;
      0001BF F8 10            [12]  507 	ldhl	sp,#16
      0001C1 2A               [ 8]  508 	ld	a, (hl+)
      0001C2 5F               [ 4]  509 	ld	e, a
      0001C3 56               [ 8]  510 	ld	d, (hl)
      0001C4 F8 0C            [12]  511 	ldhl	sp,	#12
      0001C6 2A               [ 8]  512 	ld	a, (hl+)
      0001C7 12               [ 8]  513 	ld	(de), a
      0001C8 13               [ 8]  514 	inc	de
                           0001C9   515 	C$fixed.c$122$3_0$149	= .
                                    516 	.globl	C$fixed.c$122$3_0$149
                                    517 ;fixed.c:122: *y = y_new;
      0001C9 2A               [ 8]  518 	ld	a, (hl+)
      0001CA 12               [ 8]  519 	ld	(de), a
      0001CB 2A               [ 8]  520 	ld	a,	(hl+)
      0001CC 66               [ 8]  521 	ld	h, (hl)
      0001CD 6F               [ 4]  522 	ld	l, a
      0001CE 79               [ 4]  523 	ld	a, c
      0001CF 22               [ 8]  524 	ld	(hl+), a
      0001D0 70               [ 8]  525 	ld	(hl), b
                           0001D1   526 	C$fixed.c$125$3_0$147	= .
                                    527 	.globl	C$fixed.c$125$3_0$147
                                    528 ;fixed.c:125: current_angle = add(current_angle, sign * pre_angle);
      0001D1 F8 06            [12]  529 	ldhl	sp,	#6
      0001D3 2A               [ 8]  530 	ld	a, (hl+)
      0001D4 4F               [ 4]  531 	ld	c, a
      0001D5 46               [ 8]  532 	ld	b, (hl)
      0001D6 F8 0A            [12]  533 	ldhl	sp,	#10
      0001D8 2A               [ 8]  534 	ld	a, (hl+)
      0001D9 5F               [ 4]  535 	ld	e, a
      0001DA 56               [ 8]  536 	ld	d, (hl)
      0001DB CDr00r00         [24]  537 	call	__mulint
      0001DE F8 0A            [12]  538 	ldhl	sp,	#10
      0001E0 79               [ 4]  539 	ld	a, c
      0001E1 22               [ 8]  540 	ld	(hl+), a
                                    541 ;fixed.c:13: return a + b;
      0001E2 78               [ 4]  542 	ld	a, b
      0001E3 32               [ 8]  543 	ld	(hl-), a
      0001E4 2A               [ 8]  544 	ld	a, (hl+)
      0001E5 5F               [ 4]  545 	ld	e, a
      0001E6 56               [ 8]  546 	ld	d, (hl)
      0001E7 E1               [12]  547 	pop	hl
      0001E8 E5               [16]  548 	push	hl
      0001E9 19               [ 8]  549 	add	hl, de
      0001EA E5               [16]  550 	push	hl
      0001EB 7D               [ 4]  551 	ld	a, l
      0001EC F8 0E            [12]  552 	ldhl	sp,	#14
      0001EE 77               [ 8]  553 	ld	(hl), a
      0001EF E1               [12]  554 	pop	hl
      0001F0 7C               [ 4]  555 	ld	a, h
      0001F1 F8 0D            [12]  556 	ldhl	sp,	#13
                           0001F3   557 	C$fixed.c$125$5_0$154	= .
                                    558 	.globl	C$fixed.c$125$5_0$154
                                    559 ;fixed.c:125: current_angle = add(current_angle, sign * pre_angle);
      0001F3 32               [ 8]  560 	ld	(hl-), a
      0001F4 7E               [ 8]  561 	ld	a, (hl)
      0001F5 F8 00            [12]  562 	ldhl	sp,	#0
      0001F7 77               [ 8]  563 	ld	(hl), a
      0001F8 F8 0D            [12]  564 	ldhl	sp,	#13
      0001FA 7E               [ 8]  565 	ld	a, (hl)
      0001FB F8 01            [12]  566 	ldhl	sp,	#1
      0001FD 77               [ 8]  567 	ld	(hl), a
                           0001FE   568 	C$fixed.c$108$2_0$148	= .
                                    569 	.globl	C$fixed.c$108$2_0$148
                                    570 ;fixed.c:108: for (int8_t i = 0; i < 11; i++) {
      0001FE F8 12            [12]  571 	ldhl	sp,	#18
      000200 34               [12]  572 	inc	(hl)
      000201 C3r05r01         [16]  573 	jp	00107$
      000204                        574 00101$:
                                    575 ;fixed.c:129: *x = mul(*x, CORRECTION_FACTOR);
      000204 F8 04            [12]  576 	ldhl	sp,	#4
      000206 7E               [ 8]  577 	ld	a, (hl)
      000207 F8 0C            [12]  578 	ldhl	sp,	#12
      000209 77               [ 8]  579 	ld	(hl), a
      00020A F8 05            [12]  580 	ldhl	sp,	#5
      00020C 7E               [ 8]  581 	ld	a, (hl)
      00020D F8 0D            [12]  582 	ldhl	sp,	#13
                                    583 ;fixed.c:21: return (fixed16)(((int32_t)a * b) >> FIXED_SHIFT);
      00020F 32               [ 8]  584 	ld	(hl-), a
      000210 3A               [ 8]  585 	ld	a, (hl-)
      000211 2B               [ 8]  586 	dec	hl
      000212 77               [ 8]  587 	ld	(hl), a
      000213 F8 0D            [12]  588 	ldhl	sp,	#13
      000215 3A               [ 8]  589 	ld	a, (hl-)
      000216 2B               [ 8]  590 	dec	hl
      000217 22               [ 8]  591 	ld	(hl+), a
      000218 07               [ 4]  592 	rlca
      000219 9F               [ 4]  593 	sbc	a, a
      00021A 22               [ 8]  594 	ld	(hl+), a
      00021B 77               [ 8]  595 	ld	(hl), a
      00021C 11 00 00         [12]  596 	ld	de, #0x0000
      00021F D5               [16]  597 	push	de
      000220 1E 9B            [ 8]  598 	ld	e, #0x9b
      000222 D5               [16]  599 	push	de
      000223 F8 0E            [12]  600 	ldhl	sp,	#14
      000225 2A               [ 8]  601 	ld	a, (hl+)
      000226 4F               [ 4]  602 	ld	c, a
      000227 2A               [ 8]  603 	ld	a, (hl+)
      000228 47               [ 4]  604 	ld	b, a
      000229 2A               [ 8]  605 	ld	a, (hl+)
      00022A 5F               [ 4]  606 	ld	e, a
      00022B 56               [ 8]  607 	ld	d, (hl)
      00022C CDr00r00         [24]  608 	call	__mullong
      00022F F8 0A            [12]  609 	ldhl	sp,	#10
      000231 79               [ 4]  610 	ld	a, c
      000232 22               [ 8]  611 	ld	(hl+), a
      000233 78               [ 4]  612 	ld	a, b
      000234 22               [ 8]  613 	ld	(hl+), a
      000235 7B               [ 4]  614 	ld	a, e
      000236 22               [ 8]  615 	ld	(hl+), a
      000237 72               [ 8]  616 	ld	(hl), d
      000238 F8 0C            [12]  617 	ldhl	sp,	#12
      00023A 2A               [ 8]  618 	ld	a, (hl+)
      00023B 32               [ 8]  619 	ld	(hl-), a
      00023C 2B               [ 8]  620 	dec	hl
      00023D 2A               [ 8]  621 	ld	a, (hl+)
      00023E 77               [ 8]  622 	ld	(hl), a
                           00023F   623 	C$fixed.c$129$3_0$157	= .
                                    624 	.globl	C$fixed.c$129$3_0$157
                                    625 ;fixed.c:129: *x = mul(*x, CORRECTION_FACTOR);
      00023F F8 10            [12]  626 	ldhl	sp,#16
      000241 2A               [ 8]  627 	ld	a, (hl+)
      000242 5F               [ 4]  628 	ld	e, a
      000243 56               [ 8]  629 	ld	d, (hl)
      000244 F8 0C            [12]  630 	ldhl	sp,	#12
      000246 2A               [ 8]  631 	ld	a, (hl+)
      000247 12               [ 8]  632 	ld	(de), a
      000248 13               [ 8]  633 	inc	de
                                    634 ;fixed.c:130: *y = mul(*y, CORRECTION_FACTOR);
      000249 2A               [ 8]  635 	ld	a, (hl+)
      00024A 12               [ 8]  636 	ld	(de), a
      00024B 2A               [ 8]  637 	ld	a, (hl+)
      00024C 5F               [ 4]  638 	ld	e, a
      00024D 56               [ 8]  639 	ld	d, (hl)
      00024E 1A               [ 8]  640 	ld	a, (de)
      00024F 4F               [ 4]  641 	ld	c, a
      000250 13               [ 8]  642 	inc	de
      000251 1A               [ 8]  643 	ld	a, (de)
                                    644 ;fixed.c:21: return (fixed16)(((int32_t)a * b) >> FIXED_SHIFT);
      000252 F8 0A            [12]  645 	ldhl	sp,	#10
      000254 71               [ 8]  646 	ld	(hl), c
      000255 23               [ 8]  647 	inc	hl
      000256 22               [ 8]  648 	ld	(hl+), a
      000257 07               [ 4]  649 	rlca
      000258 9F               [ 4]  650 	sbc	a, a
      000259 22               [ 8]  651 	ld	(hl+), a
      00025A 77               [ 8]  652 	ld	(hl), a
      00025B 11 00 00         [12]  653 	ld	de, #0x0000
      00025E D5               [16]  654 	push	de
      00025F 1E 9B            [ 8]  655 	ld	e, #0x9b
      000261 D5               [16]  656 	push	de
      000262 F8 0E            [12]  657 	ldhl	sp,	#14
      000264 2A               [ 8]  658 	ld	a, (hl+)
      000265 4F               [ 4]  659 	ld	c, a
      000266 2A               [ 8]  660 	ld	a, (hl+)
      000267 47               [ 4]  661 	ld	b, a
      000268 2A               [ 8]  662 	ld	a, (hl+)
      000269 5F               [ 4]  663 	ld	e, a
      00026A 56               [ 8]  664 	ld	d, (hl)
      00026B CDr00r00         [24]  665 	call	__mullong
      00026E F8 0A            [12]  666 	ldhl	sp,	#10
      000270 79               [ 4]  667 	ld	a, c
      000271 22               [ 8]  668 	ld	(hl+), a
      000272 78               [ 4]  669 	ld	a, b
      000273 22               [ 8]  670 	ld	(hl+), a
      000274 7B               [ 4]  671 	ld	a, e
      000275 22               [ 8]  672 	ld	(hl+), a
      000276 72               [ 8]  673 	ld	(hl), d
      000277 F8 0C            [12]  674 	ldhl	sp,	#12
      000279 2A               [ 8]  675 	ld	a, (hl+)
      00027A 32               [ 8]  676 	ld	(hl-), a
      00027B 2B               [ 8]  677 	dec	hl
      00027C 2A               [ 8]  678 	ld	a, (hl+)
      00027D 77               [ 8]  679 	ld	(hl), a
                           00027E   680 	C$fixed.c$130$3_0$160	= .
                                    681 	.globl	C$fixed.c$130$3_0$160
                                    682 ;fixed.c:130: *y = mul(*y, CORRECTION_FACTOR);
      00027E F8 0E            [12]  683 	ldhl	sp,#14
      000280 2A               [ 8]  684 	ld	a, (hl+)
      000281 5F               [ 4]  685 	ld	e, a
      000282 56               [ 8]  686 	ld	d, (hl)
      000283 F8 0C            [12]  687 	ldhl	sp,	#12
      000285 2A               [ 8]  688 	ld	a, (hl+)
      000286 12               [ 8]  689 	ld	(de), a
      000287 13               [ 8]  690 	inc	de
      000288 7E               [ 8]  691 	ld	a, (hl)
      000289 12               [ 8]  692 	ld	(de), a
                           00028A   693 	C$fixed.c$131$3_0$147	= .
                                    694 	.globl	C$fixed.c$131$3_0$147
                                    695 ;fixed.c:131: }
      00028A E8 13            [16]  696 	add	sp, #19
      00028C E1               [12]  697 	pop	hl
      00028D F1               [12]  698 	pop	af
      00028E E9               [ 4]  699 	jp	(hl)
                           00028F   700 G$cordic_table$0_0$0 == .
      00028F                        701 _cordic_table:
      00028F 00 2D                  702 	.dw #0x2d00
      000291 00 01                  703 	.dw #0x0100
      000293 90 1A                  704 	.dw #0x1a90
      000295 80 00                  705 	.dw #0x0080
      000297 09 0E                  706 	.dw #0x0e09
      000299 40 00                  707 	.dw #0x0040
      00029B 20 07                  708 	.dw #0x0720
      00029D 20 00                  709 	.dw #0x0020
      00029F 93 03                  710 	.dw #0x0393
      0002A1 10 00                  711 	.dw #0x0010
      0002A3 CA 01                  712 	.dw #0x01ca
      0002A5 08 00                  713 	.dw #0x0008
      0002A7 E5 00                  714 	.dw #0x00e5
      0002A9 04 00                  715 	.dw #0x0004
      0002AB 72 00                  716 	.dw #0x0072
      0002AD 02 00                  717 	.dw #0x0002
      0002AF 39 00                  718 	.dw #0x0039
      0002B1 01 00                  719 	.dw #0x0001
      0002B3 1C 00                  720 	.dw #0x001c
      0002B5 00 00                  721 	.dw #0x0000
      0002B7 0E 00                  722 	.dw #0x000e
      0002B9 00 00                  723 	.dw #0x0000
                           0002BB   724 	G$updateGameObject$0$0	= .
                                    725 	.globl	G$updateGameObject$0$0
                           0002BB   726 	C$GameObject.c$31$3_0$165	= .
                                    727 	.globl	C$GameObject.c$31$3_0$165
                                    728 ;GameObject.c:31: void updateGameObject(GameObject *go, GameObject *player)
                                    729 ;	---------------------------------
                                    730 ; Function updateGameObject
                                    731 ; ---------------------------------
      0002BB                        732 _updateGameObject::
      0002BB E8 EA            [16]  733 	add	sp, #-22
      0002BD F8 12            [12]  734 	ldhl	sp,	#18
      0002BF 7B               [ 4]  735 	ld	a, e
      0002C0 22               [ 8]  736 	ld	(hl+), a
      0002C1 72               [ 8]  737 	ld	(hl), d
      0002C2 F8 10            [12]  738 	ldhl	sp,	#16
      0002C4 79               [ 4]  739 	ld	a, c
      0002C5 22               [ 8]  740 	ld	(hl+), a
                                    741 ;GameObject.c:33: go->posx = add(go->posx, go->velx);
      0002C6 78               [ 4]  742 	ld	a, b
      0002C7 22               [ 8]  743 	ld	(hl+), a
      0002C8 2A               [ 8]  744 	ld	a, (hl+)
      0002C9 5F               [ 4]  745 	ld	e, a
      0002CA 56               [ 8]  746 	ld	d, (hl)
      0002CB 21 04 00         [12]  747 	ld	hl, #0x0004
      0002CE 19               [ 8]  748 	add	hl, de
      0002CF E5               [16]  749 	push	hl
      0002D0 7D               [ 4]  750 	ld	a, l
      0002D1 F8 16            [12]  751 	ldhl	sp,	#22
      0002D3 77               [ 8]  752 	ld	(hl), a
      0002D4 E1               [12]  753 	pop	hl
      0002D5 7C               [ 4]  754 	ld	a, h
      0002D6 F8 15            [12]  755 	ldhl	sp,	#21
      0002D8 32               [ 8]  756 	ld	(hl-), a
      0002D9 2A               [ 8]  757 	ld	a, (hl+)
      0002DA 5F               [ 4]  758 	ld	e, a
      0002DB 3A               [ 8]  759 	ld	a, (hl-)
      0002DC 2B               [ 8]  760 	dec	hl
      0002DD 2B               [ 8]  761 	dec	hl
      0002DE 57               [ 4]  762 	ld	d, a
      0002DF 1A               [ 8]  763 	ld	a, (de)
      0002E0 4F               [ 4]  764 	ld	c, a
      0002E1 13               [ 8]  765 	inc	de
      0002E2 1A               [ 8]  766 	ld	a, (de)
      0002E3 47               [ 4]  767 	ld	b, a
      0002E4 2A               [ 8]  768 	ld	a, (hl+)
      0002E5 5F               [ 4]  769 	ld	e, a
      0002E6 56               [ 8]  770 	ld	d, (hl)
      0002E7 1A               [ 8]  771 	ld	a, (de)
      0002E8 6F               [ 4]  772 	ld	l, a
                                    773 ;	spillPairReg hl
                                    774 ;	spillPairReg hl
      0002E9 13               [ 8]  775 	inc	de
      0002EA 1A               [ 8]  776 	ld	a, (de)
      0002EB 67               [ 4]  777 	ld	h, a
                                    778 ;	spillPairReg hl
                                    779 ;	spillPairReg hl
                                    780 ;fixed.c:13: return a + b;
      0002EC 09               [ 8]  781 	add	hl, bc
      0002ED 4D               [ 4]  782 	ld	c, l
      0002EE 44               [ 4]  783 	ld	b, h
                           0002EF   784 	C$GameObject.c$33$3_0$172	= .
                                    785 	.globl	C$GameObject.c$33$3_0$172
                                    786 ;GameObject.c:33: go->posx = add(go->posx, go->velx);
      0002EF F8 12            [12]  787 	ldhl	sp,	#18
      0002F1 2A               [ 8]  788 	ld	a,	(hl+)
      0002F2 66               [ 8]  789 	ld	h, (hl)
      0002F3 6F               [ 4]  790 	ld	l, a
      0002F4 79               [ 4]  791 	ld	a, c
      0002F5 22               [ 8]  792 	ld	(hl+), a
      0002F6 70               [ 8]  793 	ld	(hl), b
                           0002F7   794 	C$GameObject.c$34$2_0$165	= .
                                    795 	.globl	C$GameObject.c$34$2_0$165
                                    796 ;GameObject.c:34: go->collider.posx = add(go->collider.posx, go->velx);
      0002F7 F8 12            [12]  797 	ldhl	sp,#18
      0002F9 2A               [ 8]  798 	ld	a, (hl+)
      0002FA 5F               [ 4]  799 	ld	e, a
      0002FB 56               [ 8]  800 	ld	d, (hl)
      0002FC 21 08 00         [12]  801 	ld	hl, #0x0008
      0002FF 19               [ 8]  802 	add	hl, de
      000300 E5               [16]  803 	push	hl
      000301 7D               [ 4]  804 	ld	a, l
      000302 F8 10            [12]  805 	ldhl	sp,	#16
      000304 77               [ 8]  806 	ld	(hl), a
      000305 E1               [12]  807 	pop	hl
      000306 7C               [ 4]  808 	ld	a, h
      000307 F8 0F            [12]  809 	ldhl	sp,	#15
      000309 77               [ 8]  810 	ld	(hl), a
      00030A F8 14            [12]  811 	ldhl	sp,#20
      00030C 2A               [ 8]  812 	ld	a, (hl+)
      00030D 5F               [ 4]  813 	ld	e, a
      00030E 56               [ 8]  814 	ld	d, (hl)
      00030F 1A               [ 8]  815 	ld	a, (de)
      000310 4F               [ 4]  816 	ld	c, a
      000311 13               [ 8]  817 	inc	de
      000312 1A               [ 8]  818 	ld	a, (de)
      000313 47               [ 4]  819 	ld	b, a
      000314 F8 0E            [12]  820 	ldhl	sp,#14
      000316 2A               [ 8]  821 	ld	a, (hl+)
      000317 5F               [ 4]  822 	ld	e, a
      000318 56               [ 8]  823 	ld	d, (hl)
      000319 1A               [ 8]  824 	ld	a, (de)
      00031A 6F               [ 4]  825 	ld	l, a
                                    826 ;	spillPairReg hl
                                    827 ;	spillPairReg hl
      00031B 13               [ 8]  828 	inc	de
      00031C 1A               [ 8]  829 	ld	a, (de)
      00031D 67               [ 4]  830 	ld	h, a
                                    831 ;	spillPairReg hl
                                    832 ;	spillPairReg hl
                                    833 ;fixed.c:13: return a + b;
      00031E 09               [ 8]  834 	add	hl, bc
      00031F 4D               [ 4]  835 	ld	c, l
      000320 44               [ 4]  836 	ld	b, h
                           000321   837 	C$GameObject.c$34$3_0$175	= .
                                    838 	.globl	C$GameObject.c$34$3_0$175
                                    839 ;GameObject.c:34: go->collider.posx = add(go->collider.posx, go->velx);
      000321 F8 0E            [12]  840 	ldhl	sp,	#14
      000323 2A               [ 8]  841 	ld	a,	(hl+)
      000324 66               [ 8]  842 	ld	h, (hl)
      000325 6F               [ 4]  843 	ld	l, a
      000326 79               [ 4]  844 	ld	a, c
      000327 22               [ 8]  845 	ld	(hl+), a
      000328 70               [ 8]  846 	ld	(hl), b
                           000329   847 	C$GameObject.c$35$1_0$165	= .
                                    848 	.globl	C$GameObject.c$35$1_0$165
                                    849 ;GameObject.c:35: go->posy = add(go->posy, go->vely);
      000329 F8 12            [12]  850 	ldhl	sp,#18
      00032B 2A               [ 8]  851 	ld	a, (hl+)
      00032C 5F               [ 4]  852 	ld	e, a
      00032D 56               [ 8]  853 	ld	d, (hl)
      00032E 21 02 00         [12]  854 	ld	hl, #0x0002
      000331 19               [ 8]  855 	add	hl, de
      000332 33               [ 8]  856 	inc	sp
      000333 33               [ 8]  857 	inc	sp
      000334 E5               [16]  858 	push	hl
      000335 F8 12            [12]  859 	ldhl	sp,#18
      000337 2A               [ 8]  860 	ld	a, (hl+)
      000338 5F               [ 4]  861 	ld	e, a
      000339 56               [ 8]  862 	ld	d, (hl)
      00033A 21 06 00         [12]  863 	ld	hl, #0x0006
      00033D 19               [ 8]  864 	add	hl, de
      00033E E5               [16]  865 	push	hl
      00033F 7D               [ 4]  866 	ld	a, l
      000340 F8 16            [12]  867 	ldhl	sp,	#22
      000342 77               [ 8]  868 	ld	(hl), a
      000343 E1               [12]  869 	pop	hl
      000344 7C               [ 4]  870 	ld	a, h
      000345 F8 15            [12]  871 	ldhl	sp,	#21
      000347 32               [ 8]  872 	ld	(hl-), a
      000348 2A               [ 8]  873 	ld	a, (hl+)
      000349 5F               [ 4]  874 	ld	e, a
      00034A 56               [ 8]  875 	ld	d, (hl)
      00034B 1A               [ 8]  876 	ld	a, (de)
      00034C 4F               [ 4]  877 	ld	c, a
      00034D 13               [ 8]  878 	inc	de
      00034E 1A               [ 8]  879 	ld	a, (de)
      00034F 47               [ 4]  880 	ld	b, a
      000350 D1               [12]  881 	pop	de
      000351 D5               [16]  882 	push	de
      000352 1A               [ 8]  883 	ld	a, (de)
      000353 6F               [ 4]  884 	ld	l, a
                                    885 ;	spillPairReg hl
                                    886 ;	spillPairReg hl
      000354 13               [ 8]  887 	inc	de
      000355 1A               [ 8]  888 	ld	a, (de)
      000356 67               [ 4]  889 	ld	h, a
                                    890 ;	spillPairReg hl
                                    891 ;	spillPairReg hl
                                    892 ;fixed.c:13: return a + b;
      000357 09               [ 8]  893 	add	hl, bc
      000358 4D               [ 4]  894 	ld	c, l
      000359 44               [ 4]  895 	ld	b, h
                           00035A   896 	C$GameObject.c$35$3_0$178	= .
                                    897 	.globl	C$GameObject.c$35$3_0$178
                                    898 ;GameObject.c:35: go->posy = add(go->posy, go->vely);
      00035A E1               [12]  899 	pop	hl
      00035B E5               [16]  900 	push	hl
      00035C 79               [ 4]  901 	ld	a, c
      00035D 22               [ 8]  902 	ld	(hl+), a
      00035E 70               [ 8]  903 	ld	(hl), b
                           00035F   904 	C$GameObject.c$36$1_0$165	= .
                                    905 	.globl	C$GameObject.c$36$1_0$165
                                    906 ;GameObject.c:36: go->collider.posy = add(go->collider.posy, go->vely);
      00035F F8 0E            [12]  907 	ldhl	sp,	#14
      000361 2A               [ 8]  908 	ld	a, (hl+)
      000362 4F               [ 4]  909 	ld	c, a
      000363 46               [ 8]  910 	ld	b, (hl)
      000364 03               [ 8]  911 	inc	bc
      000365 03               [ 8]  912 	inc	bc
      000366 F8 14            [12]  913 	ldhl	sp,#20
      000368 2A               [ 8]  914 	ld	a, (hl+)
      000369 5F               [ 4]  915 	ld	e, a
      00036A 56               [ 8]  916 	ld	d, (hl)
      00036B 1A               [ 8]  917 	ld	a, (de)
      00036C F8 0E            [12]  918 	ldhl	sp,	#14
      00036E 22               [ 8]  919 	ld	(hl+), a
      00036F 13               [ 8]  920 	inc	de
      000370 1A               [ 8]  921 	ld	a, (de)
      000371 77               [ 8]  922 	ld	(hl), a
      000372 59               [ 4]  923 	ld	e, c
      000373 50               [ 4]  924 	ld	d, b
      000374 1A               [ 8]  925 	ld	a, (de)
      000375 F8 14            [12]  926 	ldhl	sp,	#20
      000377 22               [ 8]  927 	ld	(hl+), a
      000378 13               [ 8]  928 	inc	de
      000379 1A               [ 8]  929 	ld	a, (de)
                                    930 ;fixed.c:13: return a + b;
      00037A 32               [ 8]  931 	ld	(hl-), a
      00037B 2A               [ 8]  932 	ld	a, (hl+)
      00037C 5F               [ 4]  933 	ld	e, a
      00037D 56               [ 8]  934 	ld	d, (hl)
      00037E F8 0E            [12]  935 	ldhl	sp,	#14
      000380 2A               [ 8]  936 	ld	a,	(hl+)
      000381 66               [ 8]  937 	ld	h, (hl)
      000382 6F               [ 4]  938 	ld	l, a
      000383 19               [ 8]  939 	add	hl, de
      000384 5D               [ 4]  940 	ld	e, l
      000385 54               [ 4]  941 	ld	d, h
                           000386   942 	C$GameObject.c$36$3_0$181	= .
                                    943 	.globl	C$GameObject.c$36$3_0$181
                                    944 ;GameObject.c:36: go->collider.posy = add(go->collider.posy, go->vely);
      000386 7B               [ 4]  945 	ld	a, e
      000387 02               [ 8]  946 	ld	(bc), a
      000388 03               [ 8]  947 	inc	bc
      000389 7A               [ 4]  948 	ld	a, d
      00038A 02               [ 8]  949 	ld	(bc), a
                           00038B   950 	C$GameObject.c$38$1_0$165	= .
                                    951 	.globl	C$GameObject.c$38$1_0$165
                                    952 ;GameObject.c:38: if (go->spriteSizex == 1 && go->spriteSizey == 1)
      00038B F8 12            [12]  953 	ldhl	sp,#18
      00038D 2A               [ 8]  954 	ld	a, (hl+)
      00038E 5F               [ 4]  955 	ld	e, a
      00038F 56               [ 8]  956 	ld	d, (hl)
      000390 21 11 00         [12]  957 	ld	hl, #0x0011
      000393 19               [ 8]  958 	add	hl, de
      000394 E5               [16]  959 	push	hl
      000395 7D               [ 4]  960 	ld	a, l
      000396 F8 04            [12]  961 	ldhl	sp,	#4
      000398 77               [ 8]  962 	ld	(hl), a
      000399 E1               [12]  963 	pop	hl
      00039A 7C               [ 4]  964 	ld	a, h
      00039B F8 03            [12]  965 	ldhl	sp,	#3
      00039D 32               [ 8]  966 	ld	(hl-), a
      00039E 2A               [ 8]  967 	ld	a, (hl+)
      00039F 5F               [ 4]  968 	ld	e, a
      0003A0 56               [ 8]  969 	ld	d, (hl)
      0003A1 1A               [ 8]  970 	ld	a, (de)
      0003A2 F8 0F            [12]  971 	ldhl	sp,	#15
      0003A4 77               [ 8]  972 	ld	(hl), a
      0003A5 F8 12            [12]  973 	ldhl	sp,#18
      0003A7 2A               [ 8]  974 	ld	a, (hl+)
      0003A8 5F               [ 4]  975 	ld	e, a
      0003A9 56               [ 8]  976 	ld	d, (hl)
      0003AA 21 12 00         [12]  977 	ld	hl, #0x0012
      0003AD 19               [ 8]  978 	add	hl, de
      0003AE 5D               [ 4]  979 	ld	e, l
      0003AF 54               [ 4]  980 	ld	d, h
                           0003B0   981 	C$GameObject.c$40$2_0$165	= .
                                    982 	.globl	C$GameObject.c$40$2_0$165
                                    983 ;GameObject.c:40: move_sprite(go->firstSprite, INT(go->posx) - INT(player->posx) + 84, INT(go->posy) - INT(player->posy) + 84);
      0003B0 F8 10            [12]  984 	ldhl	sp,	#16
      0003B2 2A               [ 8]  985 	ld	a, (hl+)
      0003B3 4F               [ 4]  986 	ld	c, a
      0003B4 2A               [ 8]  987 	ld	a, (hl+)
      0003B5 47               [ 4]  988 	ld	b, a
      0003B6 03               [ 8]  989 	inc	bc
      0003B7 03               [ 8]  990 	inc	bc
      0003B8 D5               [16]  991 	push	de
      0003B9 2A               [ 8]  992 	ld	a, (hl+)
      0003BA 5F               [ 4]  993 	ld	e, a
      0003BB 56               [ 8]  994 	ld	d, (hl)
      0003BC 21 10 00         [12]  995 	ld	hl, #0x0010
      0003BF 19               [ 8]  996 	add	hl, de
      0003C0 D1               [12]  997 	pop	de
      0003C1 E5               [16]  998 	push	hl
      0003C2 7D               [ 4]  999 	ld	a, l
      0003C3 F8 16            [12] 1000 	ldhl	sp,	#22
      0003C5 77               [ 8] 1001 	ld	(hl), a
      0003C6 E1               [12] 1002 	pop	hl
      0003C7 7C               [ 4] 1003 	ld	a, h
      0003C8 F8 15            [12] 1004 	ldhl	sp,	#21
      0003CA 77               [ 8] 1005 	ld	(hl), a
                           0003CB  1006 	C$GameObject.c$38$1_0$165	= .
                                   1007 	.globl	C$GameObject.c$38$1_0$165
                                   1008 ;GameObject.c:38: if (go->spriteSizex == 1 && go->spriteSizey == 1)
      0003CB F8 0F            [12] 1009 	ldhl	sp,	#15
      0003CD 7E               [ 8] 1010 	ld	a, (hl)
      0003CE 3D               [ 4] 1011 	dec	a
      0003CF 20 46            [12] 1012 	jr	NZ, 00125$
      0003D1 1A               [ 8] 1013 	ld	a, (de)
      0003D2 3D               [ 4] 1014 	dec	a
      0003D3 20 42            [12] 1015 	jr	NZ, 00125$
                                   1016 ;GameObject.c:40: move_sprite(go->firstSprite, INT(go->posx) - INT(player->posx) + 84, INT(go->posy) - INT(player->posy) + 84);
      0003D5 D1               [12] 1017 	pop	de
      0003D6 D5               [16] 1018 	push	de
      0003D7 1A               [ 8] 1019 	ld	a, (de)
                                   1020 ;	spillPairReg hl
                                   1021 ;	spillPairReg hl
      0003D8 13               [ 8] 1022 	inc	de
      0003D9 1A               [ 8] 1023 	ld	a, (de)
                                   1024 ;	spillPairReg hl
                                   1025 ;	spillPairReg hl
      0003DA F8 0F            [12] 1026 	ldhl	sp,	#15
      0003DC 77               [ 8] 1027 	ld	(hl), a
      0003DD 69               [ 4] 1028 	ld	l, c
      0003DE 60               [ 4] 1029 	ld	h, b
      0003DF 2A               [ 8] 1030 	ld	a, (hl+)
      0003E0 46               [ 8] 1031 	ld	b, (hl)
      0003E1 F8 0F            [12] 1032 	ldhl	sp,	#15
      0003E3 7E               [ 8] 1033 	ld	a, (hl)
      0003E4 90               [ 4] 1034 	sub	a, b
      0003E5 C6 54            [ 8] 1035 	add	a, #0x54
      0003E7 47               [ 4] 1036 	ld	b, a
      0003E8 F8 12            [12] 1037 	ldhl	sp,#18
      0003EA 2A               [ 8] 1038 	ld	a, (hl+)
      0003EB 5F               [ 4] 1039 	ld	e, a
      0003EC 56               [ 8] 1040 	ld	d, (hl)
      0003ED 1A               [ 8] 1041 	ld	a, (de)
                                   1042 ;	spillPairReg hl
                                   1043 ;	spillPairReg hl
      0003EE 13               [ 8] 1044 	inc	de
      0003EF 1A               [ 8] 1045 	ld	a, (de)
                                   1046 ;	spillPairReg hl
                                   1047 ;	spillPairReg hl
      0003F0 4F               [ 4] 1048 	ld	c, a
      0003F1 F8 10            [12] 1049 	ldhl	sp,#16
      0003F3 2A               [ 8] 1050 	ld	a, (hl+)
      0003F4 5F               [ 4] 1051 	ld	e, a
      0003F5 56               [ 8] 1052 	ld	d, (hl)
      0003F6 1A               [ 8] 1053 	ld	a, (de)
                                   1054 ;	spillPairReg hl
                                   1055 ;	spillPairReg hl
      0003F7 13               [ 8] 1056 	inc	de
      0003F8 1A               [ 8] 1057 	ld	a, (de)
      0003F9 5F               [ 4] 1058 	ld	e, a
      0003FA 79               [ 4] 1059 	ld	a, c
      0003FB 93               [ 4] 1060 	sub	a, e
      0003FC C6 54            [ 8] 1061 	add	a, #0x54
      0003FE 4F               [ 4] 1062 	ld	c, a
      0003FF F8 14            [12] 1063 	ldhl	sp,#20
      000401 2A               [ 8] 1064 	ld	a, (hl+)
      000402 5F               [ 4] 1065 	ld	e, a
      000403 56               [ 8] 1066 	ld	d, (hl)
      000404 1A               [ 8] 1067 	ld	a, (de)
      000405 77               [ 8] 1068 	ld	(hl), a
                                   1069 ;C:/gbdk-win64/gbdk/include/gb/gb.h:1675: OAM_item_t * itm = &shadow_OAM[nb];
      000406 5E               [ 8] 1070 	ld	e, (hl)
      000407 16 00            [ 8] 1071 	ld	d, #0x00
      000409 6B               [ 4] 1072 	ld	l, e
      00040A 62               [ 4] 1073 	ld	h, d
      00040B 29               [ 8] 1074 	add	hl, hl
      00040C 29               [ 8] 1075 	add	hl, hl
      00040D 11r00r00         [12] 1076 	ld	de, #_shadow_OAM
      000410 19               [ 8] 1077 	add	hl, de
                                   1078 ;C:/gbdk-win64/gbdk/include/gb/gb.h:1676: itm->y=y, itm->x=x;
      000411 70               [ 8] 1079 	ld	(hl), b
      000412 23               [ 8] 1080 	inc	hl
      000413 71               [ 8] 1081 	ld	(hl), c
                           000414  1082 	C$GameObject.c$41$2_0$166	= .
                                   1083 	.globl	C$GameObject.c$41$2_0$166
                                   1084 ;GameObject.c:41: return;
      000414 C3r0Br05         [16] 1085 	jp	00118$
                           000417  1086 	C$GameObject.c$43$2_0$165	= .
                                   1087 	.globl	C$GameObject.c$43$2_0$165
                                   1088 ;GameObject.c:43: for (int y = 0; y < go->spriteSizey; y++)
      000417                       1089 00125$:
      000417 F8 04            [12] 1090 	ldhl	sp,	#4
      000419 79               [ 4] 1091 	ld	a, c
      00041A 22               [ 8] 1092 	ld	(hl+), a
      00041B 70               [ 8] 1093 	ld	(hl), b
      00041C F8 14            [12] 1094 	ldhl	sp,	#20
      00041E 7E               [ 8] 1095 	ld	a, (hl)
      00041F F8 06            [12] 1096 	ldhl	sp,	#6
      000421 77               [ 8] 1097 	ld	(hl), a
      000422 F8 15            [12] 1098 	ldhl	sp,	#21
      000424 7E               [ 8] 1099 	ld	a, (hl)
      000425 F8 07            [12] 1100 	ldhl	sp,	#7
      000427 22               [ 8] 1101 	ld	(hl+), a
      000428 7B               [ 4] 1102 	ld	a, e
      000429 22               [ 8] 1103 	ld	(hl+), a
      00042A 72               [ 8] 1104 	ld	(hl), d
      00042B 01 00 00         [12] 1105 	ld	bc, #0x0000
      00042E                       1106 00116$:
      00042E F8 08            [12] 1107 	ldhl	sp,#8
      000430 2A               [ 8] 1108 	ld	a, (hl+)
      000431 5F               [ 4] 1109 	ld	e, a
      000432 56               [ 8] 1110 	ld	d, (hl)
      000433 1A               [ 8] 1111 	ld	a, (de)
      000434 6F               [ 4] 1112 	ld	l, a
                                   1113 ;	spillPairReg hl
                                   1114 ;	spillPairReg hl
      000435 07               [ 4] 1115 	rlca
      000436 9F               [ 4] 1116 	sbc	a, a
      000437 67               [ 4] 1117 	ld	h, a
                                   1118 ;	spillPairReg hl
                                   1119 ;	spillPairReg hl
      000438 5C               [ 4] 1120 	ld	e, h
      000439 50               [ 4] 1121 	ld	d, b
      00043A 79               [ 4] 1122 	ld	a, c
      00043B 95               [ 4] 1123 	sub	a, l
      00043C 78               [ 4] 1124 	ld	a, b
      00043D 9C               [ 4] 1125 	sbc	a, h
      00043E CB 7B            [ 8] 1126 	bit	7, e
      000440 28 07            [12] 1127 	jr	Z, 00156$
      000442 CB 7A            [ 8] 1128 	bit	7, d
      000444 20 08            [12] 1129 	jr	NZ, 00157$
      000446 BF               [ 4] 1130 	cp	a, a
      000447 18 05            [12] 1131 	jr	00157$
      000449                       1132 00156$:
      000449 CB 7A            [ 8] 1133 	bit	7, d
      00044B 28 01            [12] 1134 	jr	Z, 00157$
      00044D 37               [ 4] 1135 	scf
      00044E                       1136 00157$:
      00044E D2r0Br05         [16] 1137 	jp	NC, 00118$
                           000451  1138 	C$GameObject.c$45$2_0$165	= .
                                   1139 	.globl	C$GameObject.c$45$2_0$165
                                   1140 ;GameObject.c:45: for (int x = 0; x < go->spriteSizex; x++)
      000451 AF               [ 4] 1141 	xor	a, a
      000452 F8 14            [12] 1142 	ldhl	sp,	#20
      000454 22               [ 8] 1143 	ld	(hl+), a
      000455 77               [ 8] 1144 	ld	(hl), a
      000456                       1145 00113$:
      000456 F8 02            [12] 1146 	ldhl	sp,#2
      000458 2A               [ 8] 1147 	ld	a, (hl+)
      000459 5F               [ 4] 1148 	ld	e, a
      00045A 56               [ 8] 1149 	ld	d, (hl)
      00045B 1A               [ 8] 1150 	ld	a, (de)
      00045C F8 0A            [12] 1151 	ldhl	sp,	#10
      00045E 77               [ 8] 1152 	ld	(hl), a
      00045F 7E               [ 8] 1153 	ld	a, (hl)
      000460 F8 0E            [12] 1154 	ldhl	sp,	#14
      000462 22               [ 8] 1155 	ld	(hl+), a
      000463 07               [ 4] 1156 	rlca
      000464 9F               [ 4] 1157 	sbc	a, a
      000465 77               [ 8] 1158 	ld	(hl), a
      000466 F8 14            [12] 1159 	ldhl	sp,	#20
      000468 5D               [ 4] 1160 	ld	e, l
      000469 54               [ 4] 1161 	ld	d, h
      00046A F8 0E            [12] 1162 	ldhl	sp,	#14
      00046C 1A               [ 8] 1163 	ld	a, (de)
      00046D 13               [ 8] 1164 	inc	de
      00046E 96               [ 8] 1165 	sub	a, (hl)
      00046F 23               [ 8] 1166 	inc	hl
      000470 1A               [ 8] 1167 	ld	a, (de)
      000471 9E               [ 8] 1168 	sbc	a, (hl)
      000472 1A               [ 8] 1169 	ld	a, (de)
      000473 57               [ 4] 1170 	ld	d, a
      000474 CB 7E            [12] 1171 	bit	7, (hl)
      000476 28 07            [12] 1172 	jr	Z, 00158$
      000478 CB 7A            [ 8] 1173 	bit	7, d
      00047A 20 08            [12] 1174 	jr	NZ, 00159$
      00047C BF               [ 4] 1175 	cp	a, a
      00047D 18 05            [12] 1176 	jr	00159$
      00047F                       1177 00158$:
      00047F CB 7A            [ 8] 1178 	bit	7, d
      000481 28 01            [12] 1179 	jr	Z, 00159$
      000483 37               [ 4] 1180 	scf
      000484                       1181 00159$:
      000484 D2r07r05         [16] 1182 	jp	NC, 00117$
                                   1183 ;GameObject.c:47: move_sprite(go->firstSprite + y * go->spriteSizex + x, INT(go->posx) + x * 8 - INT(player->posx) + 84, INT(go->posy) + y * 8 - INT(player->posy) + 84);
      000487 D1               [12] 1184 	pop	de
      000488 D5               [16] 1185 	push	de
      000489 1A               [ 8] 1186 	ld	a, (de)
                                   1187 ;	spillPairReg hl
                                   1188 ;	spillPairReg hl
      00048A 13               [ 8] 1189 	inc	de
      00048B 1A               [ 8] 1190 	ld	a, (de)
      00048C 5F               [ 4] 1191 	ld	e, a
      00048D F8 0B            [12] 1192 	ldhl	sp,	#11
      00048F 71               [ 8] 1193 	ld	(hl), c
      000490 7E               [ 8] 1194 	ld	a, (hl)
      000491 87               [ 4] 1195 	add	a, a
      000492 87               [ 4] 1196 	add	a, a
      000493 87               [ 4] 1197 	add	a, a
      000494 83               [ 4] 1198 	add	a, e
      000495 F8 0F            [12] 1199 	ldhl	sp,	#15
      000497 77               [ 8] 1200 	ld	(hl), a
      000498 F8 04            [12] 1201 	ldhl	sp,#4
      00049A 2A               [ 8] 1202 	ld	a, (hl+)
      00049B 5F               [ 4] 1203 	ld	e, a
      00049C 56               [ 8] 1204 	ld	d, (hl)
      00049D 1A               [ 8] 1205 	ld	a, (de)
                                   1206 ;	spillPairReg hl
                                   1207 ;	spillPairReg hl
      00049E 13               [ 8] 1208 	inc	de
      00049F 1A               [ 8] 1209 	ld	a, (de)
      0004A0 5F               [ 4] 1210 	ld	e, a
      0004A1 F8 0F            [12] 1211 	ldhl	sp,	#15
      0004A3 7E               [ 8] 1212 	ld	a, (hl)
      0004A4 93               [ 4] 1213 	sub	a, e
      0004A5 C6 54            [ 8] 1214 	add	a, #0x54
      0004A7 F8 0C            [12] 1215 	ldhl	sp,	#12
      0004A9 77               [ 8] 1216 	ld	(hl), a
      0004AA F8 12            [12] 1217 	ldhl	sp,#18
      0004AC 2A               [ 8] 1218 	ld	a, (hl+)
      0004AD 5F               [ 4] 1219 	ld	e, a
      0004AE 56               [ 8] 1220 	ld	d, (hl)
      0004AF 1A               [ 8] 1221 	ld	a, (de)
                                   1222 ;	spillPairReg hl
                                   1223 ;	spillPairReg hl
      0004B0 13               [ 8] 1224 	inc	de
      0004B1 1A               [ 8] 1225 	ld	a, (de)
      0004B2 5F               [ 4] 1226 	ld	e, a
      0004B3 F8 14            [12] 1227 	ldhl	sp,	#20
      0004B5 7E               [ 8] 1228 	ld	a, (hl)
      0004B6 F8 0D            [12] 1229 	ldhl	sp,	#13
      0004B8 77               [ 8] 1230 	ld	(hl), a
      0004B9 2A               [ 8] 1231 	ld	a, (hl+)
      0004BA 23               [ 8] 1232 	inc	hl
      0004BB 87               [ 4] 1233 	add	a, a
      0004BC 87               [ 4] 1234 	add	a, a
      0004BD 87               [ 4] 1235 	add	a, a
      0004BE 83               [ 4] 1236 	add	a, e
      0004BF 22               [ 8] 1237 	ld	(hl+), a
      0004C0 2A               [ 8] 1238 	ld	a, (hl+)
      0004C1 5F               [ 4] 1239 	ld	e, a
      0004C2 56               [ 8] 1240 	ld	d, (hl)
      0004C3 1A               [ 8] 1241 	ld	a, (de)
                                   1242 ;	spillPairReg hl
                                   1243 ;	spillPairReg hl
      0004C4 13               [ 8] 1244 	inc	de
      0004C5 1A               [ 8] 1245 	ld	a, (de)
      0004C6 5F               [ 4] 1246 	ld	e, a
      0004C7 F8 0F            [12] 1247 	ldhl	sp,	#15
      0004C9 3A               [ 8] 1248 	ld	a, (hl-)
      0004CA 93               [ 4] 1249 	sub	a, e
      0004CB C6 54            [ 8] 1250 	add	a, #0x54
      0004CD 77               [ 8] 1251 	ld	(hl), a
      0004CE F8 06            [12] 1252 	ldhl	sp,#6
      0004D0 2A               [ 8] 1253 	ld	a, (hl+)
      0004D1 5F               [ 4] 1254 	ld	e, a
      0004D2 56               [ 8] 1255 	ld	d, (hl)
      0004D3 1A               [ 8] 1256 	ld	a, (de)
      0004D4 F8 0F            [12] 1257 	ldhl	sp,	#15
      0004D6 77               [ 8] 1258 	ld	(hl), a
      0004D7 C5               [16] 1259 	push	bc
      0004D8 F8 0C            [12] 1260 	ldhl	sp,	#12
      0004DA 2A               [ 8] 1261 	ld	a, (hl+)
      0004DB 5F               [ 4] 1262 	ld	e, a
      0004DC 7E               [ 8] 1263 	ld	a, (hl)
      0004DD CDr00r00         [24] 1264 	call	__mulschar
      0004E0 79               [ 4] 1265 	ld	a, c
      0004E1 C1               [12] 1266 	pop	bc
      0004E2 F8 0F            [12] 1267 	ldhl	sp,	#15
      0004E4 86               [ 8] 1268 	add	a, (hl)
      0004E5 2B               [ 8] 1269 	dec	hl
      0004E6 2B               [ 8] 1270 	dec	hl
      0004E7 86               [ 8] 1271 	add	a, (hl)
      0004E8 5F               [ 4] 1272 	ld	e, a
                                   1273 ;C:/gbdk-win64/gbdk/include/gb/gb.h:1675: OAM_item_t * itm = &shadow_OAM[nb];
      0004E9 26 00            [ 8] 1274 	ld	h, #0x00
                                   1275 ;	spillPairReg hl
                                   1276 ;	spillPairReg hl
      0004EB 6B               [ 4] 1277 	ld	l, e
      0004EC 29               [ 8] 1278 	add	hl, hl
      0004ED 29               [ 8] 1279 	add	hl, hl
      0004EE 11r00r00         [12] 1280 	ld	de, #_shadow_OAM
      0004F1 19               [ 8] 1281 	add	hl, de
      0004F2 5D               [ 4] 1282 	ld	e, l
      0004F3 54               [ 4] 1283 	ld	d, h
                                   1284 ;C:/gbdk-win64/gbdk/include/gb/gb.h:1676: itm->y=y, itm->x=x;
      0004F4 F8 0C            [12] 1285 	ldhl	sp,	#12
      0004F6 2A               [ 8] 1286 	ld	a, (hl+)
      0004F7 23               [ 8] 1287 	inc	hl
      0004F8 12               [ 8] 1288 	ld	(de), a
      0004F9 13               [ 8] 1289 	inc	de
      0004FA 7E               [ 8] 1290 	ld	a, (hl)
      0004FB 12               [ 8] 1291 	ld	(de), a
                           0004FC  1292 	C$GameObject.c$45$4_0$169	= .
                                   1293 	.globl	C$GameObject.c$45$4_0$169
                                   1294 ;GameObject.c:45: for (int x = 0; x < go->spriteSizex; x++)
      0004FC F8 14            [12] 1295 	ldhl	sp,	#20
      0004FE 34               [12] 1296 	inc	(hl)
      0004FF C2r56r04         [16] 1297 	jp	NZ,00113$
      000502 23               [ 8] 1298 	inc	hl
      000503 34               [12] 1299 	inc	(hl)
      000504 C3r56r04         [16] 1300 	jp	00113$
      000507                       1301 00117$:
                           000507  1302 	C$GameObject.c$43$2_0$167	= .
                                   1303 	.globl	C$GameObject.c$43$2_0$167
                                   1304 ;GameObject.c:43: for (int y = 0; y < go->spriteSizey; y++)
      000507 03               [ 8] 1305 	inc	bc
      000508 C3r2Er04         [16] 1306 	jp	00116$
      00050B                       1307 00118$:
                           00050B  1308 	C$GameObject.c$50$2_0$165	= .
                                   1309 	.globl	C$GameObject.c$50$2_0$165
                                   1310 ;GameObject.c:50: }
      00050B E8 16            [16] 1311 	add	sp, #22
                           00050D  1312 	C$GameObject.c$50$2_0$165	= .
                                   1313 	.globl	C$GameObject.c$50$2_0$165
                           00050D  1314 	XG$updateGameObject$0$0	= .
                                   1315 	.globl	XG$updateGameObject$0$0
      00050D C9               [16] 1316 	ret
                           00050E  1317 	G$applyDragToGameObject$0$0	= .
                                   1318 	.globl	G$applyDragToGameObject$0$0
                           00050E  1319 	C$GameObject.c$58$2_0$198	= .
                                   1320 	.globl	C$GameObject.c$58$2_0$198
                                   1321 ;GameObject.c:58: void applyDragToGameObject(GameObject* go, int8_t dragRatioShifts)
                                   1322 ;	---------------------------------
                                   1323 ; Function applyDragToGameObject
                                   1324 ; ---------------------------------
      00050E                       1325 _applyDragToGameObject::
      00050E E8 FB            [16] 1326 	add	sp, #-5
      000510 F8 03            [12] 1327 	ldhl	sp,	#3
      000512 73               [ 8] 1328 	ld	(hl), e
      000513 23               [ 8] 1329 	inc	hl
      000514 72               [ 8] 1330 	ld	(hl), d
      000515 2B               [ 8] 1331 	dec	hl
      000516 2B               [ 8] 1332 	dec	hl
                           000517  1333 	C$GameObject.c$60$1_0$198	= .
                                   1334 	.globl	C$GameObject.c$60$1_0$198
                                   1335 ;GameObject.c:60: if (go->velx != 0)
      000517 22               [ 8] 1336 	ld	(hl+), a
      000518 2A               [ 8] 1337 	ld	a, (hl+)
      000519 5F               [ 4] 1338 	ld	e, a
      00051A 56               [ 8] 1339 	ld	d, (hl)
      00051B 21 04 00         [12] 1340 	ld	hl, #0x0004
      00051E 19               [ 8] 1341 	add	hl, de
      00051F 33               [ 8] 1342 	inc	sp
      000520 33               [ 8] 1343 	inc	sp
      000521 5D               [ 4] 1344 	ld	e, l
      000522 54               [ 4] 1345 	ld	d, h
      000523 D5               [16] 1346 	push	de
      000524 1A               [ 8] 1347 	ld	a, (de)
      000525 4F               [ 4] 1348 	ld	c, a
      000526 13               [ 8] 1349 	inc	de
      000527 1A               [ 8] 1350 	ld	a, (de)
      000528 47               [ 4] 1351 	ld	b, a
      000529 B1               [ 4] 1352 	or	a, c
      00052A 28 23            [12] 1353 	jr	Z, 00102$
                           00052C  1354 	C$GameObject.c$62$2_0$199	= .
                                   1355 	.globl	C$GameObject.c$62$2_0$199
                                   1356 ;GameObject.c:62: fixed16 shiftedx = go->velx >> dragRatioShifts;
      00052C F8 02            [12] 1357 	ldhl	sp,	#2
      00052E 7E               [ 8] 1358 	ld	a, (hl)
      00052F F5               [16] 1359 	push	af
      000530 59               [ 4] 1360 	ld	e, c
      000531 50               [ 4] 1361 	ld	d, b
      000532 F1               [12] 1362 	pop	af
      000533 3C               [ 4] 1363 	inc	a
      000534 18 04            [12] 1364 	jr	00134$
      000536                       1365 00133$:
      000536 CB 2A            [ 8] 1366 	sra	d
      000538 CB 1B            [ 8] 1367 	rr	e
      00053A                       1368 00134$:
      00053A 3D               [ 4] 1369 	dec	a
      00053B 20 F9            [12] 1370 	jr	NZ, 00133$
                           00053D  1371 	C$GameObject.c$63$2_0$199	= .
                                   1372 	.globl	C$GameObject.c$63$2_0$199
                                   1373 ;GameObject.c:63: go->velx = sub(go->velx, shiftedx != 0 ? shiftedx : 1);
      00053D 7A               [ 4] 1374 	ld	a, d
      00053E B3               [ 4] 1375 	or	a, e
      00053F 20 03            [12] 1376 	jr	NZ, 00110$
      000541 11 01 00         [12] 1377 	ld	de, #0x0001
      000544                       1378 00110$:
                                   1379 ;fixed.c:17: return a - b;
      000544 79               [ 4] 1380 	ld	a, c
      000545 93               [ 4] 1381 	sub	a, e
      000546 4F               [ 4] 1382 	ld	c, a
      000547 78               [ 4] 1383 	ld	a, b
      000548 9A               [ 4] 1384 	sbc	a, d
      000549 47               [ 4] 1385 	ld	b, a
                           00054A  1386 	C$GameObject.c$63$4_0$202	= .
                                   1387 	.globl	C$GameObject.c$63$4_0$202
                                   1388 ;GameObject.c:63: go->velx = sub(go->velx, shiftedx != 0 ? shiftedx : 1);
      00054A E1               [12] 1389 	pop	hl
      00054B E5               [16] 1390 	push	hl
      00054C 79               [ 4] 1391 	ld	a, c
      00054D 22               [ 8] 1392 	ld	(hl+), a
      00054E 70               [ 8] 1393 	ld	(hl), b
      00054F                       1394 00102$:
                           00054F  1395 	C$GameObject.c$65$1_0$198	= .
                                   1396 	.globl	C$GameObject.c$65$1_0$198
                                   1397 ;GameObject.c:65: if (go->vely != 0)
      00054F F8 03            [12] 1398 	ldhl	sp,#3
      000551 2A               [ 8] 1399 	ld	a, (hl+)
      000552 5F               [ 4] 1400 	ld	e, a
      000553 56               [ 8] 1401 	ld	d, (hl)
      000554 21 06 00         [12] 1402 	ld	hl, #0x0006
      000557 19               [ 8] 1403 	add	hl, de
      000558 33               [ 8] 1404 	inc	sp
      000559 33               [ 8] 1405 	inc	sp
      00055A 5D               [ 4] 1406 	ld	e, l
      00055B 54               [ 4] 1407 	ld	d, h
      00055C D5               [16] 1408 	push	de
      00055D 1A               [ 8] 1409 	ld	a, (de)
      00055E 4F               [ 4] 1410 	ld	c, a
      00055F 13               [ 8] 1411 	inc	de
      000560 1A               [ 8] 1412 	ld	a, (de)
      000561 47               [ 4] 1413 	ld	b, a
      000562 B1               [ 4] 1414 	or	a, c
      000563 28 23            [12] 1415 	jr	Z, 00107$
                           000565  1416 	C$GameObject.c$67$2_0$200	= .
                                   1417 	.globl	C$GameObject.c$67$2_0$200
                                   1418 ;GameObject.c:67: fixed16 shiftedy = go->vely >> dragRatioShifts;
      000565 F8 02            [12] 1419 	ldhl	sp,	#2
      000567 7E               [ 8] 1420 	ld	a, (hl)
      000568 F5               [16] 1421 	push	af
      000569 59               [ 4] 1422 	ld	e, c
      00056A 50               [ 4] 1423 	ld	d, b
      00056B F1               [12] 1424 	pop	af
      00056C 3C               [ 4] 1425 	inc	a
      00056D 18 04            [12] 1426 	jr	00136$
      00056F                       1427 00135$:
      00056F CB 2A            [ 8] 1428 	sra	d
      000571 CB 1B            [ 8] 1429 	rr	e
      000573                       1430 00136$:
      000573 3D               [ 4] 1431 	dec	a
      000574 20 F9            [12] 1432 	jr	NZ, 00135$
                           000576  1433 	C$GameObject.c$68$2_0$200	= .
                                   1434 	.globl	C$GameObject.c$68$2_0$200
                                   1435 ;GameObject.c:68: go->vely = sub(go->vely, shiftedy != 0 ? shiftedy : 1);
      000576 7A               [ 4] 1436 	ld	a, d
      000577 B3               [ 4] 1437 	or	a, e
      000578 20 03            [12] 1438 	jr	NZ, 00112$
      00057A 11 01 00         [12] 1439 	ld	de, #0x0001
      00057D                       1440 00112$:
      00057D 79               [ 4] 1441 	ld	a, c
                                   1442 ;fixed.c:17: return a - b;
      00057E 93               [ 4] 1443 	sub	a, e
      00057F 4F               [ 4] 1444 	ld	c, a
      000580 78               [ 4] 1445 	ld	a, b
      000581 9A               [ 4] 1446 	sbc	a, d
      000582 47               [ 4] 1447 	ld	b, a
                           000583  1448 	C$GameObject.c$68$4_0$205	= .
                                   1449 	.globl	C$GameObject.c$68$4_0$205
                                   1450 ;GameObject.c:68: go->vely = sub(go->vely, shiftedy != 0 ? shiftedy : 1);
      000583 E1               [12] 1451 	pop	hl
      000584 E5               [16] 1452 	push	hl
      000585 79               [ 4] 1453 	ld	a, c
      000586 22               [ 8] 1454 	ld	(hl+), a
      000587 70               [ 8] 1455 	ld	(hl), b
      000588                       1456 00107$:
                           000588  1457 	C$GameObject.c$70$1_0$198	= .
                                   1458 	.globl	C$GameObject.c$70$1_0$198
                                   1459 ;GameObject.c:70: }
      000588 E8 05            [16] 1460 	add	sp, #5
                           00058A  1461 	C$GameObject.c$70$1_0$198	= .
                                   1462 	.globl	C$GameObject.c$70$1_0$198
                           00058A  1463 	XG$applyDragToGameObject$0$0	= .
                                   1464 	.globl	XG$applyDragToGameObject$0$0
      00058A C9               [16] 1465 	ret
                           00058B  1466 	G$setRotatedSprite$0$0	= .
                                   1467 	.globl	G$setRotatedSprite$0$0
                           00058B  1468 	C$GameObject.c$72$1_0$208	= .
                                   1469 	.globl	C$GameObject.c$72$1_0$208
                                   1470 ;GameObject.c:72: void setRotatedSprite(int8_t sprite, int8_t tile, fixed16 x, fixed16 y)
                                   1471 ;	---------------------------------
                                   1472 ; Function setRotatedSprite
                                   1473 ; ---------------------------------
      00058B                       1474 _setRotatedSprite::
      00058B E8 F1            [16] 1475 	add	sp, #-15
      00058D F8 0E            [12] 1476 	ldhl	sp,	#14
      00058F 32               [ 8] 1477 	ld	(hl-), a
      000590 73               [ 8] 1478 	ld	(hl), e
                           000591  1479 	C$GameObject.c$74$1_0$208	= .
                                   1480 	.globl	C$GameObject.c$74$1_0$208
                                   1481 ;GameObject.c:74: if (x == FIXED(0) && y == FIXED(0))
      000591 F8 12            [12] 1482 	ldhl	sp,	#18
      000593 3A               [ 8] 1483 	ld	a, (hl-)
      000594 B6               [ 8] 1484 	or	a, (hl)
      000595 20 07            [12] 1485 	jr	NZ, 00102$
      000597 F8 14            [12] 1486 	ldhl	sp,	#20
      000599 3A               [ 8] 1487 	ld	a, (hl-)
      00059A B6               [ 8] 1488 	or	a, (hl)
                           00059B  1489 	C$GameObject.c$76$2_0$209	= .
                                   1490 	.globl	C$GameObject.c$76$2_0$209
                                   1491 ;GameObject.c:76: return;
      00059B CAr06r08         [16] 1492 	jp	Z,00132$
      00059E                       1493 00102$:
                                   1494 ;GameObject.c:78: BOOLEAN xsmaller = abs(x) < abs(y);
      00059E F8 11            [12] 1495 	ldhl	sp,	#17
      0005A0 7E               [ 8] 1496 	ld	a, (hl)
      0005A1 F8 08            [12] 1497 	ldhl	sp,	#8
      0005A3 77               [ 8] 1498 	ld	(hl), a
      0005A4 F8 12            [12] 1499 	ldhl	sp,	#18
      0005A6 7E               [ 8] 1500 	ld	a, (hl)
      0005A7 F8 09            [12] 1501 	ldhl	sp,	#9
      0005A9 32               [ 8] 1502 	ld	(hl-), a
      0005AA 7E               [ 8] 1503 	ld	a, (hl)
      0005AB F8 02            [12] 1504 	ldhl	sp,	#2
      0005AD 77               [ 8] 1505 	ld	(hl), a
      0005AE F8 09            [12] 1506 	ldhl	sp,	#9
      0005B0 7E               [ 8] 1507 	ld	a, (hl)
      0005B1 F8 03            [12] 1508 	ldhl	sp,	#3
      0005B3 77               [ 8] 1509 	ld	(hl), a
      0005B4 CB 7E            [12] 1510 	bit	7, (hl)
      0005B6 20 0E            [12] 1511 	jr	NZ, 00111$
      0005B8 F8 08            [12] 1512 	ldhl	sp,	#8
      0005BA 7E               [ 8] 1513 	ld	a, (hl)
      0005BB F8 00            [12] 1514 	ldhl	sp,	#0
      0005BD 77               [ 8] 1515 	ld	(hl), a
      0005BE F8 09            [12] 1516 	ldhl	sp,	#9
      0005C0 7E               [ 8] 1517 	ld	a, (hl)
      0005C1 F8 01            [12] 1518 	ldhl	sp,	#1
      0005C3 77               [ 8] 1519 	ld	(hl), a
      0005C4 18 1B            [12] 1520 	jr	00113$
      0005C6                       1521 00111$:
      0005C6 11 00 00         [12] 1522 	ld	de, #0x0000
      0005C9 F8 08            [12] 1523 	ldhl	sp,	#8
      0005CB 2A               [ 8] 1524 	ld	a,	(hl+)
      0005CC 66               [ 8] 1525 	ld	h, (hl)
      0005CD 6F               [ 4] 1526 	ld	l, a
      0005CE 7B               [ 4] 1527 	ld	a, e
      0005CF 95               [ 4] 1528 	sub	a, l
      0005D0 5F               [ 4] 1529 	ld	e, a
      0005D1 7A               [ 4] 1530 	ld	a, d
      0005D2 9C               [ 4] 1531 	sbc	a, h
      0005D3 F8 0C            [12] 1532 	ldhl	sp,	#12
      0005D5 32               [ 8] 1533 	ld	(hl-), a
      0005D6 73               [ 8] 1534 	ld	(hl), e
      0005D7 7E               [ 8] 1535 	ld	a, (hl)
      0005D8 F8 00            [12] 1536 	ldhl	sp,	#0
      0005DA 77               [ 8] 1537 	ld	(hl), a
      0005DB F8 0C            [12] 1538 	ldhl	sp,	#12
      0005DD 7E               [ 8] 1539 	ld	a, (hl)
      0005DE F8 01            [12] 1540 	ldhl	sp,	#1
      0005E0 77               [ 8] 1541 	ld	(hl), a
      0005E1                       1542 00113$:
      0005E1 F8 13            [12] 1543 	ldhl	sp,	#19
      0005E3 7E               [ 8] 1544 	ld	a, (hl)
      0005E4 F8 0B            [12] 1545 	ldhl	sp,	#11
      0005E6 77               [ 8] 1546 	ld	(hl), a
      0005E7 F8 14            [12] 1547 	ldhl	sp,	#20
      0005E9 7E               [ 8] 1548 	ld	a, (hl)
      0005EA F8 0C            [12] 1549 	ldhl	sp,	#12
      0005EC 32               [ 8] 1550 	ld	(hl-), a
      0005ED 7E               [ 8] 1551 	ld	a, (hl)
      0005EE F8 04            [12] 1552 	ldhl	sp,	#4
      0005F0 77               [ 8] 1553 	ld	(hl), a
      0005F1 F8 0C            [12] 1554 	ldhl	sp,	#12
      0005F3 7E               [ 8] 1555 	ld	a, (hl)
      0005F4 F8 05            [12] 1556 	ldhl	sp,	#5
      0005F6 77               [ 8] 1557 	ld	(hl), a
      0005F7 CB 7E            [12] 1558 	bit	7, (hl)
      0005F9 20 07            [12] 1559 	jr	NZ, 00115$
      0005FB F8 0B            [12] 1560 	ldhl	sp,	#11
      0005FD 2A               [ 8] 1561 	ld	a, (hl+)
      0005FE 4F               [ 4] 1562 	ld	c, a
      0005FF 46               [ 8] 1563 	ld	b, (hl)
      000600 18 14            [12] 1564 	jr	00117$
      000602                       1565 00115$:
      000602 11 00 00         [12] 1566 	ld	de, #0x0000
      000605 F8 0B            [12] 1567 	ldhl	sp,	#11
      000607 2A               [ 8] 1568 	ld	a,	(hl+)
      000608 66               [ 8] 1569 	ld	h, (hl)
      000609 6F               [ 4] 1570 	ld	l, a
      00060A 7B               [ 4] 1571 	ld	a, e
      00060B 95               [ 4] 1572 	sub	a, l
      00060C 5F               [ 4] 1573 	ld	e, a
      00060D 7A               [ 4] 1574 	ld	a, d
      00060E 9C               [ 4] 1575 	sbc	a, h
      00060F F8 07            [12] 1576 	ldhl	sp,	#7
      000611 32               [ 8] 1577 	ld	(hl-), a
      000612 73               [ 8] 1578 	ld	(hl), e
      000613 2A               [ 8] 1579 	ld	a, (hl+)
      000614 4F               [ 4] 1580 	ld	c, a
      000615 46               [ 8] 1581 	ld	b, (hl)
      000616                       1582 00117$:
      000616 F8 00            [12] 1583 	ldhl	sp,	#0
      000618 2A               [ 8] 1584 	ld	a, (hl+)
      000619 91               [ 4] 1585 	sub	a, c
      00061A 7E               [ 8] 1586 	ld	a, (hl)
      00061B 98               [ 4] 1587 	sbc	a, b
      00061C 56               [ 8] 1588 	ld	d, (hl)
      00061D 78               [ 4] 1589 	ld	a, b
      00061E CB 7F            [ 8] 1590 	bit	7,a
      000620 28 07            [12] 1591 	jr	Z, 00216$
      000622 CB 7A            [ 8] 1592 	bit	7, d
      000624 20 08            [12] 1593 	jr	NZ, 00217$
      000626 BF               [ 4] 1594 	cp	a, a
      000627 18 05            [12] 1595 	jr	00217$
      000629                       1596 00216$:
      000629 CB 7A            [ 8] 1597 	bit	7, d
      00062B 28 01            [12] 1598 	jr	Z, 00217$
      00062D 37               [ 4] 1599 	scf
      00062E                       1600 00217$:
      00062E 3E 00            [ 8] 1601 	ld	a, #0x00
      000630 17               [ 4] 1602 	rla
      000631 F8 0A            [12] 1603 	ldhl	sp,	#10
      000633 77               [ 8] 1604 	ld	(hl), a
                                   1605 ;GameObject.c:79: if ((abs(xsmaller ? x : y) << 1) < abs(xsmaller ? y : x))
      000634 7E               [ 8] 1606 	ld	a, (hl)
      000635 B7               [ 4] 1607 	or	a, a
      000636 28 07            [12] 1608 	jr	Z, 00134$
      000638 2B               [ 8] 1609 	dec	hl
      000639 2B               [ 8] 1610 	dec	hl
      00063A 2A               [ 8] 1611 	ld	a, (hl+)
      00063B 4F               [ 4] 1612 	ld	c, a
      00063C 46               [ 8] 1613 	ld	b, (hl)
      00063D 18 05            [12] 1614 	jr	00135$
      00063F                       1615 00134$:
      00063F F8 0B            [12] 1616 	ldhl	sp,	#11
      000641 2A               [ 8] 1617 	ld	a, (hl+)
      000642 4F               [ 4] 1618 	ld	c, a
      000643 46               [ 8] 1619 	ld	b, (hl)
      000644                       1620 00135$:
                                   1621 ;fixed.c:30: if (a >= 0)
                                   1622 ;	spillPairReg hl
                                   1623 ;	spillPairReg hl
      000644 60               [ 4] 1624 	ld	h, b
                                   1625 ;	spillPairReg hl
                                   1626 ;	spillPairReg hl
      000645 CB 7C            [ 8] 1627 	bit	7, h
                                   1628 ;fixed.c:32: return a;
      000647 28 06            [12] 1629 	jr	Z, 00121$
                                   1630 ;fixed.c:36: return -a;
      000649 AF               [ 4] 1631 	xor	a, a
      00064A 91               [ 4] 1632 	sub	a, c
      00064B 4F               [ 4] 1633 	ld	c, a
      00064C 9F               [ 4] 1634 	sbc	a, a
      00064D 90               [ 4] 1635 	sub	a, b
      00064E 47               [ 4] 1636 	ld	b, a
                                   1637 ;GameObject.c:79: if ((abs(xsmaller ? x : y) << 1) < abs(xsmaller ? y : x))
      00064F                       1638 00121$:
      00064F CB 21            [ 8] 1639 	sla	c
      000651 CB 10            [ 8] 1640 	rl	b
      000653 F8 06            [12] 1641 	ldhl	sp,	#6
      000655 79               [ 4] 1642 	ld	a, c
      000656 22               [ 8] 1643 	ld	(hl+), a
      000657 70               [ 8] 1644 	ld	(hl), b
      000658 F8 0A            [12] 1645 	ldhl	sp,	#10
      00065A 7E               [ 8] 1646 	ld	a, (hl)
      00065B B7               [ 4] 1647 	or	a, a
      00065C 20 0B            [12] 1648 	jr	NZ, 00137$
      00065E F8 08            [12] 1649 	ldhl	sp,	#8
      000660 7E               [ 8] 1650 	ld	a, (hl)
      000661 F8 0B            [12] 1651 	ldhl	sp,	#11
      000663 32               [ 8] 1652 	ld	(hl-), a
      000664 2B               [ 8] 1653 	dec	hl
      000665 7E               [ 8] 1654 	ld	a, (hl)
      000666 F8 0C            [12] 1655 	ldhl	sp,	#12
      000668 77               [ 8] 1656 	ld	(hl), a
      000669                       1657 00137$:
      000669 F8 0B            [12] 1658 	ldhl	sp,	#11
      00066B 7E               [ 8] 1659 	ld	a, (hl)
      00066C F8 08            [12] 1660 	ldhl	sp,	#8
      00066E 77               [ 8] 1661 	ld	(hl), a
      00066F F8 0C            [12] 1662 	ldhl	sp,	#12
      000671 7E               [ 8] 1663 	ld	a, (hl)
      000672 F8 09            [12] 1664 	ldhl	sp,	#9
                                   1665 ;fixed.c:30: if (a >= 0)
      000674 32               [ 8] 1666 	ld	(hl-), a
      000675 2A               [ 8] 1667 	ld	a, (hl+)
      000676 CB 7E            [12] 1668 	bit	7, (hl)
      000678 20 0C            [12] 1669 	jr	NZ, 00123$
                                   1670 ;fixed.c:32: return a;
      00067A 2B               [ 8] 1671 	dec	hl
      00067B 7E               [ 8] 1672 	ld	a, (hl)
      00067C F8 0B            [12] 1673 	ldhl	sp,	#11
      00067E 32               [ 8] 1674 	ld	(hl-), a
      00067F 2B               [ 8] 1675 	dec	hl
      000680 7E               [ 8] 1676 	ld	a, (hl)
      000681 F8 0C            [12] 1677 	ldhl	sp,	#12
      000683 77               [ 8] 1678 	ld	(hl), a
      000684 18 11            [12] 1679 	jr	00125$
      000686                       1680 00123$:
                                   1681 ;fixed.c:36: return -a;
      000686 11 00 00         [12] 1682 	ld	de, #0x0000
      000689 F8 08            [12] 1683 	ldhl	sp,	#8
      00068B 2A               [ 8] 1684 	ld	a,	(hl+)
      00068C 66               [ 8] 1685 	ld	h, (hl)
      00068D 6F               [ 4] 1686 	ld	l, a
      00068E 7B               [ 4] 1687 	ld	a, e
      00068F 95               [ 4] 1688 	sub	a, l
      000690 5F               [ 4] 1689 	ld	e, a
      000691 7A               [ 4] 1690 	ld	a, d
      000692 9C               [ 4] 1691 	sbc	a, h
      000693 F8 0C            [12] 1692 	ldhl	sp,	#12
      000695 32               [ 8] 1693 	ld	(hl-), a
      000696 73               [ 8] 1694 	ld	(hl), e
                                   1695 ;GameObject.c:79: if ((abs(xsmaller ? x : y) << 1) < abs(xsmaller ? y : x))
      000697                       1696 00125$:
      000697 F8 06            [12] 1697 	ldhl	sp,	#6
      000699 5D               [ 4] 1698 	ld	e, l
      00069A 54               [ 4] 1699 	ld	d, h
      00069B F8 0B            [12] 1700 	ldhl	sp,	#11
      00069D 1A               [ 8] 1701 	ld	a, (de)
      00069E 13               [ 8] 1702 	inc	de
      00069F 96               [ 8] 1703 	sub	a, (hl)
      0006A0 23               [ 8] 1704 	inc	hl
      0006A1 1A               [ 8] 1705 	ld	a, (de)
      0006A2 9E               [ 8] 1706 	sbc	a, (hl)
      0006A3 1A               [ 8] 1707 	ld	a, (de)
      0006A4 57               [ 4] 1708 	ld	d, a
      0006A5 CB 7E            [12] 1709 	bit	7, (hl)
      0006A7 28 07            [12] 1710 	jr	Z, 00219$
      0006A9 CB 7A            [ 8] 1711 	bit	7, d
      0006AB 20 08            [12] 1712 	jr	NZ, 00220$
      0006AD BF               [ 4] 1713 	cp	a, a
      0006AE 18 05            [12] 1714 	jr	00220$
      0006B0                       1715 00219$:
      0006B0 CB 7A            [ 8] 1716 	bit	7, d
      0006B2 28 01            [12] 1717 	jr	Z, 00220$
      0006B4 37               [ 4] 1718 	scf
      0006B5                       1719 00220$:
      0006B5 D2r54r07         [16] 1720 	jp	NC, 00108$
                           0006B8  1721 	C$GameObject.c$81$2_1$211	= .
                                   1722 	.globl	C$GameObject.c$81$2_1$211
                                   1723 ;GameObject.c:81: if (xsmaller)
      0006B8 F8 0A            [12] 1724 	ldhl	sp,	#10
      0006BA 7E               [ 8] 1725 	ld	a, (hl)
      0006BB B7               [ 4] 1726 	or	a, a
      0006BC 28 4C            [12] 1727 	jr	Z, 00105$
                                   1728 ;GameObject.c:83: set_sprite_tile(sprite, tile);
      0006BE F8 0E            [12] 1729 	ldhl	sp,	#14
      0006C0 4E               [ 8] 1730 	ld	c, (hl)
                                   1731 ;C:/gbdk-win64/gbdk/include/gb/gb.h:1602: shadow_OAM[nb].tile=tile;
      0006C1 26 00            [ 8] 1732 	ld	h, #0x00
                                   1733 ;	spillPairReg hl
                                   1734 ;	spillPairReg hl
      0006C3 69               [ 4] 1735 	ld	l, c
      0006C4 29               [ 8] 1736 	add	hl, hl
      0006C5 29               [ 8] 1737 	add	hl, hl
      0006C6 11r00r00         [12] 1738 	ld	de, #_shadow_OAM
      0006C9 19               [ 8] 1739 	add	hl, de
      0006CA 23               [ 8] 1740 	inc	hl
      0006CB 23               [ 8] 1741 	inc	hl
      0006CC 4D               [ 4] 1742 	ld	c, l
      0006CD 44               [ 4] 1743 	ld	b, h
      0006CE F8 0D            [12] 1744 	ldhl	sp,	#13
      0006D0 7E               [ 8] 1745 	ld	a, (hl)
      0006D1 02               [ 8] 1746 	ld	(bc), a
                                   1747 ;GameObject.c:84: set_sprite_prop(sprite, y > 0 ? S_FLIPY : 0);
      0006D2 F8 04            [12] 1748 	ldhl	sp,	#4
      0006D4 AF               [ 4] 1749 	xor	a, a
      0006D5 96               [ 8] 1750 	sub	a, (hl)
      0006D6 23               [ 8] 1751 	inc	hl
      0006D7 3E 00            [ 8] 1752 	ld	a, #0x00
      0006D9 9E               [ 8] 1753 	sbc	a, (hl)
      0006DA 3E 00            [ 8] 1754 	ld	a, #0x00
      0006DC 57               [ 4] 1755 	ld	d, a
      0006DD CB 7E            [12] 1756 	bit	7, (hl)
      0006DF 28 07            [12] 1757 	jr	Z, 00221$
      0006E1 CB 7A            [ 8] 1758 	bit	7, d
      0006E3 20 08            [12] 1759 	jr	NZ, 00222$
      0006E5 BF               [ 4] 1760 	cp	a, a
      0006E6 18 05            [12] 1761 	jr	00222$
      0006E8                       1762 00221$:
      0006E8 CB 7A            [ 8] 1763 	bit	7, d
      0006EA 28 01            [12] 1764 	jr	Z, 00222$
      0006EC 37               [ 4] 1765 	scf
      0006ED                       1766 00222$:
      0006ED 30 05            [12] 1767 	jr	NC, 00138$
      0006EF 01 40 00         [12] 1768 	ld	bc, #0x0040
      0006F2 18 03            [12] 1769 	jr	00139$
      0006F4                       1770 00138$:
      0006F4 01 00 00         [12] 1771 	ld	bc, #0x0000
      0006F7                       1772 00139$:
      0006F7 F8 0E            [12] 1773 	ldhl	sp,	#14
      0006F9 46               [ 8] 1774 	ld	b, (hl)
                                   1775 ;C:/gbdk-win64/gbdk/include/gb/gb.h:1648: shadow_OAM[nb].prop=prop;
      0006FA 68               [ 4] 1776 	ld	l, b
                                   1777 ;	spillPairReg hl
                                   1778 ;	spillPairReg hl
      0006FB 26 00            [ 8] 1779 	ld	h, #0x00
                                   1780 ;	spillPairReg hl
                                   1781 ;	spillPairReg hl
      0006FD 29               [ 8] 1782 	add	hl, hl
      0006FE 29               [ 8] 1783 	add	hl, hl
      0006FF 11r00r00         [12] 1784 	ld	de, #_shadow_OAM
      000702 19               [ 8] 1785 	add	hl, de
      000703 23               [ 8] 1786 	inc	hl
      000704 23               [ 8] 1787 	inc	hl
      000705 23               [ 8] 1788 	inc	hl
      000706 71               [ 8] 1789 	ld	(hl), c
                           000707  1790 	C$GameObject.c$84$2_1$211	= .
                                   1791 	.globl	C$GameObject.c$84$2_1$211
                                   1792 ;GameObject.c:84: set_sprite_prop(sprite, y > 0 ? S_FLIPY : 0);
      000707 C3r06r08         [16] 1793 	jp	00132$
      00070A                       1794 00105$:
                                   1795 ;GameObject.c:88: set_sprite_tile(sprite, tile + 2);
      00070A F8 0D            [12] 1796 	ldhl	sp,	#13
      00070C 2A               [ 8] 1797 	ld	a, (hl+)
      00070D 4F               [ 4] 1798 	ld	c, a
      00070E 0C               [ 4] 1799 	inc	c
      00070F 0C               [ 4] 1800 	inc	c
                                   1801 ;C:/gbdk-win64/gbdk/include/gb/gb.h:1602: shadow_OAM[nb].tile=tile;
      000710 6E               [ 8] 1802 	ld	l, (hl)
                                   1803 ;	spillPairReg hl
                                   1804 ;	spillPairReg hl
      000711 26 00            [ 8] 1805 	ld	h, #0x00
                                   1806 ;	spillPairReg hl
                                   1807 ;	spillPairReg hl
      000713 29               [ 8] 1808 	add	hl, hl
      000714 29               [ 8] 1809 	add	hl, hl
      000715 11r00r00         [12] 1810 	ld	de, #_shadow_OAM
      000718 19               [ 8] 1811 	add	hl, de
      000719 23               [ 8] 1812 	inc	hl
      00071A 23               [ 8] 1813 	inc	hl
      00071B 71               [ 8] 1814 	ld	(hl), c
                                   1815 ;GameObject.c:89: set_sprite_prop(sprite, x > 0 ? S_FLIPX : 0);
      00071C F8 02            [12] 1816 	ldhl	sp,	#2
      00071E AF               [ 4] 1817 	xor	a, a
      00071F 96               [ 8] 1818 	sub	a, (hl)
      000720 23               [ 8] 1819 	inc	hl
      000721 3E 00            [ 8] 1820 	ld	a, #0x00
      000723 9E               [ 8] 1821 	sbc	a, (hl)
      000724 3E 00            [ 8] 1822 	ld	a, #0x00
      000726 57               [ 4] 1823 	ld	d, a
      000727 CB 7E            [12] 1824 	bit	7, (hl)
      000729 28 07            [12] 1825 	jr	Z, 00223$
      00072B CB 7A            [ 8] 1826 	bit	7, d
      00072D 20 08            [12] 1827 	jr	NZ, 00224$
      00072F BF               [ 4] 1828 	cp	a, a
      000730 18 05            [12] 1829 	jr	00224$
      000732                       1830 00223$:
      000732 CB 7A            [ 8] 1831 	bit	7, d
      000734 28 01            [12] 1832 	jr	Z, 00224$
      000736 37               [ 4] 1833 	scf
      000737                       1834 00224$:
      000737 30 05            [12] 1835 	jr	NC, 00140$
      000739 01 20 00         [12] 1836 	ld	bc, #0x0020
      00073C 18 03            [12] 1837 	jr	00141$
      00073E                       1838 00140$:
      00073E 01 00 00         [12] 1839 	ld	bc, #0x0000
      000741                       1840 00141$:
      000741 F8 0E            [12] 1841 	ldhl	sp,	#14
      000743 46               [ 8] 1842 	ld	b, (hl)
                                   1843 ;C:/gbdk-win64/gbdk/include/gb/gb.h:1648: shadow_OAM[nb].prop=prop;
      000744 68               [ 4] 1844 	ld	l, b
                                   1845 ;	spillPairReg hl
                                   1846 ;	spillPairReg hl
      000745 26 00            [ 8] 1847 	ld	h, #0x00
                                   1848 ;	spillPairReg hl
                                   1849 ;	spillPairReg hl
      000747 29               [ 8] 1850 	add	hl, hl
      000748 29               [ 8] 1851 	add	hl, hl
      000749 11r00r00         [12] 1852 	ld	de, #_shadow_OAM
      00074C 19               [ 8] 1853 	add	hl, de
      00074D 23               [ 8] 1854 	inc	hl
      00074E 23               [ 8] 1855 	inc	hl
      00074F 23               [ 8] 1856 	inc	hl
      000750 71               [ 8] 1857 	ld	(hl), c
                           000751  1858 	C$GameObject.c$89$1_1$210	= .
                                   1859 	.globl	C$GameObject.c$89$1_1$210
                                   1860 ;GameObject.c:89: set_sprite_prop(sprite, x > 0 ? S_FLIPX : 0);
      000751 C3r06r08         [16] 1861 	jp	00132$
      000754                       1862 00108$:
                                   1863 ;GameObject.c:94: set_sprite_tile(sprite, tile + 1);
      000754 F8 0D            [12] 1864 	ldhl	sp,	#13
      000756 2A               [ 8] 1865 	ld	a, (hl+)
      000757 4F               [ 4] 1866 	ld	c, a
      000758 0C               [ 4] 1867 	inc	c
      000759 46               [ 8] 1868 	ld	b, (hl)
                                   1869 ;C:/gbdk-win64/gbdk/include/gb/gb.h:1602: shadow_OAM[nb].tile=tile;
      00075A 68               [ 4] 1870 	ld	l, b
                                   1871 ;	spillPairReg hl
                                   1872 ;	spillPairReg hl
      00075B 26 00            [ 8] 1873 	ld	h, #0x00
                                   1874 ;	spillPairReg hl
                                   1875 ;	spillPairReg hl
      00075D 29               [ 8] 1876 	add	hl, hl
      00075E 29               [ 8] 1877 	add	hl, hl
      00075F 11r00r00         [12] 1878 	ld	de, #_shadow_OAM
      000762 19               [ 8] 1879 	add	hl, de
      000763 23               [ 8] 1880 	inc	hl
      000764 23               [ 8] 1881 	inc	hl
      000765 71               [ 8] 1882 	ld	(hl), c
                                   1883 ;GameObject.c:95: set_sprite_prop(sprite, (x > 0 ? S_FLIPX : 0) | (y > 0 ? S_FLIPY : 0));
      000766 F8 02            [12] 1884 	ldhl	sp,	#2
      000768 AF               [ 4] 1885 	xor	a, a
      000769 96               [ 8] 1886 	sub	a, (hl)
      00076A 23               [ 8] 1887 	inc	hl
      00076B 3E 00            [ 8] 1888 	ld	a, #0x00
      00076D 9E               [ 8] 1889 	sbc	a, (hl)
      00076E 3E 00            [ 8] 1890 	ld	a, #0x00
      000770 57               [ 4] 1891 	ld	d, a
      000771 CB 7E            [12] 1892 	bit	7, (hl)
      000773 28 07            [12] 1893 	jr	Z, 00225$
      000775 CB 7A            [ 8] 1894 	bit	7, d
      000777 20 08            [12] 1895 	jr	NZ, 00226$
      000779 BF               [ 4] 1896 	cp	a, a
      00077A 18 05            [12] 1897 	jr	00226$
      00077C                       1898 00225$:
      00077C CB 7A            [ 8] 1899 	bit	7, d
      00077E 28 01            [12] 1900 	jr	Z, 00226$
      000780 37               [ 4] 1901 	scf
      000781                       1902 00226$:
      000781 30 09            [12] 1903 	jr	NC, 00142$
      000783 F8 0B            [12] 1904 	ldhl	sp,	#11
      000785 3E 20            [ 8] 1905 	ld	a, #0x20
      000787 22               [ 8] 1906 	ld	(hl+), a
      000788 AF               [ 4] 1907 	xor	a, a
      000789 77               [ 8] 1908 	ld	(hl), a
      00078A 18 05            [12] 1909 	jr	00143$
      00078C                       1910 00142$:
      00078C AF               [ 4] 1911 	xor	a, a
      00078D F8 0B            [12] 1912 	ldhl	sp,	#11
      00078F 22               [ 8] 1913 	ld	(hl+), a
      000790 77               [ 8] 1914 	ld	(hl), a
      000791                       1915 00143$:
      000791 F8 04            [12] 1916 	ldhl	sp,	#4
      000793 AF               [ 4] 1917 	xor	a, a
      000794 96               [ 8] 1918 	sub	a, (hl)
      000795 23               [ 8] 1919 	inc	hl
      000796 3E 00            [ 8] 1920 	ld	a, #0x00
      000798 9E               [ 8] 1921 	sbc	a, (hl)
      000799 3E 00            [ 8] 1922 	ld	a, #0x00
      00079B 57               [ 4] 1923 	ld	d, a
      00079C CB 7E            [12] 1924 	bit	7, (hl)
      00079E 28 07            [12] 1925 	jr	Z, 00227$
      0007A0 CB 7A            [ 8] 1926 	bit	7, d
      0007A2 20 08            [12] 1927 	jr	NZ, 00228$
      0007A4 BF               [ 4] 1928 	cp	a, a
      0007A5 18 05            [12] 1929 	jr	00228$
      0007A7                       1930 00227$:
      0007A7 CB 7A            [ 8] 1931 	bit	7, d
      0007A9 28 01            [12] 1932 	jr	Z, 00228$
      0007AB 37               [ 4] 1933 	scf
      0007AC                       1934 00228$:
      0007AC 30 09            [12] 1935 	jr	NC, 00144$
      0007AE F8 09            [12] 1936 	ldhl	sp,	#9
      0007B0 3E 40            [ 8] 1937 	ld	a, #0x40
      0007B2 22               [ 8] 1938 	ld	(hl+), a
      0007B3 AF               [ 4] 1939 	xor	a, a
      0007B4 77               [ 8] 1940 	ld	(hl), a
      0007B5 18 05            [12] 1941 	jr	00145$
      0007B7                       1942 00144$:
      0007B7 AF               [ 4] 1943 	xor	a, a
      0007B8 F8 09            [12] 1944 	ldhl	sp,	#9
      0007BA 22               [ 8] 1945 	ld	(hl+), a
      0007BB 77               [ 8] 1946 	ld	(hl), a
      0007BC                       1947 00145$:
      0007BC F8 0B            [12] 1948 	ldhl	sp,	#11
      0007BE 2A               [ 8] 1949 	ld	a, (hl+)
      0007BF 77               [ 8] 1950 	ld	(hl), a
      0007C0 F8 09            [12] 1951 	ldhl	sp,	#9
      0007C2 2A               [ 8] 1952 	ld	a, (hl+)
      0007C3 23               [ 8] 1953 	inc	hl
      0007C4 22               [ 8] 1954 	ld	(hl+), a
      0007C5 3A               [ 8] 1955 	ld	a, (hl-)
      0007C6 B6               [ 8] 1956 	or	a, (hl)
      0007C7 23               [ 8] 1957 	inc	hl
      0007C8 22               [ 8] 1958 	ld	(hl+), a
      0007C9 23               [ 8] 1959 	inc	hl
      0007CA 4E               [ 8] 1960 	ld	c, (hl)
                                   1961 ;C:/gbdk-win64/gbdk/include/gb/gb.h:1648: shadow_OAM[nb].prop=prop;
      0007CB F8 0A            [12] 1962 	ldhl	sp,	#10
      0007CD 79               [ 4] 1963 	ld	a, c
      0007CE 22               [ 8] 1964 	ld	(hl+), a
      0007CF 36 00            [12] 1965 	ld	(hl), #0x00
      0007D1 3E 02            [ 8] 1966 	ld	a, #0x02
      0007D3                       1967 00229$:
      0007D3 F8 0A            [12] 1968 	ldhl	sp,	#10
      0007D5 CB 26            [16] 1969 	sla	(hl)
      0007D7 23               [ 8] 1970 	inc	hl
      0007D8 CB 16            [16] 1971 	rl	(hl)
      0007DA 3D               [ 4] 1972 	dec	a
      0007DB 20 F6            [12] 1973 	jr	NZ, 00229$
      0007DD 2B               [ 8] 1974 	dec	hl
      0007DE 2A               [ 8] 1975 	ld	a, (hl+)
      0007DF 5F               [ 4] 1976 	ld	e, a
      0007E0 56               [ 8] 1977 	ld	d, (hl)
      0007E1 21r00r00         [12] 1978 	ld	hl, #_shadow_OAM
      0007E4 19               [ 8] 1979 	add	hl, de
      0007E5 E5               [16] 1980 	push	hl
      0007E6 7D               [ 4] 1981 	ld	a, l
      0007E7 F8 0A            [12] 1982 	ldhl	sp,	#10
      0007E9 77               [ 8] 1983 	ld	(hl), a
      0007EA E1               [12] 1984 	pop	hl
      0007EB 7C               [ 4] 1985 	ld	a, h
      0007EC F8 09            [12] 1986 	ldhl	sp,	#9
      0007EE 32               [ 8] 1987 	ld	(hl-), a
      0007EF 2A               [ 8] 1988 	ld	a, (hl+)
      0007F0 5F               [ 4] 1989 	ld	e, a
      0007F1 56               [ 8] 1990 	ld	d, (hl)
      0007F2 21 03 00         [12] 1991 	ld	hl, #0x0003
      0007F5 19               [ 8] 1992 	add	hl, de
      0007F6 E5               [16] 1993 	push	hl
      0007F7 7D               [ 4] 1994 	ld	a, l
      0007F8 F8 0C            [12] 1995 	ldhl	sp,	#12
      0007FA 77               [ 8] 1996 	ld	(hl), a
      0007FB E1               [12] 1997 	pop	hl
      0007FC 7C               [ 4] 1998 	ld	a, h
      0007FD F8 0B            [12] 1999 	ldhl	sp,	#11
      0007FF 32               [ 8] 2000 	ld	(hl-), a
      000800 2A               [ 8] 2001 	ld	a, (hl+)
      000801 5F               [ 4] 2002 	ld	e, a
      000802 2A               [ 8] 2003 	ld	a, (hl+)
      000803 57               [ 4] 2004 	ld	d, a
      000804 7E               [ 8] 2005 	ld	a, (hl)
      000805 12               [ 8] 2006 	ld	(de), a
                           000806  2007 	C$GameObject.c$95$1_1$208	= .
                                   2008 	.globl	C$GameObject.c$95$1_1$208
                                   2009 ;GameObject.c:95: set_sprite_prop(sprite, (x > 0 ? S_FLIPX : 0) | (y > 0 ? S_FLIPY : 0));
      000806                       2010 00132$:
                           000806  2011 	C$GameObject.c$97$1_1$208	= .
                                   2012 	.globl	C$GameObject.c$97$1_1$208
                                   2013 ;GameObject.c:97: }
      000806 E8 0F            [16] 2014 	add	sp, #15
      000808 E1               [12] 2015 	pop	hl
      000809 E8 04            [16] 2016 	add	sp, #4
      00080B E9               [ 4] 2017 	jp	(hl)
                           00080C  2018 	G$getInput$0$0	= .
                                   2019 	.globl	G$getInput$0$0
                           00080C  2020 	C$main.c$15$1_1$259	= .
                                   2021 	.globl	C$main.c$15$1_1$259
                                   2022 ;main.c:15: void getInput(uint8_t input, fixed16* x, fixed16* y)
                                   2023 ;	---------------------------------
                                   2024 ; Function getInput
                                   2025 ; ---------------------------------
      00080C                       2026 _getInput::
      00080C E8 F8            [16] 2027 	add	sp, #-8
      00080E 4F               [ 4] 2028 	ld	c, a
      00080F F8 06            [12] 2029 	ldhl	sp,	#6
      000811 7B               [ 4] 2030 	ld	a, e
      000812 22               [ 8] 2031 	ld	(hl+), a
                           000813  2032 	C$main.c$17$1_0$259	= .
                                   2033 	.globl	C$main.c$17$1_0$259
                                   2034 ;main.c:17: *x = FIXED(0);
      000813 7A               [ 4] 2035 	ld	a, d
      000814 32               [ 8] 2036 	ld	(hl-), a
      000815 2A               [ 8] 2037 	ld	a,	(hl+)
      000816 66               [ 8] 2038 	ld	h, (hl)
      000817 6F               [ 4] 2039 	ld	l, a
      000818 AF               [ 4] 2040 	xor	a, a
      000819 22               [ 8] 2041 	ld	(hl+), a
      00081A 77               [ 8] 2042 	ld	(hl), a
                           00081B  2043 	C$main.c$18$1_0$259	= .
                                   2044 	.globl	C$main.c$18$1_0$259
                                   2045 ;main.c:18: *y = FIXED(0);
      00081B F8 0A            [12] 2046 	ldhl	sp,	#10
      00081D 7E               [ 8] 2047 	ld	a, (hl)
      00081E F8 00            [12] 2048 	ldhl	sp,	#0
      000820 77               [ 8] 2049 	ld	(hl), a
      000821 F8 0B            [12] 2050 	ldhl	sp,	#11
      000823 7E               [ 8] 2051 	ld	a, (hl)
      000824 F8 01            [12] 2052 	ldhl	sp,	#1
      000826 77               [ 8] 2053 	ld	(hl), a
      000827 E1               [12] 2054 	pop	hl
      000828 E5               [16] 2055 	push	hl
      000829 AF               [ 4] 2056 	xor	a, a
      00082A 22               [ 8] 2057 	ld	(hl+), a
      00082B 77               [ 8] 2058 	ld	(hl), a
                           00082C  2059 	C$main.c$20$1_0$259	= .
                                   2060 	.globl	C$main.c$20$1_0$259
                                   2061 ;main.c:20: if (input & J_UP)
      00082C CB 51            [ 8] 2062 	bit	2, c
      00082E 28 07            [12] 2063 	jr	Z, 00102$
                           000830  2064 	C$main.c$22$2_0$260	= .
                                   2065 	.globl	C$main.c$22$2_0$260
                                   2066 ;main.c:22: *y = -inputSpeed;
      000830 E1               [12] 2067 	pop	hl
      000831 E5               [16] 2068 	push	hl
      000832 3E B4            [ 8] 2069 	ld	a, #0xb4
      000834 22               [ 8] 2070 	ld	(hl+), a
      000835 36 FF            [12] 2071 	ld	(hl), #0xff
      000837                       2072 00102$:
                           000837  2073 	C$main.c$24$1_0$259	= .
                                   2074 	.globl	C$main.c$24$1_0$259
                                   2075 ;main.c:24: if (input & J_DOWN)
      000837 CB 59            [ 8] 2076 	bit	3, c
      000839 28 07            [12] 2077 	jr	Z, 00104$
                           00083B  2078 	C$main.c$26$2_0$261	= .
                                   2079 	.globl	C$main.c$26$2_0$261
                                   2080 ;main.c:26: *y = inputSpeed;
      00083B E1               [12] 2081 	pop	hl
      00083C E5               [16] 2082 	push	hl
      00083D 3E 4C            [ 8] 2083 	ld	a, #0x4c
      00083F 22               [ 8] 2084 	ld	(hl+), a
      000840 36 00            [12] 2085 	ld	(hl), #0x00
      000842                       2086 00104$:
                           000842  2087 	C$main.c$28$1_0$259	= .
                                   2088 	.globl	C$main.c$28$1_0$259
                                   2089 ;main.c:28: if (input & J_LEFT)
      000842 CB 49            [ 8] 2090 	bit	1, c
      000844 28 0A            [12] 2091 	jr	Z, 00106$
                           000846  2092 	C$main.c$30$2_0$262	= .
                                   2093 	.globl	C$main.c$30$2_0$262
                                   2094 ;main.c:30: *x = -inputSpeed;
      000846 F8 06            [12] 2095 	ldhl	sp,	#6
      000848 2A               [ 8] 2096 	ld	a,	(hl+)
      000849 66               [ 8] 2097 	ld	h, (hl)
      00084A 6F               [ 4] 2098 	ld	l, a
      00084B 3E B4            [ 8] 2099 	ld	a, #0xb4
      00084D 22               [ 8] 2100 	ld	(hl+), a
      00084E 36 FF            [12] 2101 	ld	(hl), #0xff
      000850                       2102 00106$:
                           000850  2103 	C$main.c$32$1_0$259	= .
                                   2104 	.globl	C$main.c$32$1_0$259
                                   2105 ;main.c:32: if (input & J_RIGHT)
      000850 CB 41            [ 8] 2106 	bit	0, c
      000852 28 0A            [12] 2107 	jr	Z, 00108$
                           000854  2108 	C$main.c$34$2_0$263	= .
                                   2109 	.globl	C$main.c$34$2_0$263
                                   2110 ;main.c:34: *x = inputSpeed;
      000854 F8 06            [12] 2111 	ldhl	sp,	#6
      000856 2A               [ 8] 2112 	ld	a,	(hl+)
      000857 66               [ 8] 2113 	ld	h, (hl)
      000858 6F               [ 4] 2114 	ld	l, a
      000859 3E 4C            [ 8] 2115 	ld	a, #0x4c
      00085B 22               [ 8] 2116 	ld	(hl+), a
      00085C 36 00            [12] 2117 	ld	(hl), #0x00
      00085E                       2118 00108$:
                           00085E  2119 	C$main.c$37$1_0$259	= .
                                   2120 	.globl	C$main.c$37$1_0$259
                                   2121 ;main.c:37: if (*x != 0 && *y != 0)
      00085E F8 06            [12] 2122 	ldhl	sp,#6
      000860 2A               [ 8] 2123 	ld	a, (hl+)
      000861 5F               [ 4] 2124 	ld	e, a
      000862 56               [ 8] 2125 	ld	d, (hl)
      000863 1A               [ 8] 2126 	ld	a, (de)
      000864 F8 04            [12] 2127 	ldhl	sp,	#4
      000866 22               [ 8] 2128 	ld	(hl+), a
      000867 13               [ 8] 2129 	inc	de
      000868 1A               [ 8] 2130 	ld	a, (de)
      000869 77               [ 8] 2131 	ld	(hl), a
      00086A 3A               [ 8] 2132 	ld	a, (hl-)
      00086B B6               [ 8] 2133 	or	a, (hl)
      00086C 28 77            [12] 2134 	jr	Z, 00112$
      00086E D1               [12] 2135 	pop	de
      00086F D5               [16] 2136 	push	de
      000870 1A               [ 8] 2137 	ld	a, (de)
      000871 4F               [ 4] 2138 	ld	c, a
      000872 13               [ 8] 2139 	inc	de
      000873 1A               [ 8] 2140 	ld	a, (de)
      000874 B1               [ 4] 2141 	or	a, c
      000875 28 6E            [12] 2142 	jr	Z, 00112$
                           000877  2143 	C$main.c$39$2_0$264	= .
                                   2144 	.globl	C$main.c$39$2_0$264
                                   2145 ;main.c:39: *x = *x > 0 ? inputSpeedDiagonal : -inputSpeedDiagonal;
      000877 23               [ 8] 2146 	inc	hl
      000878 23               [ 8] 2147 	inc	hl
      000879 7E               [ 8] 2148 	ld	a, (hl)
      00087A F8 02            [12] 2149 	ldhl	sp,	#2
      00087C 77               [ 8] 2150 	ld	(hl), a
      00087D F8 07            [12] 2151 	ldhl	sp,	#7
      00087F 7E               [ 8] 2152 	ld	a, (hl)
      000880 F8 03            [12] 2153 	ldhl	sp,	#3
      000882 22               [ 8] 2154 	ld	(hl+), a
      000883 2A               [ 8] 2155 	ld	a, (hl+)
      000884 4F               [ 4] 2156 	ld	c, a
      000885 46               [ 8] 2157 	ld	b, (hl)
      000886 58               [ 4] 2158 	ld	e, b
      000887 AF               [ 4] 2159 	xor	a, a
      000888 57               [ 4] 2160 	ld	d, a
      000889 B9               [ 4] 2161 	cp	a, c
      00088A 98               [ 4] 2162 	sbc	a, b
      00088B CB 7B            [ 8] 2163 	bit	7, e
      00088D 28 07            [12] 2164 	jr	Z, 00162$
      00088F CB 7A            [ 8] 2165 	bit	7, d
      000891 20 08            [12] 2166 	jr	NZ, 00163$
      000893 BF               [ 4] 2167 	cp	a, a
      000894 18 05            [12] 2168 	jr	00163$
      000896                       2169 00162$:
      000896 CB 7A            [ 8] 2170 	bit	7, d
      000898 28 01            [12] 2171 	jr	Z, 00163$
      00089A 37               [ 4] 2172 	scf
      00089B                       2173 00163$:
      00089B 30 09            [12] 2174 	jr	NC, 00114$
      00089D F8 04            [12] 2175 	ldhl	sp,	#4
      00089F 3E 36            [ 8] 2176 	ld	a, #0x36
      0008A1 22               [ 8] 2177 	ld	(hl+), a
      0008A2 AF               [ 4] 2178 	xor	a, a
      0008A3 77               [ 8] 2179 	ld	(hl), a
      0008A4 18 07            [12] 2180 	jr	00115$
      0008A6                       2181 00114$:
      0008A6 F8 04            [12] 2182 	ldhl	sp,	#4
      0008A8 3E CA            [ 8] 2183 	ld	a, #0xca
      0008AA 22               [ 8] 2184 	ld	(hl+), a
      0008AB 36 FF            [12] 2185 	ld	(hl), #0xff
      0008AD                       2186 00115$:
      0008AD F8 02            [12] 2187 	ldhl	sp,#2
      0008AF 2A               [ 8] 2188 	ld	a, (hl+)
      0008B0 5F               [ 4] 2189 	ld	e, a
      0008B1 2A               [ 8] 2190 	ld	a, (hl+)
      0008B2 57               [ 4] 2191 	ld	d, a
      0008B3 2A               [ 8] 2192 	ld	a, (hl+)
      0008B4 12               [ 8] 2193 	ld	(de), a
      0008B5 13               [ 8] 2194 	inc	de
      0008B6 7E               [ 8] 2195 	ld	a, (hl)
      0008B7 12               [ 8] 2196 	ld	(de), a
                           0008B8  2197 	C$main.c$40$2_0$264	= .
                                   2198 	.globl	C$main.c$40$2_0$264
                                   2199 ;main.c:40: *y = *y > 0 ? inputSpeedDiagonal : -inputSpeedDiagonal;
      0008B8 C1               [12] 2200 	pop	bc
      0008B9 C5               [16] 2201 	push	bc
      0008BA D1               [12] 2202 	pop	de
      0008BB D5               [16] 2203 	push	de
      0008BC 1A               [ 8] 2204 	ld	a, (de)
      0008BD 6F               [ 4] 2205 	ld	l, a
                                   2206 ;	spillPairReg hl
                                   2207 ;	spillPairReg hl
      0008BE 13               [ 8] 2208 	inc	de
      0008BF 1A               [ 8] 2209 	ld	a, (de)
      0008C0 67               [ 4] 2210 	ld	h, a
                                   2211 ;	spillPairReg hl
                                   2212 ;	spillPairReg hl
      0008C1 5C               [ 4] 2213 	ld	e, h
      0008C2 AF               [ 4] 2214 	xor	a, a
      0008C3 57               [ 4] 2215 	ld	d, a
      0008C4 BD               [ 4] 2216 	cp	a, l
      0008C5 9C               [ 4] 2217 	sbc	a, h
      0008C6 CB 7B            [ 8] 2218 	bit	7, e
      0008C8 28 07            [12] 2219 	jr	Z, 00164$
      0008CA CB 7A            [ 8] 2220 	bit	7, d
      0008CC 20 08            [12] 2221 	jr	NZ, 00165$
      0008CE BF               [ 4] 2222 	cp	a, a
      0008CF 18 05            [12] 2223 	jr	00165$
      0008D1                       2224 00164$:
      0008D1 CB 7A            [ 8] 2225 	bit	7, d
      0008D3 28 01            [12] 2226 	jr	Z, 00165$
      0008D5 37               [ 4] 2227 	scf
      0008D6                       2228 00165$:
      0008D6 30 05            [12] 2229 	jr	NC, 00116$
      0008D8 11 36 00         [12] 2230 	ld	de, #0x0036
      0008DB 18 03            [12] 2231 	jr	00117$
      0008DD                       2232 00116$:
      0008DD 11 CA FF         [12] 2233 	ld	de, #0xffca
      0008E0                       2234 00117$:
      0008E0 7B               [ 4] 2235 	ld	a, e
      0008E1 02               [ 8] 2236 	ld	(bc), a
      0008E2 03               [ 8] 2237 	inc	bc
      0008E3 7A               [ 4] 2238 	ld	a, d
      0008E4 02               [ 8] 2239 	ld	(bc), a
      0008E5                       2240 00112$:
                           0008E5  2241 	C$main.c$42$1_0$259	= .
                                   2242 	.globl	C$main.c$42$1_0$259
                                   2243 ;main.c:42: }
      0008E5 E8 08            [16] 2244 	add	sp, #8
      0008E7 E1               [12] 2245 	pop	hl
      0008E8 F1               [12] 2246 	pop	af
      0008E9 E9               [ 4] 2247 	jp	(hl)
                           0008EA  2248 	G$main$0$0	= .
                                   2249 	.globl	G$main$0$0
                           0008EA  2250 	C$main.c$68$1_0$269	= .
                                   2251 	.globl	C$main.c$68$1_0$269
                                   2252 ;main.c:68: void main()
                                   2253 ;	---------------------------------
                                   2254 ; Function main
                                   2255 ; ---------------------------------
      0008EA                       2256 _main::
      0008EA E8 C0            [16] 2257 	add	sp, #-64
                           0008EC  2258 	C$main.c$70$1_0$269	= .
                                   2259 	.globl	C$main.c$70$1_0$269
                                   2260 ;main.c:70: SHOW_SPRITES;
      0008EC F0r00            [12] 2261 	ldh	a, (_LCDC_REG + 0)
      0008EE F6 02            [ 8] 2262 	or	a, #0x02
      0008F0 E0r00            [12] 2263 	ldh	(_LCDC_REG + 0), a
                           0008F2  2264 	C$main.c$71$1_0$269	= .
                                   2265 	.globl	C$main.c$71$1_0$269
                                   2266 ;main.c:71: SHOW_BKG;
      0008F2 F0r00            [12] 2267 	ldh	a, (_LCDC_REG + 0)
      0008F4 F6 01            [ 8] 2268 	or	a, #0x01
      0008F6 E0r00            [12] 2269 	ldh	(_LCDC_REG + 0), a
                           0008F8  2270 	C$main.c$73$2_0$270	= .
                                   2271 	.globl	C$main.c$73$2_0$270
                                   2272 ;main.c:73: BOOLEAN attached = TRUE;
      0008F8 F8 2E            [12] 2273 	ldhl	sp,	#46
      0008FA 36 01            [12] 2274 	ld	(hl), #0x01
                           0008FC  2275 	C$main.c$75$2_0$270	= .
                                   2276 	.globl	C$main.c$75$2_0$270
                                   2277 ;main.c:75: uint8_t enemyTimer = 255;
      0008FC F8 3D            [12] 2278 	ldhl	sp,	#61
      0008FE 36 FF            [12] 2279 	ld	(hl), #0xff
                           000900  2280 	C$main.c$78$1_1$270	= .
                                   2281 	.globl	C$main.c$78$1_1$270
                                   2282 ;main.c:78: set_sprite_data(0, 12, SpaceShipTiles);
      000900 11r00r00         [12] 2283 	ld	de, #_SpaceShipTiles
      000903 D5               [16] 2284 	push	de
      000904 21 00 0C         [12] 2285 	ld	hl, #0xc00
      000907 E5               [16] 2286 	push	hl
      000908 CDr00r00         [24] 2287 	call	_set_sprite_data
      00090B E8 04            [16] 2288 	add	sp, #4
                                   2289 ;C:/gbdk-win64/gbdk/include/gb/gb.h:1602: shadow_OAM[nb].tile=tile;
      00090D 21r02r00         [12] 2290 	ld	hl, #(_shadow_OAM + 2)
      000910 36 00            [12] 2291 	ld	(hl), #0x00
      000912 21r06r00         [12] 2292 	ld	hl, #(_shadow_OAM + 6)
      000915 36 03            [12] 2293 	ld	(hl), #0x03
                           000917  2294 	C$main.c$84$1_1$270	= .
                                   2295 	.globl	C$main.c$84$1_1$270
                                   2296 ;main.c:84: set_bkg_data(0, 4, SpaceTiles);
      000917 11r70r00         [12] 2297 	ld	de, #_SpaceTiles
      00091A D5               [16] 2298 	push	de
      00091B 21 00 04         [12] 2299 	ld	hl, #0x400
      00091E E5               [16] 2300 	push	hl
      00091F CDr00r00         [24] 2301 	call	_set_bkg_data
      000922 E8 04            [16] 2302 	add	sp, #4
                           000924  2303 	C$main.c$86$1_1$270	= .
                                   2304 	.globl	C$main.c$86$1_1$270
                                   2305 ;main.c:86: set_bkg_tiles(0, 0, 32, 32, SpaceMap);
      000924 11rC0r00         [12] 2306 	ld	de, #_SpaceMap
      000927 D5               [16] 2307 	push	de
      000928 21 20 20         [12] 2308 	ld	hl, #0x2020
      00092B E5               [16] 2309 	push	hl
      00092C AF               [ 4] 2310 	xor	a, a
      00092D 0F               [ 4] 2311 	rrca
      00092E F5               [16] 2312 	push	af
      00092F CDr00r00         [24] 2313 	call	_set_bkg_tiles
      000932 E8 06            [16] 2314 	add	sp, #6
                           000934  2315 	C$main.c$89$1_2$271	= .
                                   2316 	.globl	C$main.c$89$1_2$271
                                   2317 ;main.c:89: player.gameObject.posx = FIXED(0);
      000934 AF               [ 4] 2318 	xor	a, a
      000935 F8 00            [12] 2319 	ldhl	sp,	#0
      000937 22               [ 8] 2320 	ld	(hl+), a
                           000938  2321 	C$main.c$90$1_2$271	= .
                                   2322 	.globl	C$main.c$90$1_2$271
                                   2323 ;main.c:90: player.gameObject.posy = FIXED(0);
      000938 22               [ 8] 2324 	ld	(hl+), a
      000939 AF               [ 4] 2325 	xor	a, a
      00093A 22               [ 8] 2326 	ld	(hl+), a
                           00093B  2327 	C$main.c$91$1_2$271	= .
                                   2328 	.globl	C$main.c$91$1_2$271
                                   2329 ;main.c:91: player.gameObject.velx = FIXED(0);
      00093B 22               [ 8] 2330 	ld	(hl+), a
      00093C AF               [ 4] 2331 	xor	a, a
      00093D 22               [ 8] 2332 	ld	(hl+), a
                           00093E  2333 	C$main.c$92$1_2$271	= .
                                   2334 	.globl	C$main.c$92$1_2$271
                                   2335 ;main.c:92: player.gameObject.vely = FIXED(0);
      00093E 22               [ 8] 2336 	ld	(hl+), a
      00093F AF               [ 4] 2337 	xor	a, a
      000940 22               [ 8] 2338 	ld	(hl+), a
      000941 77               [ 8] 2339 	ld	(hl), a
                           000942  2340 	C$main.c$93$1_2$271	= .
                                   2341 	.globl	C$main.c$93$1_2$271
                                   2342 ;main.c:93: player.gameObject.firstSprite = 0;
      000942 F8 10            [12] 2343 	ldhl	sp,	#16
                           000944  2344 	C$main.c$94$1_2$271	= .
                                   2345 	.globl	C$main.c$94$1_2$271
                                   2346 ;main.c:94: player.gameObject.spriteSizex = 1;
      000944 AF               [ 4] 2347 	xor	a, a
      000945 22               [ 8] 2348 	ld	(hl+), a
                           000946  2349 	C$main.c$95$1_2$271	= .
                                   2350 	.globl	C$main.c$95$1_2$271
                                   2351 ;main.c:95: player.gameObject.spriteSizey = 1;
                           000946  2352 	C$main.c$96$1_2$271	= .
                                   2353 	.globl	C$main.c$96$1_2$271
                                   2354 ;main.c:96: player.accelerationShifts = 0;
      000946 3E 01            [ 8] 2355 	ld	a,#0x01
      000948 22               [ 8] 2356 	ld	(hl+),a
      000949 22               [ 8] 2357 	ld	(hl+), a
                           00094A  2358 	C$main.c$97$1_2$271	= .
                                   2359 	.globl	C$main.c$97$1_2$271
                                   2360 ;main.c:97: player.dragShifts = 5;
      00094A AF               [ 4] 2361 	xor	a, a
      00094B 22               [ 8] 2362 	ld	(hl+), a
      00094C 36 05            [12] 2363 	ld	(hl), #0x05
                           00094E  2364 	C$main.c$98$1_3$269	= .
                                   2365 	.globl	C$main.c$98$1_3$269
                                   2366 ;main.c:98: player.gameObject.collider.posx = add(player.gameObject.posx, FIXED(2));
      00094E F8 00            [12] 2367 	ldhl	sp,	#0
      000950 2A               [ 8] 2368 	ld	a, (hl+)
      000951 4F               [ 4] 2369 	ld	c, a
                                   2370 ;	spillPairReg hl
                                   2371 ;	spillPairReg hl
                                   2372 ;fixed.c:13: return a + b;
      000952 7E               [ 8] 2373 	ld	a, (hl)
      000953 C6 02            [ 8] 2374 	add	a, #0x02
      000955 47               [ 4] 2375 	ld	b, a
                           000956  2376 	C$main.c$98$3_2$295	= .
                                   2377 	.globl	C$main.c$98$3_2$295
                                   2378 ;main.c:98: player.gameObject.collider.posx = add(player.gameObject.posx, FIXED(2));
      000956 F8 08            [12] 2379 	ldhl	sp,	#8
      000958 79               [ 4] 2380 	ld	a, c
      000959 22               [ 8] 2381 	ld	(hl+), a
      00095A 70               [ 8] 2382 	ld	(hl), b
                           00095B  2383 	C$main.c$99$1_2$271	= .
                                   2384 	.globl	C$main.c$99$1_2$271
                                   2385 ;main.c:99: player.gameObject.collider.posy = add(player.gameObject.posy, FIXED(2));
      00095B F8 02            [12] 2386 	ldhl	sp,	#2
      00095D 2A               [ 8] 2387 	ld	a, (hl+)
      00095E 4F               [ 4] 2388 	ld	c, a
                                   2389 ;	spillPairReg hl
                                   2390 ;	spillPairReg hl
                                   2391 ;fixed.c:13: return a + b;
      00095F 7E               [ 8] 2392 	ld	a, (hl)
      000960 C6 02            [ 8] 2393 	add	a, #0x02
      000962 47               [ 4] 2394 	ld	b, a
                           000963  2395 	C$main.c$99$3_2$298	= .
                                   2396 	.globl	C$main.c$99$3_2$298
                                   2397 ;main.c:99: player.gameObject.collider.posy = add(player.gameObject.posy, FIXED(2));
      000963 F8 0A            [12] 2398 	ldhl	sp,	#10
      000965 79               [ 4] 2399 	ld	a, c
      000966 22               [ 8] 2400 	ld	(hl+), a
                           000967  2401 	C$main.c$100$1_2$271	= .
                                   2402 	.globl	C$main.c$100$1_2$271
                                   2403 ;main.c:100: player.gameObject.collider.sizex = FIXED(4);
      000967 78               [ 4] 2404 	ld	a, b
      000968 22               [ 8] 2405 	ld	(hl+), a
      000969 AF               [ 4] 2406 	xor	a, a
      00096A 22               [ 8] 2407 	ld	(hl+), a
                           00096B  2408 	C$main.c$101$1_2$271	= .
                                   2409 	.globl	C$main.c$101$1_2$271
                                   2410 ;main.c:101: player.gameObject.collider.sizey = FIXED(4);
      00096B 3E 04            [ 8] 2411 	ld	a, #0x04
      00096D 22               [ 8] 2412 	ld	(hl+), a
      00096E AF               [ 4] 2413 	xor	a, a
      00096F 22               [ 8] 2414 	ld	(hl+), a
      000970 36 04            [12] 2415 	ld	(hl), #0x04
                           000972  2416 	C$main.c$105$1_3$272	= .
                                   2417 	.globl	C$main.c$105$1_3$272
                                   2418 ;main.c:105: flinger.gameObject.posx = FIXED(0);
      000972 AF               [ 4] 2419 	xor	a, a
      000973 F8 15            [12] 2420 	ldhl	sp,	#21
      000975 22               [ 8] 2421 	ld	(hl+), a
                           000976  2422 	C$main.c$106$1_3$272	= .
                                   2423 	.globl	C$main.c$106$1_3$272
                                   2424 ;main.c:106: flinger.gameObject.posy = FIXED(0);
      000976 22               [ 8] 2425 	ld	(hl+), a
      000977 AF               [ 4] 2426 	xor	a, a
      000978 22               [ 8] 2427 	ld	(hl+), a
                           000979  2428 	C$main.c$107$1_3$272	= .
                                   2429 	.globl	C$main.c$107$1_3$272
                                   2430 ;main.c:107: flinger.gameObject.velx = FIXED(0);
      000979 22               [ 8] 2431 	ld	(hl+), a
      00097A AF               [ 4] 2432 	xor	a, a
      00097B 22               [ 8] 2433 	ld	(hl+), a
                           00097C  2434 	C$main.c$108$1_3$272	= .
                                   2435 	.globl	C$main.c$108$1_3$272
                                   2436 ;main.c:108: flinger.gameObject.vely = FIXED(0);
      00097C 22               [ 8] 2437 	ld	(hl+), a
      00097D AF               [ 4] 2438 	xor	a, a
      00097E 22               [ 8] 2439 	ld	(hl+), a
      00097F 77               [ 8] 2440 	ld	(hl), a
                           000980  2441 	C$main.c$109$1_3$272	= .
                                   2442 	.globl	C$main.c$109$1_3$272
                                   2443 ;main.c:109: flinger.gameObject.firstSprite = 1;
      000980 F8 25            [12] 2444 	ldhl	sp,	#37
      000982 36 01            [12] 2445 	ld	(hl), #0x01
                           000984  2446 	C$main.c$110$1_3$272	= .
                                   2447 	.globl	C$main.c$110$1_3$272
                                   2448 ;main.c:110: flinger.gameObject.spriteSizex = 1;
      000984 23               [ 8] 2449 	inc	hl
      000985 36 01            [12] 2450 	ld	(hl), #0x01
                           000987  2451 	C$main.c$111$1_3$272	= .
                                   2452 	.globl	C$main.c$111$1_3$272
                                   2453 ;main.c:111: flinger.gameObject.spriteSizey = 1;
      000987 23               [ 8] 2454 	inc	hl
      000988 36 01            [12] 2455 	ld	(hl), #0x01
                           00098A  2456 	C$main.c$112$1_3$272	= .
                                   2457 	.globl	C$main.c$112$1_3$272
                                   2458 ;main.c:112: flinger.accelerationShifts = 6;
      00098A 23               [ 8] 2459 	inc	hl
      00098B 36 06            [12] 2460 	ld	(hl), #0x06
                           00098D  2461 	C$main.c$113$1_3$272	= .
                                   2462 	.globl	C$main.c$113$1_3$272
                                   2463 ;main.c:113: flinger.dragShifts = attachedFlingerDragShifts;
      00098D 23               [ 8] 2464 	inc	hl
      00098E 36 04            [12] 2465 	ld	(hl), #0x04
                           000990  2466 	C$main.c$114$1_3$269	= .
                                   2467 	.globl	C$main.c$114$1_3$269
                                   2468 ;main.c:114: flinger.gameObject.collider.posx = flinger.gameObject.posx;
      000990 F8 15            [12] 2469 	ldhl	sp,	#21
      000992 4E               [ 8] 2470 	ld	c, (hl)
      000993 23               [ 8] 2471 	inc	hl
      000994 46               [ 8] 2472 	ld	b, (hl)
      000995 F8 1D            [12] 2473 	ldhl	sp,	#29
      000997 71               [ 8] 2474 	ld	(hl), c
      000998 23               [ 8] 2475 	inc	hl
      000999 70               [ 8] 2476 	ld	(hl), b
                           00099A  2477 	C$main.c$115$1_3$272	= .
                                   2478 	.globl	C$main.c$115$1_3$272
                                   2479 ;main.c:115: flinger.gameObject.collider.posy = flinger.gameObject.posy;
      00099A F8 17            [12] 2480 	ldhl	sp,	#23
      00099C 4E               [ 8] 2481 	ld	c, (hl)
      00099D 23               [ 8] 2482 	inc	hl
      00099E 46               [ 8] 2483 	ld	b, (hl)
      00099F F8 1F            [12] 2484 	ldhl	sp,	#31
      0009A1 71               [ 8] 2485 	ld	(hl), c
      0009A2 23               [ 8] 2486 	inc	hl
      0009A3 70               [ 8] 2487 	ld	(hl), b
                           0009A4  2488 	C$main.c$116$1_3$272	= .
                                   2489 	.globl	C$main.c$116$1_3$272
                                   2490 ;main.c:116: flinger.gameObject.collider.sizex = FIXED(8);
      0009A4 23               [ 8] 2491 	inc	hl
      0009A5 36 00            [12] 2492 	ld	(hl), #0x00
      0009A7 23               [ 8] 2493 	inc	hl
      0009A8 36 08            [12] 2494 	ld	(hl), #0x08
                           0009AA  2495 	C$main.c$117$1_3$272	= .
                                   2496 	.globl	C$main.c$117$1_3$272
                                   2497 ;main.c:117: flinger.gameObject.collider.sizey = FIXED(8);
      0009AA 23               [ 8] 2498 	inc	hl
      0009AB 36 00            [12] 2499 	ld	(hl), #0x00
      0009AD 23               [ 8] 2500 	inc	hl
      0009AE 36 08            [12] 2501 	ld	(hl), #0x08
                           0009B0  2502 	C$main.c$119$1_3$269	= .
                                   2503 	.globl	C$main.c$119$1_3$269
                                   2504 ;main.c:119: while(1)
      0009B0 F8 3E            [12] 2505 	ldhl	sp,	#62
      0009B2 36 FF            [12] 2506 	ld	(hl), #0xff
      0009B4                       2507 00125$:
                           0009B4  2508 	C$main.c$123$2_3$273	= .
                                   2509 	.globl	C$main.c$123$2_3$273
                                   2510 ;main.c:123: uint8_t input = joypad();
      0009B4 CDr00r00         [24] 2511 	call	_joypad
      0009B7 4F               [ 4] 2512 	ld	c, a
                           0009B8  2513 	C$main.c$124$2_3$273	= .
                                   2514 	.globl	C$main.c$124$2_3$273
                                   2515 ;main.c:124: if (input & J_A)
      0009B8 CB 61            [ 8] 2516 	bit	4, c
      0009BA 28 08            [12] 2517 	jr	Z, 00102$
                           0009BC  2518 	C$main.c$126$3_3$274	= .
                                   2519 	.globl	C$main.c$126$3_3$274
                                   2520 ;main.c:126: attached = FALSE;
      0009BC F8 2E            [12] 2521 	ldhl	sp,	#46
      0009BE 36 00            [12] 2522 	ld	(hl), #0x00
                           0009C0  2523 	C$main.c$127$3_3$274	= .
                                   2524 	.globl	C$main.c$127$3_3$274
                                   2525 ;main.c:127: flinger.dragShifts = detachedFlingerDragShifts;
      0009C0 F8 29            [12] 2526 	ldhl	sp,	#41
      0009C2 36 06            [12] 2527 	ld	(hl), #0x06
      0009C4                       2528 00102$:
                           0009C4  2529 	C$main.c$129$2_3$273	= .
                                   2530 	.globl	C$main.c$129$2_3$273
                                   2531 ;main.c:129: getInput(input, &x, &y);
      0009C4 F8 2A            [12] 2532 	ldhl	sp,	#42
      0009C6 5D               [ 4] 2533 	ld	e, l
      0009C7 54               [ 4] 2534 	ld	d, h
      0009C8 21 2C 00         [12] 2535 	ld	hl, #44
      0009CB 39               [ 8] 2536 	add	hl, sp
      0009CC E5               [16] 2537 	push	hl
      0009CD 79               [ 4] 2538 	ld	a, c
      0009CE CDr0Cr08         [24] 2539 	call	_getInput
                                   2540 ;main.c:130: accelerateGameObject(&player.gameObject, x, y);
      0009D1 F8 2C            [12] 2541 	ldhl	sp,	#44
      0009D3 2A               [ 8] 2542 	ld	a, (hl+)
      0009D4 5E               [ 8] 2543 	ld	e, (hl)
      0009D5 F8 2A            [12] 2544 	ldhl	sp,	#42
      0009D7 4E               [ 8] 2545 	ld	c, (hl)
      0009D8 23               [ 8] 2546 	inc	hl
      0009D9 46               [ 8] 2547 	ld	b, (hl)
      0009DA F8 3B            [12] 2548 	ldhl	sp,	#59
      0009DC 22               [ 8] 2549 	ld	(hl+), a
      0009DD 73               [ 8] 2550 	ld	(hl), e
                                   2551 ;GameObject.c:54: go->velx = add(go->velx, x);
      0009DE F8 04            [12] 2552 	ldhl	sp,	#4
      0009E0 2A               [ 8] 2553 	ld	a, (hl+)
      0009E1 66               [ 8] 2554 	ld	h, (hl)
                                   2555 ;	spillPairReg hl
                                   2556 ;	spillPairReg hl
      0009E2 6F               [ 4] 2557 	ld	l, a
                                   2558 ;	spillPairReg hl
                                   2559 ;	spillPairReg hl
                                   2560 ;fixed.c:13: return a + b;
      0009E3 09               [ 8] 2561 	add	hl, bc
      0009E4 4D               [ 4] 2562 	ld	c, l
      0009E5 44               [ 4] 2563 	ld	b, h
                                   2564 ;GameObject.c:54: go->velx = add(go->velx, x);
      0009E6 F8 04            [12] 2565 	ldhl	sp,	#4
      0009E8 79               [ 4] 2566 	ld	a, c
      0009E9 22               [ 8] 2567 	ld	(hl+), a
                                   2568 ;GameObject.c:55: go->vely = add(go->vely, y);
      0009EA 78               [ 4] 2569 	ld	a, b
      0009EB 22               [ 8] 2570 	ld	(hl+), a
      0009EC 2A               [ 8] 2571 	ld	a, (hl+)
      0009ED 4F               [ 4] 2572 	ld	c, a
      0009EE 46               [ 8] 2573 	ld	b, (hl)
                                   2574 ;fixed.c:13: return a + b;
      0009EF F8 3B            [12] 2575 	ldhl	sp,	#59
      0009F1 2A               [ 8] 2576 	ld	a,	(hl+)
      0009F2 66               [ 8] 2577 	ld	h, (hl)
      0009F3 6F               [ 4] 2578 	ld	l, a
      0009F4 09               [ 8] 2579 	add	hl, bc
      0009F5 4D               [ 4] 2580 	ld	c, l
      0009F6 44               [ 4] 2581 	ld	b, h
                                   2582 ;GameObject.c:55: go->vely = add(go->vely, y);
      0009F7 F8 06            [12] 2583 	ldhl	sp,	#6
      0009F9 79               [ 4] 2584 	ld	a, c
      0009FA 22               [ 8] 2585 	ld	(hl+), a
      0009FB 70               [ 8] 2586 	ld	(hl), b
                           0009FC  2587 	C$main.c$131$2_3$273	= .
                                   2588 	.globl	C$main.c$131$2_3$273
                                   2589 ;main.c:131: applyDragToGameObject(&player.gameObject, player.dragShifts);
      0009FC F8 14            [12] 2590 	ldhl	sp,	#20
      0009FE 7E               [ 8] 2591 	ld	a, (hl)
      0009FF 21 00 00         [12] 2592 	ld	hl, #0
      000A02 39               [ 8] 2593 	add	hl, sp
      000A03 5D               [ 4] 2594 	ld	e, l
      000A04 54               [ 4] 2595 	ld	d, h
      000A05 CDr0Er05         [24] 2596 	call	_applyDragToGameObject
                           000A08  2597 	C$main.c$132$2_3$273	= .
                                   2598 	.globl	C$main.c$132$2_3$273
                                   2599 ;main.c:132: updateGameObject(&player.gameObject, &player.gameObject);
      000A08 21 00 00         [12] 2600 	ld	hl, #0
      000A0B 39               [ 8] 2601 	add	hl, sp
      000A0C 4D               [ 4] 2602 	ld	c, l
      000A0D 44               [ 4] 2603 	ld	b, h
      000A0E 21 00 00         [12] 2604 	ld	hl, #0
      000A11 39               [ 8] 2605 	add	hl, sp
      000A12 5D               [ 4] 2606 	ld	e, l
      000A13 54               [ 4] 2607 	ld	d, h
      000A14 CDrBBr02         [24] 2608 	call	_updateGameObject
                           000A17  2609 	C$main.c$133$2_3$273	= .
                                   2610 	.globl	C$main.c$133$2_3$273
                                   2611 ;main.c:133: setRotatedSprite(0, 0, x, y);
      000A17 F8 2C            [12] 2612 	ldhl	sp,	#44
      000A19 2A               [ 8] 2613 	ld	a, (hl+)
      000A1A 5F               [ 4] 2614 	ld	e, a
      000A1B 56               [ 8] 2615 	ld	d, (hl)
      000A1C D5               [16] 2616 	push	de
      000A1D F8 2C            [12] 2617 	ldhl	sp,	#44
      000A1F 2A               [ 8] 2618 	ld	a, (hl+)
      000A20 5F               [ 4] 2619 	ld	e, a
      000A21 56               [ 8] 2620 	ld	d, (hl)
      000A22 D5               [16] 2621 	push	de
      000A23 AF               [ 4] 2622 	xor	a, a
      000A24 5F               [ 4] 2623 	ld	e, a
      000A25 CDr8Br05         [24] 2624 	call	_setRotatedSprite
                           000A28  2625 	C$main.c$135$2_3$273	= .
                                   2626 	.globl	C$main.c$135$2_3$273
                                   2627 ;main.c:135: if (attached)
      000A28 F8 2E            [12] 2628 	ldhl	sp,	#46
      000A2A 7E               [ 8] 2629 	ld	a, (hl)
      000A2B B7               [ 4] 2630 	or	a, a
      000A2C CArBEr0A         [16] 2631 	jp	Z, 00106$
                                   2632 ;main.c:137: x = sub(player.gameObject.posx, flinger.gameObject.posx);
      000A2F F8 15            [12] 2633 	ldhl	sp,	#21
      000A31 2A               [ 8] 2634 	ld	a, (hl+)
      000A32 4F               [ 4] 2635 	ld	c, a
      000A33 46               [ 8] 2636 	ld	b, (hl)
      000A34 E1               [12] 2637 	pop	hl
      000A35 E5               [16] 2638 	push	hl
                                   2639 ;fixed.c:17: return a - b;
      000A36 7D               [ 4] 2640 	ld	a, l
      000A37 91               [ 4] 2641 	sub	a, c
      000A38 4F               [ 4] 2642 	ld	c, a
      000A39 7C               [ 4] 2643 	ld	a, h
      000A3A 98               [ 4] 2644 	sbc	a, b
      000A3B F8 39            [12] 2645 	ldhl	sp,	#57
      000A3D 71               [ 8] 2646 	ld	(hl), c
      000A3E 23               [ 8] 2647 	inc	hl
                           000A3F  2648 	C$main.c$137$5_3$310	= .
                                   2649 	.globl	C$main.c$137$5_3$310
                                   2650 ;main.c:137: x = sub(player.gameObject.posx, flinger.gameObject.posx);
      000A3F 32               [ 8] 2651 	ld	(hl-), a
      000A40 7E               [ 8] 2652 	ld	a, (hl)
      000A41 F8 2A            [12] 2653 	ldhl	sp,	#42
      000A43 77               [ 8] 2654 	ld	(hl), a
      000A44 F8 3A            [12] 2655 	ldhl	sp,	#58
      000A46 7E               [ 8] 2656 	ld	a, (hl)
      000A47 F8 2B            [12] 2657 	ldhl	sp,	#43
      000A49 77               [ 8] 2658 	ld	(hl), a
                                   2659 ;main.c:138: y = sub(player.gameObject.posy, flinger.gameObject.posy);
      000A4A F8 17            [12] 2660 	ldhl	sp,	#23
      000A4C 2A               [ 8] 2661 	ld	a, (hl+)
      000A4D 4F               [ 4] 2662 	ld	c, a
      000A4E 46               [ 8] 2663 	ld	b, (hl)
      000A4F F8 02            [12] 2664 	ldhl	sp,	#2
      000A51 2A               [ 8] 2665 	ld	a, (hl+)
      000A52 66               [ 8] 2666 	ld	h, (hl)
                                   2667 ;	spillPairReg hl
                                   2668 ;	spillPairReg hl
                                   2669 ;	spillPairReg hl
                                   2670 ;	spillPairReg hl
                                   2671 ;fixed.c:17: return a - b;
      000A53 91               [ 4] 2672 	sub	a, c
      000A54 4F               [ 4] 2673 	ld	c, a
      000A55 7C               [ 4] 2674 	ld	a, h
      000A56 98               [ 4] 2675 	sbc	a, b
      000A57 F8 3B            [12] 2676 	ldhl	sp,	#59
      000A59 71               [ 8] 2677 	ld	(hl), c
      000A5A 23               [ 8] 2678 	inc	hl
                           000A5B  2679 	C$main.c$138$5_3$313	= .
                                   2680 	.globl	C$main.c$138$5_3$313
                                   2681 ;main.c:138: y = sub(player.gameObject.posy, flinger.gameObject.posy);
      000A5B 32               [ 8] 2682 	ld	(hl-), a
      000A5C 7E               [ 8] 2683 	ld	a, (hl)
      000A5D F8 2C            [12] 2684 	ldhl	sp,	#44
      000A5F 77               [ 8] 2685 	ld	(hl), a
      000A60 F8 3C            [12] 2686 	ldhl	sp,	#60
      000A62 7E               [ 8] 2687 	ld	a, (hl)
      000A63 F8 2D            [12] 2688 	ldhl	sp,	#45
      000A65 77               [ 8] 2689 	ld	(hl), a
                           000A66  2690 	C$main.c$139$3_3$275	= .
                                   2691 	.globl	C$main.c$139$3_3$275
                                   2692 ;main.c:139: x = x >> flinger.accelerationShifts;
      000A66 F8 28            [12] 2693 	ldhl	sp,	#40
      000A68 7E               [ 8] 2694 	ld	a, (hl)
      000A69 F5               [16] 2695 	push	af
      000A6A F8 3B            [12] 2696 	ldhl	sp,	#59
      000A6C 2A               [ 8] 2697 	ld	a, (hl+)
      000A6D 4F               [ 4] 2698 	ld	c, a
      000A6E 46               [ 8] 2699 	ld	b, (hl)
      000A6F F1               [12] 2700 	pop	af
      000A70 3C               [ 4] 2701 	inc	a
      000A71 18 04            [12] 2702 	jr	00322$
      000A73                       2703 00321$:
      000A73 CB 28            [ 8] 2704 	sra	b
      000A75 CB 19            [ 8] 2705 	rr	c
      000A77                       2706 00322$:
      000A77 3D               [ 4] 2707 	dec	a
      000A78 20 F9            [12] 2708 	jr	NZ, 00321$
      000A7A F8 2A            [12] 2709 	ldhl	sp,	#42
      000A7C 79               [ 4] 2710 	ld	a, c
      000A7D 22               [ 8] 2711 	ld	(hl+), a
      000A7E 70               [ 8] 2712 	ld	(hl), b
                           000A7F  2713 	C$main.c$140$3_3$275	= .
                                   2714 	.globl	C$main.c$140$3_3$275
                                   2715 ;main.c:140: y = y >> flinger.accelerationShifts;
      000A7F F8 28            [12] 2716 	ldhl	sp,	#40
      000A81 7E               [ 8] 2717 	ld	a, (hl)
      000A82 F5               [16] 2718 	push	af
      000A83 F8 3D            [12] 2719 	ldhl	sp,	#61
      000A85 2A               [ 8] 2720 	ld	a, (hl+)
      000A86 5F               [ 4] 2721 	ld	e, a
      000A87 56               [ 8] 2722 	ld	d, (hl)
      000A88 F1               [12] 2723 	pop	af
      000A89 3C               [ 4] 2724 	inc	a
      000A8A 18 04            [12] 2725 	jr	00324$
      000A8C                       2726 00323$:
      000A8C CB 2A            [ 8] 2727 	sra	d
      000A8E CB 1B            [ 8] 2728 	rr	e
      000A90                       2729 00324$:
      000A90 3D               [ 4] 2730 	dec	a
      000A91 20 F9            [12] 2731 	jr	NZ, 00323$
      000A93 F8 2C            [12] 2732 	ldhl	sp,	#44
      000A95 7B               [ 4] 2733 	ld	a, e
      000A96 22               [ 8] 2734 	ld	(hl+), a
      000A97 72               [ 8] 2735 	ld	(hl), d
                                   2736 ;main.c:141: accelerateGameObject(&flinger.gameObject, x, y);
      000A98 F8 3B            [12] 2737 	ldhl	sp,	#59
      000A9A 7B               [ 4] 2738 	ld	a, e
      000A9B 22               [ 8] 2739 	ld	(hl+), a
      000A9C 72               [ 8] 2740 	ld	(hl), d
                                   2741 ;GameObject.c:54: go->velx = add(go->velx, x);
      000A9D F8 19            [12] 2742 	ldhl	sp,	#25
      000A9F 2A               [ 8] 2743 	ld	a, (hl+)
      000AA0 66               [ 8] 2744 	ld	h, (hl)
                                   2745 ;	spillPairReg hl
                                   2746 ;	spillPairReg hl
      000AA1 6F               [ 4] 2747 	ld	l, a
                                   2748 ;	spillPairReg hl
                                   2749 ;	spillPairReg hl
                                   2750 ;fixed.c:13: return a + b;
      000AA2 09               [ 8] 2751 	add	hl, bc
      000AA3 4D               [ 4] 2752 	ld	c, l
      000AA4 44               [ 4] 2753 	ld	b, h
                                   2754 ;GameObject.c:54: go->velx = add(go->velx, x);
      000AA5 F8 19            [12] 2755 	ldhl	sp,	#25
      000AA7 79               [ 4] 2756 	ld	a, c
      000AA8 22               [ 8] 2757 	ld	(hl+), a
                                   2758 ;GameObject.c:55: go->vely = add(go->vely, y);
      000AA9 78               [ 4] 2759 	ld	a, b
      000AAA 22               [ 8] 2760 	ld	(hl+), a
      000AAB 2A               [ 8] 2761 	ld	a, (hl+)
      000AAC 4F               [ 4] 2762 	ld	c, a
      000AAD 46               [ 8] 2763 	ld	b, (hl)
                                   2764 ;fixed.c:13: return a + b;
      000AAE F8 3B            [12] 2765 	ldhl	sp,	#59
      000AB0 2A               [ 8] 2766 	ld	a,	(hl+)
      000AB1 66               [ 8] 2767 	ld	h, (hl)
      000AB2 6F               [ 4] 2768 	ld	l, a
      000AB3 09               [ 8] 2769 	add	hl, bc
      000AB4 4D               [ 4] 2770 	ld	c, l
      000AB5 44               [ 4] 2771 	ld	b, h
                                   2772 ;GameObject.c:55: go->vely = add(go->vely, y);
      000AB6 F8 1B            [12] 2773 	ldhl	sp,	#27
      000AB8 79               [ 4] 2774 	ld	a, c
      000AB9 22               [ 8] 2775 	ld	(hl+), a
      000ABA 70               [ 8] 2776 	ld	(hl), b
                           000ABB  2777 	C$main.c$141$2_3$273	= .
                                   2778 	.globl	C$main.c$141$2_3$273
                                   2779 ;main.c:141: accelerateGameObject(&flinger.gameObject, x, y);
      000ABB C3rA8r0B         [16] 2780 	jp	00107$
      000ABE                       2781 00106$:
                                   2782 ;main.c:145: if (checkCollision(&player.gameObject.collider, &flinger.gameObject.collider))
                                   2783 ;GameObject.c:14: return !(a->posx >= b->posx + b->sizex || a->posx + a->sizex <= b->posx || a->posy >= b->posy + b->sizey || a->posy + a->sizey <= b->posy);
      000ABE F8 08            [12] 2784 	ldhl	sp,	#8
      000AC0 7E               [ 8] 2785 	ld	a, (hl)
      000AC1 F8 37            [12] 2786 	ldhl	sp,	#55
      000AC3 77               [ 8] 2787 	ld	(hl), a
      000AC4 F8 09            [12] 2788 	ldhl	sp,	#9
      000AC6 7E               [ 8] 2789 	ld	a, (hl)
      000AC7 F8 38            [12] 2790 	ldhl	sp,	#56
      000AC9 77               [ 8] 2791 	ld	(hl), a
      000ACA F8 1D            [12] 2792 	ldhl	sp,	#29
      000ACC 7E               [ 8] 2793 	ld	a, (hl)
      000ACD F8 39            [12] 2794 	ldhl	sp,	#57
      000ACF 77               [ 8] 2795 	ld	(hl), a
      000AD0 F8 1E            [12] 2796 	ldhl	sp,	#30
      000AD2 7E               [ 8] 2797 	ld	a, (hl)
      000AD3 F8 3A            [12] 2798 	ldhl	sp,	#58
      000AD5 77               [ 8] 2799 	ld	(hl), a
      000AD6 F8 21            [12] 2800 	ldhl	sp,	#33
      000AD8 2A               [ 8] 2801 	ld	a, (hl+)
      000AD9 4F               [ 4] 2802 	ld	c, a
      000ADA 46               [ 8] 2803 	ld	b, (hl)
      000ADB F8 39            [12] 2804 	ldhl	sp,	#57
      000ADD 2A               [ 8] 2805 	ld	a,	(hl+)
      000ADE 66               [ 8] 2806 	ld	h, (hl)
      000ADF 6F               [ 4] 2807 	ld	l, a
      000AE0 09               [ 8] 2808 	add	hl, bc
      000AE1 4D               [ 4] 2809 	ld	c, l
      000AE2 44               [ 4] 2810 	ld	b, h
      000AE3 F8 37            [12] 2811 	ldhl	sp,	#55
      000AE5 2A               [ 8] 2812 	ld	a, (hl+)
      000AE6 91               [ 4] 2813 	sub	a, c
      000AE7 7E               [ 8] 2814 	ld	a, (hl)
      000AE8 98               [ 4] 2815 	sbc	a, b
      000AE9 56               [ 8] 2816 	ld	d, (hl)
      000AEA 78               [ 4] 2817 	ld	a, b
      000AEB CB 7F            [ 8] 2818 	bit	7,a
      000AED 28 07            [12] 2819 	jr	Z, 00325$
      000AEF CB 7A            [ 8] 2820 	bit	7, d
      000AF1 20 08            [12] 2821 	jr	NZ, 00326$
      000AF3 BF               [ 4] 2822 	cp	a, a
      000AF4 18 05            [12] 2823 	jr	00326$
      000AF6                       2824 00325$:
      000AF6 CB 7A            [ 8] 2825 	bit	7, d
      000AF8 28 01            [12] 2826 	jr	Z, 00326$
      000AFA 37               [ 4] 2827 	scf
      000AFB                       2828 00326$:
      000AFB D2r9Ar0B         [16] 2829 	jp	NC, 00164$
      000AFE F8 0C            [12] 2830 	ldhl	sp,	#12
      000B00 7E               [ 8] 2831 	ld	a, (hl)
      000B01 F8 3B            [12] 2832 	ldhl	sp,	#59
      000B03 77               [ 8] 2833 	ld	(hl), a
      000B04 F8 0D            [12] 2834 	ldhl	sp,	#13
      000B06 7E               [ 8] 2835 	ld	a, (hl)
      000B07 F8 3C            [12] 2836 	ldhl	sp,	#60
      000B09 77               [ 8] 2837 	ld	(hl), a
      000B0A F8 37            [12] 2838 	ldhl	sp,#55
      000B0C 2A               [ 8] 2839 	ld	a, (hl+)
      000B0D 5F               [ 4] 2840 	ld	e, a
      000B0E 56               [ 8] 2841 	ld	d, (hl)
      000B0F F8 3B            [12] 2842 	ldhl	sp,	#59
      000B11 2A               [ 8] 2843 	ld	a,	(hl+)
      000B12 66               [ 8] 2844 	ld	h, (hl)
      000B13 6F               [ 4] 2845 	ld	l, a
      000B14 19               [ 8] 2846 	add	hl, de
      000B15 4D               [ 4] 2847 	ld	c, l
      000B16 44               [ 4] 2848 	ld	b, h
      000B17 F8 39            [12] 2849 	ldhl	sp,	#57
      000B19 2A               [ 8] 2850 	ld	a, (hl+)
      000B1A 91               [ 4] 2851 	sub	a, c
      000B1B 7E               [ 8] 2852 	ld	a, (hl)
      000B1C 98               [ 4] 2853 	sbc	a, b
      000B1D 56               [ 8] 2854 	ld	d, (hl)
      000B1E 78               [ 4] 2855 	ld	a, b
      000B1F CB 7F            [ 8] 2856 	bit	7,a
      000B21 28 07            [12] 2857 	jr	Z, 00327$
      000B23 CB 7A            [ 8] 2858 	bit	7, d
      000B25 20 08            [12] 2859 	jr	NZ, 00328$
      000B27 BF               [ 4] 2860 	cp	a, a
      000B28 18 05            [12] 2861 	jr	00328$
      000B2A                       2862 00327$:
      000B2A CB 7A            [ 8] 2863 	bit	7, d
      000B2C 28 01            [12] 2864 	jr	Z, 00328$
      000B2E 37               [ 4] 2865 	scf
      000B2F                       2866 00328$:
      000B2F 30 69            [12] 2867 	jr	NC, 00164$
      000B31 F8 0A            [12] 2868 	ldhl	sp,	#10
      000B33 7E               [ 8] 2869 	ld	a, (hl)
      000B34 F8 39            [12] 2870 	ldhl	sp,	#57
      000B36 77               [ 8] 2871 	ld	(hl), a
      000B37 F8 0B            [12] 2872 	ldhl	sp,	#11
      000B39 7E               [ 8] 2873 	ld	a, (hl)
      000B3A F8 3A            [12] 2874 	ldhl	sp,	#58
      000B3C 77               [ 8] 2875 	ld	(hl), a
      000B3D F8 1F            [12] 2876 	ldhl	sp,	#31
      000B3F 7E               [ 8] 2877 	ld	a, (hl)
      000B40 F8 3B            [12] 2878 	ldhl	sp,	#59
      000B42 77               [ 8] 2879 	ld	(hl), a
      000B43 F8 20            [12] 2880 	ldhl	sp,	#32
      000B45 7E               [ 8] 2881 	ld	a, (hl)
      000B46 F8 3C            [12] 2882 	ldhl	sp,	#60
      000B48 77               [ 8] 2883 	ld	(hl), a
      000B49 F8 23            [12] 2884 	ldhl	sp,	#35
      000B4B 2A               [ 8] 2885 	ld	a, (hl+)
      000B4C 4F               [ 4] 2886 	ld	c, a
      000B4D 46               [ 8] 2887 	ld	b, (hl)
      000B4E F8 3B            [12] 2888 	ldhl	sp,	#59
      000B50 2A               [ 8] 2889 	ld	a,	(hl+)
      000B51 66               [ 8] 2890 	ld	h, (hl)
      000B52 6F               [ 4] 2891 	ld	l, a
      000B53 09               [ 8] 2892 	add	hl, bc
      000B54 4D               [ 4] 2893 	ld	c, l
      000B55 44               [ 4] 2894 	ld	b, h
      000B56 F8 39            [12] 2895 	ldhl	sp,	#57
      000B58 2A               [ 8] 2896 	ld	a, (hl+)
      000B59 91               [ 4] 2897 	sub	a, c
      000B5A 7E               [ 8] 2898 	ld	a, (hl)
      000B5B 98               [ 4] 2899 	sbc	a, b
      000B5C 56               [ 8] 2900 	ld	d, (hl)
      000B5D 78               [ 4] 2901 	ld	a, b
      000B5E CB 7F            [ 8] 2902 	bit	7,a
      000B60 28 07            [12] 2903 	jr	Z, 00329$
      000B62 CB 7A            [ 8] 2904 	bit	7, d
      000B64 20 08            [12] 2905 	jr	NZ, 00330$
      000B66 BF               [ 4] 2906 	cp	a, a
      000B67 18 05            [12] 2907 	jr	00330$
      000B69                       2908 00329$:
      000B69 CB 7A            [ 8] 2909 	bit	7, d
      000B6B 28 01            [12] 2910 	jr	Z, 00330$
      000B6D 37               [ 4] 2911 	scf
      000B6E                       2912 00330$:
      000B6E 30 2A            [12] 2913 	jr	NC, 00164$
      000B70 F8 0E            [12] 2914 	ldhl	sp,	#14
      000B72 2A               [ 8] 2915 	ld	a, (hl+)
      000B73 4F               [ 4] 2916 	ld	c, a
      000B74 46               [ 8] 2917 	ld	b, (hl)
      000B75 F8 39            [12] 2918 	ldhl	sp,	#57
      000B77 2A               [ 8] 2919 	ld	a,	(hl+)
      000B78 66               [ 8] 2920 	ld	h, (hl)
      000B79 6F               [ 4] 2921 	ld	l, a
      000B7A 09               [ 8] 2922 	add	hl, bc
      000B7B 4D               [ 4] 2923 	ld	c, l
      000B7C 44               [ 4] 2924 	ld	b, h
      000B7D F8 3B            [12] 2925 	ldhl	sp,	#59
      000B7F 2A               [ 8] 2926 	ld	a, (hl+)
      000B80 91               [ 4] 2927 	sub	a, c
      000B81 7E               [ 8] 2928 	ld	a, (hl)
      000B82 98               [ 4] 2929 	sbc	a, b
      000B83 56               [ 8] 2930 	ld	d, (hl)
      000B84 78               [ 4] 2931 	ld	a, b
      000B85 CB 7F            [ 8] 2932 	bit	7,a
      000B87 28 07            [12] 2933 	jr	Z, 00331$
      000B89 CB 7A            [ 8] 2934 	bit	7, d
      000B8B 20 08            [12] 2935 	jr	NZ, 00332$
      000B8D BF               [ 4] 2936 	cp	a, a
      000B8E 18 05            [12] 2937 	jr	00332$
      000B90                       2938 00331$:
      000B90 CB 7A            [ 8] 2939 	bit	7, d
      000B92 28 01            [12] 2940 	jr	Z, 00332$
      000B94 37               [ 4] 2941 	scf
      000B95                       2942 00332$:
      000B95 30 03            [12] 2943 	jr	NC, 00164$
      000B97 AF               [ 4] 2944 	xor	a, a
      000B98 18 02            [12] 2945 	jr	00165$
      000B9A                       2946 00164$:
      000B9A 3E 01            [ 8] 2947 	ld	a, #0x01
      000B9C                       2948 00165$:
                           000B9C  2949 	C$main.c$145$5_3$325	= .
                                   2950 	.globl	C$main.c$145$5_3$325
                                   2951 ;main.c:145: if (checkCollision(&player.gameObject.collider, &flinger.gameObject.collider))
      000B9C EE 01            [ 8] 2952 	xor	a,#0x01
      000B9E 28 08            [12] 2953 	jr	Z, 00107$
                           000BA0  2954 	C$main.c$147$4_3$277	= .
                                   2955 	.globl	C$main.c$147$4_3$277
                                   2956 ;main.c:147: attached = TRUE;
      000BA0 F8 2E            [12] 2957 	ldhl	sp,	#46
      000BA2 36 01            [12] 2958 	ld	(hl), #0x01
                           000BA4  2959 	C$main.c$148$4_3$277	= .
                                   2960 	.globl	C$main.c$148$4_3$277
                                   2961 ;main.c:148: flinger.dragShifts = attachedFlingerDragShifts;
      000BA4 F8 29            [12] 2962 	ldhl	sp,	#41
      000BA6 36 04            [12] 2963 	ld	(hl), #0x04
      000BA8                       2964 00107$:
                           000BA8  2965 	C$main.c$151$2_3$273	= .
                                   2966 	.globl	C$main.c$151$2_3$273
                                   2967 ;main.c:151: applyDragToGameObject(&flinger.gameObject, flinger.dragShifts);
      000BA8 F8 29            [12] 2968 	ldhl	sp,	#41
      000BAA 7E               [ 8] 2969 	ld	a, (hl)
      000BAB 21 15 00         [12] 2970 	ld	hl, #21
      000BAE 39               [ 8] 2971 	add	hl, sp
      000BAF 5D               [ 4] 2972 	ld	e, l
      000BB0 54               [ 4] 2973 	ld	d, h
      000BB1 CDr0Er05         [24] 2974 	call	_applyDragToGameObject
                           000BB4  2975 	C$main.c$152$2_3$273	= .
                                   2976 	.globl	C$main.c$152$2_3$273
                                   2977 ;main.c:152: updateGameObject(&flinger.gameObject, &player.gameObject);
      000BB4 21 00 00         [12] 2978 	ld	hl, #0
      000BB7 39               [ 8] 2979 	add	hl, sp
      000BB8 4D               [ 4] 2980 	ld	c, l
      000BB9 44               [ 4] 2981 	ld	b, h
      000BBA 21 15 00         [12] 2982 	ld	hl, #21
      000BBD 39               [ 8] 2983 	add	hl, sp
      000BBE 5D               [ 4] 2984 	ld	e, l
      000BBF 54               [ 4] 2985 	ld	d, h
      000BC0 CDrBBr02         [24] 2986 	call	_updateGameObject
                                   2987 ;main.c:154: for (uint8_t i = 0; i < maxEnemyNumber; i++)
      000BC3 F8 3F            [12] 2988 	ldhl	sp,	#63
      000BC5 36 00            [12] 2989 	ld	(hl), #0x00
      000BC7                       2990 00159$:
      000BC7 F8 3F            [12] 2991 	ldhl	sp,	#63
      000BC9 7E               [ 8] 2992 	ld	a, (hl)
      000BCA D6 08            [ 8] 2993 	sub	a, #0x08
      000BCC D2r08r0F         [16] 2994 	jp	NC, 00116$
                           000BCF  2995 	C$main.c$156$1_3$269	= .
                                   2996 	.globl	C$main.c$156$1_3$269
                                   2997 ;main.c:156: if (activeEnemies[i])
      000BCF 11rA8r00         [12] 2998 	ld	de, #_activeEnemies
      000BD2 6E               [ 8] 2999 	ld	l, (hl)
      000BD3 26 00            [ 8] 3000 	ld	h, #0x00
      000BD5 19               [ 8] 3001 	add	hl, de
      000BD6 E5               [16] 3002 	push	hl
      000BD7 7D               [ 4] 3003 	ld	a, l
      000BD8 F8 31            [12] 3004 	ldhl	sp,	#49
      000BDA 77               [ 8] 3005 	ld	(hl), a
      000BDB E1               [12] 3006 	pop	hl
      000BDC 7C               [ 4] 3007 	ld	a, h
      000BDD F8 30            [12] 3008 	ldhl	sp,	#48
      000BDF 32               [ 8] 3009 	ld	(hl-), a
      000BE0 2A               [ 8] 3010 	ld	a, (hl+)
      000BE1 5F               [ 4] 3011 	ld	e, a
      000BE2 56               [ 8] 3012 	ld	d, (hl)
      000BE3 1A               [ 8] 3013 	ld	a, (de)
      000BE4 F8 3C            [12] 3014 	ldhl	sp,	#60
      000BE6 77               [ 8] 3015 	ld	(hl), a
      000BE7 7E               [ 8] 3016 	ld	a, (hl)
      000BE8 B7               [ 4] 3017 	or	a, a
      000BE9 CAr02r0F         [16] 3018 	jp	Z, 00160$
                                   3019 ;main.c:158: checkCollision(&enemies[i].gameObject.collider, &player.gameObject.collider);
      000BEC F8 3F            [12] 3020 	ldhl	sp,	#63
      000BEE 4E               [ 8] 3021 	ld	c, (hl)
      000BEF 06 00            [ 8] 3022 	ld	b, #0x00
      000BF1 69               [ 4] 3023 	ld	l, c
      000BF2 60               [ 4] 3024 	ld	h, b
      000BF3 29               [ 8] 3025 	add	hl, hl
      000BF4 29               [ 8] 3026 	add	hl, hl
      000BF5 09               [ 8] 3027 	add	hl, bc
      000BF6 29               [ 8] 3028 	add	hl, hl
      000BF7 29               [ 8] 3029 	add	hl, hl
      000BF8 09               [ 8] 3030 	add	hl, bc
      000BF9 01r00r00         [12] 3031 	ld	bc,#_enemies
      000BFC 09               [ 8] 3032 	add	hl,bc
      000BFD E5               [16] 3033 	push	hl
      000BFE 7D               [ 4] 3034 	ld	a, l
      000BFF F8 33            [12] 3035 	ldhl	sp,	#51
      000C01 77               [ 8] 3036 	ld	(hl), a
      000C02 E1               [12] 3037 	pop	hl
      000C03 7C               [ 4] 3038 	ld	a, h
      000C04 F8 32            [12] 3039 	ldhl	sp,	#50
      000C06 32               [ 8] 3040 	ld	(hl-), a
      000C07 2A               [ 8] 3041 	ld	a, (hl+)
      000C08 5F               [ 4] 3042 	ld	e, a
      000C09 56               [ 8] 3043 	ld	d, (hl)
      000C0A 21 08 00         [12] 3044 	ld	hl, #0x0008
      000C0D 19               [ 8] 3045 	add	hl, de
      000C0E E5               [16] 3046 	push	hl
      000C0F 7D               [ 4] 3047 	ld	a, l
      000C10 F8 35            [12] 3048 	ldhl	sp,	#53
      000C12 77               [ 8] 3049 	ld	(hl), a
      000C13 E1               [12] 3050 	pop	hl
      000C14 7C               [ 4] 3051 	ld	a, h
      000C15 F8 34            [12] 3052 	ldhl	sp,	#52
      000C17 32               [ 8] 3053 	ld	(hl-), a
      000C18 2A               [ 8] 3054 	ld	a, (hl+)
      000C19 23               [ 8] 3055 	inc	hl
      000C1A 32               [ 8] 3056 	ld	(hl-), a
      000C1B 2A               [ 8] 3057 	ld	a, (hl+)
      000C1C 23               [ 8] 3058 	inc	hl
                                   3059 ;GameObject.c:14: return !(a->posx >= b->posx + b->sizex || a->posx + a->sizex <= b->posx || a->posy >= b->posy + b->sizey || a->posy + a->sizey <= b->posy);
      000C1D 32               [ 8] 3060 	ld	(hl-), a
      000C1E 2A               [ 8] 3061 	ld	a, (hl+)
      000C1F 5F               [ 4] 3062 	ld	e, a
      000C20 56               [ 8] 3063 	ld	d, (hl)
      000C21 1A               [ 8] 3064 	ld	a, (de)
      000C22 4F               [ 4] 3065 	ld	c, a
      000C23 13               [ 8] 3066 	inc	de
      000C24 1A               [ 8] 3067 	ld	a, (de)
      000C25 47               [ 4] 3068 	ld	b, a
      000C26 F8 08            [12] 3069 	ldhl	sp,	#8
      000C28 7E               [ 8] 3070 	ld	a, (hl)
      000C29 F8 37            [12] 3071 	ldhl	sp,	#55
      000C2B 77               [ 8] 3072 	ld	(hl), a
      000C2C F8 09            [12] 3073 	ldhl	sp,	#9
      000C2E 7E               [ 8] 3074 	ld	a, (hl)
      000C2F F8 38            [12] 3075 	ldhl	sp,	#56
      000C31 77               [ 8] 3076 	ld	(hl), a
      000C32 F8 0C            [12] 3077 	ldhl	sp,	#12
      000C34 7E               [ 8] 3078 	ld	a, (hl)
      000C35 F8 39            [12] 3079 	ldhl	sp,	#57
      000C37 77               [ 8] 3080 	ld	(hl), a
      000C38 F8 0D            [12] 3081 	ldhl	sp,	#13
      000C3A 7E               [ 8] 3082 	ld	a, (hl)
      000C3B F8 3A            [12] 3083 	ldhl	sp,	#58
      000C3D 32               [ 8] 3084 	ld	(hl-), a
      000C3E 2B               [ 8] 3085 	dec	hl
      000C3F 2B               [ 8] 3086 	dec	hl
      000C40 2A               [ 8] 3087 	ld	a, (hl+)
      000C41 5F               [ 4] 3088 	ld	e, a
      000C42 2A               [ 8] 3089 	ld	a, (hl+)
      000C43 57               [ 4] 3090 	ld	d, a
      000C44 2A               [ 8] 3091 	ld	a,	(hl+)
      000C45 66               [ 8] 3092 	ld	h, (hl)
      000C46 6F               [ 4] 3093 	ld	l, a
      000C47 19               [ 8] 3094 	add	hl, de
      000C48 E5               [16] 3095 	push	hl
      000C49 7D               [ 4] 3096 	ld	a, l
      000C4A F8 3D            [12] 3097 	ldhl	sp,	#61
      000C4C 77               [ 8] 3098 	ld	(hl), a
      000C4D E1               [12] 3099 	pop	hl
      000C4E 7C               [ 4] 3100 	ld	a, h
      000C4F F8 3C            [12] 3101 	ldhl	sp,	#60
      000C51 32               [ 8] 3102 	ld	(hl-), a
      000C52 79               [ 4] 3103 	ld	a, c
      000C53 96               [ 8] 3104 	sub	a, (hl)
      000C54 23               [ 8] 3105 	inc	hl
      000C55 78               [ 4] 3106 	ld	a, b
      000C56 9E               [ 8] 3107 	sbc	a, (hl)
      000C57 78               [ 4] 3108 	ld	a, b
      000C58 57               [ 4] 3109 	ld	d, a
      000C59 CB 7E            [12] 3110 	bit	7, (hl)
      000C5B 28 07            [12] 3111 	jr	Z, 00333$
      000C5D CB 7A            [ 8] 3112 	bit	7, d
      000C5F 20 08            [12] 3113 	jr	NZ, 00334$
      000C61 BF               [ 4] 3114 	cp	a, a
      000C62 18 05            [12] 3115 	jr	00334$
      000C64                       3116 00333$:
      000C64 CB 7A            [ 8] 3117 	bit	7, d
      000C66 28 01            [12] 3118 	jr	Z, 00334$
      000C68 37               [ 4] 3119 	scf
      000C69                       3120 00334$:
      000C69 30 3D            [12] 3121 	jr	NC, 00174$
      000C6B F8 35            [12] 3122 	ldhl	sp,#53
      000C6D 2A               [ 8] 3123 	ld	a, (hl+)
      000C6E 5F               [ 4] 3124 	ld	e, a
      000C6F 56               [ 8] 3125 	ld	d, (hl)
      000C70 21 04 00         [12] 3126 	ld	hl, #0x0004
      000C73 19               [ 8] 3127 	add	hl, de
      000C74 E5               [16] 3128 	push	hl
      000C75 7D               [ 4] 3129 	ld	a, l
      000C76 F8 3D            [12] 3130 	ldhl	sp,	#61
      000C78 77               [ 8] 3131 	ld	(hl), a
      000C79 E1               [12] 3132 	pop	hl
      000C7A 7C               [ 4] 3133 	ld	a, h
      000C7B F8 3C            [12] 3134 	ldhl	sp,	#60
      000C7D 32               [ 8] 3135 	ld	(hl-), a
      000C7E 2A               [ 8] 3136 	ld	a, (hl+)
      000C7F 5F               [ 4] 3137 	ld	e, a
      000C80 3A               [ 8] 3138 	ld	a, (hl-)
      000C81 57               [ 4] 3139 	ld	d, a
      000C82 1A               [ 8] 3140 	ld	a, (de)
      000C83 22               [ 8] 3141 	ld	(hl+), a
      000C84 13               [ 8] 3142 	inc	de
      000C85 1A               [ 8] 3143 	ld	a, (de)
      000C86 32               [ 8] 3144 	ld	(hl-), a
      000C87 2A               [ 8] 3145 	ld	a,	(hl+)
      000C88 66               [ 8] 3146 	ld	h, (hl)
      000C89 6F               [ 4] 3147 	ld	l, a
      000C8A 09               [ 8] 3148 	add	hl, bc
      000C8B 4D               [ 4] 3149 	ld	c, l
      000C8C 44               [ 4] 3150 	ld	b, h
      000C8D F8 37            [12] 3151 	ldhl	sp,	#55
      000C8F 2A               [ 8] 3152 	ld	a, (hl+)
      000C90 91               [ 4] 3153 	sub	a, c
      000C91 7E               [ 8] 3154 	ld	a, (hl)
      000C92 98               [ 4] 3155 	sbc	a, b
      000C93 56               [ 8] 3156 	ld	d, (hl)
      000C94 78               [ 4] 3157 	ld	a, b
      000C95 CB 7F            [ 8] 3158 	bit	7,a
      000C97 28 07            [12] 3159 	jr	Z, 00335$
      000C99 CB 7A            [ 8] 3160 	bit	7, d
      000C9B 20 08            [12] 3161 	jr	NZ, 00336$
      000C9D BF               [ 4] 3162 	cp	a, a
      000C9E 18 05            [12] 3163 	jr	00336$
      000CA0                       3164 00335$:
      000CA0 CB 7A            [ 8] 3165 	bit	7, d
      000CA2 28 01            [12] 3166 	jr	Z, 00336$
      000CA4 37               [ 4] 3167 	scf
      000CA5                       3168 00336$:
      000CA5 3E 00            [ 8] 3169 	ld	a, #0x00
      000CA7 17               [ 4] 3170 	rla
      000CA8                       3171 00174$:
                                   3172 ;main.c:159: if (checkCollision(&enemies[i].gameObject.collider, &flinger.gameObject.collider))
      000CA8 F8 33            [12] 3173 	ldhl	sp,	#51
      000CAA 2A               [ 8] 3174 	ld	a, (hl+)
      000CAB 4E               [ 8] 3175 	ld	c, (hl)
      000CAC F8 37            [12] 3176 	ldhl	sp,	#55
      000CAE 22               [ 8] 3177 	ld	(hl+), a
                                   3178 ;GameObject.c:14: return !(a->posx >= b->posx + b->sizex || a->posx + a->sizex <= b->posx || a->posy >= b->posy + b->sizey || a->posy + a->sizey <= b->posy);
      000CAF 79               [ 4] 3179 	ld	a, c
      000CB0 32               [ 8] 3180 	ld	(hl-), a
      000CB1 2A               [ 8] 3181 	ld	a, (hl+)
      000CB2 5F               [ 4] 3182 	ld	e, a
      000CB3 2A               [ 8] 3183 	ld	a, (hl+)
      000CB4 57               [ 4] 3184 	ld	d, a
      000CB5 1A               [ 8] 3185 	ld	a, (de)
      000CB6 22               [ 8] 3186 	ld	(hl+), a
      000CB7 13               [ 8] 3187 	inc	de
      000CB8 1A               [ 8] 3188 	ld	a, (de)
      000CB9 77               [ 8] 3189 	ld	(hl), a
      000CBA F8 1D            [12] 3190 	ldhl	sp,	#29
      000CBC 7E               [ 8] 3191 	ld	a, (hl)
      000CBD F8 3B            [12] 3192 	ldhl	sp,	#59
      000CBF 77               [ 8] 3193 	ld	(hl), a
      000CC0 F8 1E            [12] 3194 	ldhl	sp,	#30
      000CC2 7E               [ 8] 3195 	ld	a, (hl)
      000CC3 F8 3C            [12] 3196 	ldhl	sp,	#60
      000CC5 77               [ 8] 3197 	ld	(hl), a
      000CC6 F8 21            [12] 3198 	ldhl	sp,	#33
      000CC8 2A               [ 8] 3199 	ld	a, (hl+)
      000CC9 4F               [ 4] 3200 	ld	c, a
      000CCA 46               [ 8] 3201 	ld	b, (hl)
      000CCB F8 3B            [12] 3202 	ldhl	sp,	#59
      000CCD 2A               [ 8] 3203 	ld	a,	(hl+)
      000CCE 66               [ 8] 3204 	ld	h, (hl)
      000CCF 6F               [ 4] 3205 	ld	l, a
      000CD0 09               [ 8] 3206 	add	hl, bc
      000CD1 4D               [ 4] 3207 	ld	c, l
      000CD2 44               [ 4] 3208 	ld	b, h
      000CD3 F8 39            [12] 3209 	ldhl	sp,	#57
      000CD5 2A               [ 8] 3210 	ld	a, (hl+)
      000CD6 91               [ 4] 3211 	sub	a, c
      000CD7 7E               [ 8] 3212 	ld	a, (hl)
      000CD8 98               [ 4] 3213 	sbc	a, b
      000CD9 56               [ 8] 3214 	ld	d, (hl)
      000CDA 78               [ 4] 3215 	ld	a, b
      000CDB CB 7F            [ 8] 3216 	bit	7,a
      000CDD 28 07            [12] 3217 	jr	Z, 00337$
      000CDF CB 7A            [ 8] 3218 	bit	7, d
      000CE1 20 08            [12] 3219 	jr	NZ, 00338$
      000CE3 BF               [ 4] 3220 	cp	a, a
      000CE4 18 05            [12] 3221 	jr	00338$
      000CE6                       3222 00337$:
      000CE6 CB 7A            [ 8] 3223 	bit	7, d
      000CE8 28 01            [12] 3224 	jr	Z, 00338$
      000CEA 37               [ 4] 3225 	scf
      000CEB                       3226 00338$:
      000CEB D2r92r0D         [16] 3227 	jp	NC, 00182$
      000CEE F8 37            [12] 3228 	ldhl	sp,#55
      000CF0 2A               [ 8] 3229 	ld	a, (hl+)
      000CF1 5F               [ 4] 3230 	ld	e, a
      000CF2 56               [ 8] 3231 	ld	d, (hl)
      000CF3 21 04 00         [12] 3232 	ld	hl, #0x0004
      000CF6 19               [ 8] 3233 	add	hl, de
      000CF7 2A               [ 8] 3234 	ld	a, (hl+)
      000CF8 4F               [ 4] 3235 	ld	c, a
      000CF9 46               [ 8] 3236 	ld	b, (hl)
      000CFA F8 39            [12] 3237 	ldhl	sp,	#57
      000CFC 2A               [ 8] 3238 	ld	a,	(hl+)
      000CFD 66               [ 8] 3239 	ld	h, (hl)
      000CFE 6F               [ 4] 3240 	ld	l, a
      000CFF 09               [ 8] 3241 	add	hl, bc
      000D00 4D               [ 4] 3242 	ld	c, l
      000D01 44               [ 4] 3243 	ld	b, h
      000D02 F8 3B            [12] 3244 	ldhl	sp,	#59
      000D04 2A               [ 8] 3245 	ld	a, (hl+)
      000D05 91               [ 4] 3246 	sub	a, c
      000D06 7E               [ 8] 3247 	ld	a, (hl)
      000D07 98               [ 4] 3248 	sbc	a, b
      000D08 56               [ 8] 3249 	ld	d, (hl)
      000D09 78               [ 4] 3250 	ld	a, b
      000D0A CB 7F            [ 8] 3251 	bit	7,a
      000D0C 28 07            [12] 3252 	jr	Z, 00339$
      000D0E CB 7A            [ 8] 3253 	bit	7, d
      000D10 20 08            [12] 3254 	jr	NZ, 00340$
      000D12 BF               [ 4] 3255 	cp	a, a
      000D13 18 05            [12] 3256 	jr	00340$
      000D15                       3257 00339$:
      000D15 CB 7A            [ 8] 3258 	bit	7, d
      000D17 28 01            [12] 3259 	jr	Z, 00340$
      000D19 37               [ 4] 3260 	scf
      000D1A                       3261 00340$:
      000D1A 30 76            [12] 3262 	jr	NC, 00182$
      000D1C F8 37            [12] 3263 	ldhl	sp,	#55
      000D1E 2A               [ 8] 3264 	ld	a, (hl+)
      000D1F 4F               [ 4] 3265 	ld	c, a
      000D20 2A               [ 8] 3266 	ld	a, (hl+)
      000D21 47               [ 4] 3267 	ld	b, a
      000D22 03               [ 8] 3268 	inc	bc
      000D23 03               [ 8] 3269 	inc	bc
      000D24 59               [ 4] 3270 	ld	e, c
      000D25 50               [ 4] 3271 	ld	d, b
      000D26 1A               [ 8] 3272 	ld	a, (de)
      000D27 22               [ 8] 3273 	ld	(hl+), a
      000D28 13               [ 8] 3274 	inc	de
      000D29 1A               [ 8] 3275 	ld	a, (de)
      000D2A 77               [ 8] 3276 	ld	(hl), a
      000D2B F8 1F            [12] 3277 	ldhl	sp,	#31
      000D2D 7E               [ 8] 3278 	ld	a, (hl)
      000D2E F8 3B            [12] 3279 	ldhl	sp,	#59
      000D30 77               [ 8] 3280 	ld	(hl), a
      000D31 F8 20            [12] 3281 	ldhl	sp,	#32
      000D33 7E               [ 8] 3282 	ld	a, (hl)
      000D34 F8 3C            [12] 3283 	ldhl	sp,	#60
      000D36 77               [ 8] 3284 	ld	(hl), a
      000D37 F8 23            [12] 3285 	ldhl	sp,	#35
      000D39 2A               [ 8] 3286 	ld	a, (hl+)
      000D3A 4F               [ 4] 3287 	ld	c, a
      000D3B 46               [ 8] 3288 	ld	b, (hl)
      000D3C F8 3B            [12] 3289 	ldhl	sp,	#59
      000D3E 2A               [ 8] 3290 	ld	a,	(hl+)
      000D3F 66               [ 8] 3291 	ld	h, (hl)
      000D40 6F               [ 4] 3292 	ld	l, a
      000D41 09               [ 8] 3293 	add	hl, bc
      000D42 4D               [ 4] 3294 	ld	c, l
      000D43 44               [ 4] 3295 	ld	b, h
      000D44 F8 39            [12] 3296 	ldhl	sp,	#57
      000D46 2A               [ 8] 3297 	ld	a, (hl+)
      000D47 91               [ 4] 3298 	sub	a, c
      000D48 7E               [ 8] 3299 	ld	a, (hl)
      000D49 98               [ 4] 3300 	sbc	a, b
      000D4A 56               [ 8] 3301 	ld	d, (hl)
      000D4B 78               [ 4] 3302 	ld	a, b
      000D4C CB 7F            [ 8] 3303 	bit	7,a
      000D4E 28 07            [12] 3304 	jr	Z, 00341$
      000D50 CB 7A            [ 8] 3305 	bit	7, d
      000D52 20 08            [12] 3306 	jr	NZ, 00342$
      000D54 BF               [ 4] 3307 	cp	a, a
      000D55 18 05            [12] 3308 	jr	00342$
      000D57                       3309 00341$:
      000D57 CB 7A            [ 8] 3310 	bit	7, d
      000D59 28 01            [12] 3311 	jr	Z, 00342$
      000D5B 37               [ 4] 3312 	scf
      000D5C                       3313 00342$:
      000D5C 30 34            [12] 3314 	jr	NC, 00182$
      000D5E F8 37            [12] 3315 	ldhl	sp,#55
      000D60 2A               [ 8] 3316 	ld	a, (hl+)
      000D61 5F               [ 4] 3317 	ld	e, a
      000D62 56               [ 8] 3318 	ld	d, (hl)
      000D63 21 06 00         [12] 3319 	ld	hl, #0x0006
      000D66 19               [ 8] 3320 	add	hl, de
      000D67 2A               [ 8] 3321 	ld	a, (hl+)
      000D68 4F               [ 4] 3322 	ld	c, a
      000D69 46               [ 8] 3323 	ld	b, (hl)
      000D6A F8 39            [12] 3324 	ldhl	sp,	#57
      000D6C 2A               [ 8] 3325 	ld	a,	(hl+)
      000D6D 66               [ 8] 3326 	ld	h, (hl)
      000D6E 6F               [ 4] 3327 	ld	l, a
      000D6F 09               [ 8] 3328 	add	hl, bc
      000D70 4D               [ 4] 3329 	ld	c, l
      000D71 44               [ 4] 3330 	ld	b, h
      000D72 F8 3B            [12] 3331 	ldhl	sp,	#59
      000D74 2A               [ 8] 3332 	ld	a, (hl+)
      000D75 91               [ 4] 3333 	sub	a, c
      000D76 7E               [ 8] 3334 	ld	a, (hl)
      000D77 98               [ 4] 3335 	sbc	a, b
      000D78 56               [ 8] 3336 	ld	d, (hl)
      000D79 78               [ 4] 3337 	ld	a, b
      000D7A CB 7F            [ 8] 3338 	bit	7,a
      000D7C 28 07            [12] 3339 	jr	Z, 00343$
      000D7E CB 7A            [ 8] 3340 	bit	7, d
      000D80 20 08            [12] 3341 	jr	NZ, 00344$
      000D82 BF               [ 4] 3342 	cp	a, a
      000D83 18 05            [12] 3343 	jr	00344$
      000D85                       3344 00343$:
      000D85 CB 7A            [ 8] 3345 	bit	7, d
      000D87 28 01            [12] 3346 	jr	Z, 00344$
      000D89 37               [ 4] 3347 	scf
      000D8A                       3348 00344$:
      000D8A 30 06            [12] 3349 	jr	NC, 00182$
      000D8C F8 3C            [12] 3350 	ldhl	sp,	#60
      000D8E 36 00            [12] 3351 	ld	(hl), #0x00
      000D90 18 04            [12] 3352 	jr	00183$
      000D92                       3353 00182$:
      000D92 F8 3C            [12] 3354 	ldhl	sp,	#60
      000D94 36 01            [12] 3355 	ld	(hl), #0x01
      000D96                       3356 00183$:
      000D96 F8 3C            [12] 3357 	ldhl	sp,	#60
      000D98 7E               [ 8] 3358 	ld	a, (hl)
                           000D99  3359 	C$main.c$159$7_3$331	= .
                                   3360 	.globl	C$main.c$159$7_3$331
                                   3361 ;main.c:159: if (checkCollision(&enemies[i].gameObject.collider, &flinger.gameObject.collider))
      000D99 EE 01            [ 8] 3362 	xor	a,#0x01
      000D9B 28 21            [12] 3363 	jr	Z, 00112$
                           000D9D  3364 	C$main.c$161$6_3$281	= .
                                   3365 	.globl	C$main.c$161$6_3$281
                                   3366 ;main.c:161: activeEnemies[i] = FALSE;
      000D9D F8 2F            [12] 3367 	ldhl	sp,	#47
      000D9F 2A               [ 8] 3368 	ld	a,	(hl+)
      000DA0 66               [ 8] 3369 	ld	h, (hl)
      000DA1 6F               [ 4] 3370 	ld	l, a
      000DA2 36 00            [12] 3371 	ld	(hl), #0x00
                                   3372 ;main.c:162: hide_sprite(enemies[i].gameObject.firstSprite);
      000DA4 F8 31            [12] 3373 	ldhl	sp,#49
      000DA6 2A               [ 8] 3374 	ld	a, (hl+)
      000DA7 5F               [ 4] 3375 	ld	e, a
      000DA8 56               [ 8] 3376 	ld	d, (hl)
      000DA9 21 10 00         [12] 3377 	ld	hl, #0x0010
      000DAC 19               [ 8] 3378 	add	hl, de
      000DAD 4D               [ 4] 3379 	ld	c, l
      000DAE 44               [ 4] 3380 	ld	b, h
      000DAF 0A               [ 8] 3381 	ld	a, (bc)
                                   3382 ;C:/gbdk-win64/gbdk/include/gb/gb.h:1703: shadow_OAM[nb].y = 0;
      000DB0 6F               [ 4] 3383 	ld	l, a
                                   3384 ;	spillPairReg hl
                                   3385 ;	spillPairReg hl
      000DB1 26 00            [ 8] 3386 	ld	h, #0x00
                                   3387 ;	spillPairReg hl
                                   3388 ;	spillPairReg hl
      000DB3 29               [ 8] 3389 	add	hl, hl
      000DB4 29               [ 8] 3390 	add	hl, hl
      000DB5 11r00r00         [12] 3391 	ld	de, #_shadow_OAM
      000DB8 19               [ 8] 3392 	add	hl, de
      000DB9 36 00            [12] 3393 	ld	(hl), #0x00
                           000DBB  3394 	C$main.c$162$5_3$280	= .
                                   3395 	.globl	C$main.c$162$5_3$280
                                   3396 ;main.c:162: hide_sprite(enemies[i].gameObject.firstSprite);
      000DBB C3r02r0F         [16] 3397 	jp	00160$
      000DBE                       3398 00112$:
                           000DBE  3399 	C$main.c$166$6_3$282	= .
                                   3400 	.globl	C$main.c$166$6_3$282
                                   3401 ;main.c:166: if (i == enemyUpdate || i == enemyUpdate + (maxEnemyNumber >> 1))
      000DBE F8 3F            [12] 3402 	ldhl	sp,	#63
      000DC0 7E               [ 8] 3403 	ld	a, (hl)
      000DC1 21rC0r04         [12] 3404 	ld	hl, #_enemyUpdate
      000DC4 96               [ 8] 3405 	sub	a, (hl)
      000DC5 28 30            [12] 3406 	jr	Z, 00108$
      000DC7 FArC0r04         [16] 3407 	ld	a, (#_enemyUpdate)
      000DCA F8 3B            [12] 3408 	ldhl	sp,	#59
      000DCC 22               [ 8] 3409 	ld	(hl+), a
      000DCD AF               [ 4] 3410 	xor	a, a
      000DCE 32               [ 8] 3411 	ld	(hl-), a
      000DCF 2A               [ 8] 3412 	ld	a, (hl+)
      000DD0 5F               [ 4] 3413 	ld	e, a
      000DD1 56               [ 8] 3414 	ld	d, (hl)
      000DD2 21 04 00         [12] 3415 	ld	hl, #0x0004
      000DD5 19               [ 8] 3416 	add	hl, de
      000DD6 E5               [16] 3417 	push	hl
      000DD7 7D               [ 4] 3418 	ld	a, l
      000DD8 F8 3B            [12] 3419 	ldhl	sp,	#59
      000DDA 77               [ 8] 3420 	ld	(hl), a
      000DDB E1               [12] 3421 	pop	hl
      000DDC 7C               [ 4] 3422 	ld	a, h
      000DDD F8 3A            [12] 3423 	ldhl	sp,	#58
      000DDF 77               [ 8] 3424 	ld	(hl), a
      000DE0 F8 3F            [12] 3425 	ldhl	sp,	#63
      000DE2 7E               [ 8] 3426 	ld	a, (hl)
      000DE3 F8 3B            [12] 3427 	ldhl	sp,	#59
      000DE5 22               [ 8] 3428 	ld	(hl+), a
      000DE6 36 00            [12] 3429 	ld	(hl), #0x00
      000DE8 F8 39            [12] 3430 	ldhl	sp,	#57
      000DEA 2A               [ 8] 3431 	ld	a, (hl+)
      000DEB 23               [ 8] 3432 	inc	hl
      000DEC 96               [ 8] 3433 	sub	a, (hl)
      000DED C2rF4r0E         [16] 3434 	jp	NZ,00109$
      000DF0 2B               [ 8] 3435 	dec	hl
      000DF1 2A               [ 8] 3436 	ld	a, (hl+)
      000DF2 23               [ 8] 3437 	inc	hl
      000DF3 96               [ 8] 3438 	sub	a, (hl)
      000DF4 C2rF4r0E         [16] 3439 	jp	NZ,00109$
      000DF7                       3440 00108$:
                                   3441 ;main.c:168: x = sub(player.gameObject.posx, enemies[i].gameObject.posx);
      000DF7 F8 31            [12] 3442 	ldhl	sp,#49
      000DF9 2A               [ 8] 3443 	ld	a, (hl+)
      000DFA 5F               [ 4] 3444 	ld	e, a
      000DFB 56               [ 8] 3445 	ld	d, (hl)
      000DFC 1A               [ 8] 3446 	ld	a, (de)
      000DFD 4F               [ 4] 3447 	ld	c, a
      000DFE 13               [ 8] 3448 	inc	de
      000DFF 1A               [ 8] 3449 	ld	a, (de)
      000E00 47               [ 4] 3450 	ld	b, a
      000E01 E1               [12] 3451 	pop	hl
      000E02 E5               [16] 3452 	push	hl
                                   3453 ;fixed.c:17: return a - b;
      000E03 7D               [ 4] 3454 	ld	a, l
      000E04 91               [ 4] 3455 	sub	a, c
      000E05 4F               [ 4] 3456 	ld	c, a
      000E06 7C               [ 4] 3457 	ld	a, h
      000E07 98               [ 4] 3458 	sbc	a, b
      000E08 F8 39            [12] 3459 	ldhl	sp,	#57
      000E0A 71               [ 8] 3460 	ld	(hl), c
      000E0B 23               [ 8] 3461 	inc	hl
                           000E0C  3462 	C$main.c$168$9_3$337	= .
                                   3463 	.globl	C$main.c$168$9_3$337
                                   3464 ;main.c:168: x = sub(player.gameObject.posx, enemies[i].gameObject.posx);
      000E0C 32               [ 8] 3465 	ld	(hl-), a
      000E0D 7E               [ 8] 3466 	ld	a, (hl)
      000E0E F8 2A            [12] 3467 	ldhl	sp,	#42
      000E10 77               [ 8] 3468 	ld	(hl), a
      000E11 F8 3A            [12] 3469 	ldhl	sp,	#58
      000E13 7E               [ 8] 3470 	ld	a, (hl)
      000E14 F8 2B            [12] 3471 	ldhl	sp,	#43
      000E16 77               [ 8] 3472 	ld	(hl), a
                                   3473 ;main.c:169: y = sub(player.gameObject.posy, enemies[i].gameObject.posy);
      000E17 F8 31            [12] 3474 	ldhl	sp,	#49
      000E19 2A               [ 8] 3475 	ld	a, (hl+)
      000E1A 66               [ 8] 3476 	ld	h, (hl)
                                   3477 ;	spillPairReg hl
                                   3478 ;	spillPairReg hl
      000E1B 6F               [ 4] 3479 	ld	l, a
                                   3480 ;	spillPairReg hl
                                   3481 ;	spillPairReg hl
      000E1C 23               [ 8] 3482 	inc	hl
      000E1D 23               [ 8] 3483 	inc	hl
      000E1E 2A               [ 8] 3484 	ld	a, (hl+)
      000E1F 4F               [ 4] 3485 	ld	c, a
      000E20 46               [ 8] 3486 	ld	b, (hl)
      000E21 F8 02            [12] 3487 	ldhl	sp,	#2
      000E23 2A               [ 8] 3488 	ld	a, (hl+)
      000E24 66               [ 8] 3489 	ld	h, (hl)
                                   3490 ;	spillPairReg hl
                                   3491 ;	spillPairReg hl
                                   3492 ;	spillPairReg hl
                                   3493 ;	spillPairReg hl
                                   3494 ;fixed.c:17: return a - b;
      000E25 91               [ 4] 3495 	sub	a, c
      000E26 4F               [ 4] 3496 	ld	c, a
      000E27 7C               [ 4] 3497 	ld	a, h
      000E28 98               [ 4] 3498 	sbc	a, b
      000E29 F8 3B            [12] 3499 	ldhl	sp,	#59
      000E2B 71               [ 8] 3500 	ld	(hl), c
      000E2C 23               [ 8] 3501 	inc	hl
                           000E2D  3502 	C$main.c$169$9_3$340	= .
                                   3503 	.globl	C$main.c$169$9_3$340
                                   3504 ;main.c:169: y = sub(player.gameObject.posy, enemies[i].gameObject.posy);
      000E2D 32               [ 8] 3505 	ld	(hl-), a
      000E2E 7E               [ 8] 3506 	ld	a, (hl)
      000E2F F8 2C            [12] 3507 	ldhl	sp,	#44
      000E31 77               [ 8] 3508 	ld	(hl), a
      000E32 F8 3C            [12] 3509 	ldhl	sp,	#60
      000E34 7E               [ 8] 3510 	ld	a, (hl)
      000E35 F8 2D            [12] 3511 	ldhl	sp,	#45
      000E37 77               [ 8] 3512 	ld	(hl), a
                           000E38  3513 	C$main.c$170$7_3$283	= .
                                   3514 	.globl	C$main.c$170$7_3$283
                                   3515 ;main.c:170: x = x >> enemies[i].accelerationShifts;
      000E38 F8 31            [12] 3516 	ldhl	sp,#49
      000E3A 2A               [ 8] 3517 	ld	a, (hl+)
      000E3B 5F               [ 4] 3518 	ld	e, a
      000E3C 56               [ 8] 3519 	ld	d, (hl)
      000E3D 21 13 00         [12] 3520 	ld	hl, #0x0013
      000E40 19               [ 8] 3521 	add	hl, de
      000E41 5D               [ 4] 3522 	ld	e, l
      000E42 54               [ 4] 3523 	ld	d, h
      000E43 1A               [ 8] 3524 	ld	a, (de)
      000E44 F5               [16] 3525 	push	af
      000E45 F8 3B            [12] 3526 	ldhl	sp,	#59
      000E47 2A               [ 8] 3527 	ld	a, (hl+)
      000E48 4F               [ 4] 3528 	ld	c, a
      000E49 46               [ 8] 3529 	ld	b, (hl)
      000E4A F1               [12] 3530 	pop	af
      000E4B 3C               [ 4] 3531 	inc	a
      000E4C 18 04            [12] 3532 	jr	00349$
      000E4E                       3533 00348$:
      000E4E CB 28            [ 8] 3534 	sra	b
      000E50 CB 19            [ 8] 3535 	rr	c
      000E52                       3536 00349$:
      000E52 3D               [ 4] 3537 	dec	a
      000E53 20 F9            [12] 3538 	jr	NZ, 00348$
      000E55 F8 2A            [12] 3539 	ldhl	sp,	#42
      000E57 79               [ 4] 3540 	ld	a, c
      000E58 22               [ 8] 3541 	ld	(hl+), a
      000E59 70               [ 8] 3542 	ld	(hl), b
                           000E5A  3543 	C$main.c$171$7_3$283	= .
                                   3544 	.globl	C$main.c$171$7_3$283
                                   3545 ;main.c:171: y = y >> enemies[i].accelerationShifts;
      000E5A 1A               [ 8] 3546 	ld	a, (de)
      000E5B F5               [16] 3547 	push	af
      000E5C F8 3D            [12] 3548 	ldhl	sp,	#61
      000E5E 2A               [ 8] 3549 	ld	a, (hl+)
      000E5F 5F               [ 4] 3550 	ld	e, a
      000E60 56               [ 8] 3551 	ld	d, (hl)
      000E61 F1               [12] 3552 	pop	af
      000E62 3C               [ 4] 3553 	inc	a
      000E63 18 04            [12] 3554 	jr	00351$
      000E65                       3555 00350$:
      000E65 CB 2A            [ 8] 3556 	sra	d
      000E67 CB 1B            [ 8] 3557 	rr	e
      000E69                       3558 00351$:
      000E69 3D               [ 4] 3559 	dec	a
      000E6A 20 F9            [12] 3560 	jr	NZ, 00350$
      000E6C F8 2C            [12] 3561 	ldhl	sp,	#44
      000E6E 7B               [ 4] 3562 	ld	a, e
      000E6F 22               [ 8] 3563 	ld	(hl+), a
      000E70 72               [ 8] 3564 	ld	(hl), d
                                   3565 ;main.c:172: accelerateGameObject(&enemies[i].gameObject, x, y);
      000E71 F8 37            [12] 3566 	ldhl	sp,	#55
      000E73 7B               [ 4] 3567 	ld	a, e
      000E74 22               [ 8] 3568 	ld	(hl+), a
      000E75 72               [ 8] 3569 	ld	(hl), d
      000E76 F8 31            [12] 3570 	ldhl	sp,	#49
      000E78 2A               [ 8] 3571 	ld	a, (hl+)
      000E79 5E               [ 8] 3572 	ld	e, (hl)
      000E7A F8 39            [12] 3573 	ldhl	sp,	#57
      000E7C 22               [ 8] 3574 	ld	(hl+), a
                                   3575 ;GameObject.c:54: go->velx = add(go->velx, x);
      000E7D 7B               [ 4] 3576 	ld	a, e
      000E7E 32               [ 8] 3577 	ld	(hl-), a
      000E7F 2A               [ 8] 3578 	ld	a, (hl+)
      000E80 5F               [ 4] 3579 	ld	e, a
      000E81 56               [ 8] 3580 	ld	d, (hl)
      000E82 21 04 00         [12] 3581 	ld	hl, #0x0004
      000E85 19               [ 8] 3582 	add	hl, de
      000E86 E5               [16] 3583 	push	hl
      000E87 7D               [ 4] 3584 	ld	a, l
      000E88 F8 3D            [12] 3585 	ldhl	sp,	#61
      000E8A 77               [ 8] 3586 	ld	(hl), a
      000E8B E1               [12] 3587 	pop	hl
      000E8C 7C               [ 4] 3588 	ld	a, h
      000E8D F8 3C            [12] 3589 	ldhl	sp,	#60
      000E8F 32               [ 8] 3590 	ld	(hl-), a
      000E90 2A               [ 8] 3591 	ld	a, (hl+)
      000E91 5F               [ 4] 3592 	ld	e, a
      000E92 56               [ 8] 3593 	ld	d, (hl)
      000E93 1A               [ 8] 3594 	ld	a, (de)
      000E94 6F               [ 4] 3595 	ld	l, a
                                   3596 ;	spillPairReg hl
                                   3597 ;	spillPairReg hl
      000E95 13               [ 8] 3598 	inc	de
      000E96 1A               [ 8] 3599 	ld	a, (de)
      000E97 67               [ 4] 3600 	ld	h, a
                                   3601 ;	spillPairReg hl
                                   3602 ;	spillPairReg hl
                                   3603 ;fixed.c:13: return a + b;
      000E98 09               [ 8] 3604 	add	hl, bc
      000E99 4D               [ 4] 3605 	ld	c, l
      000E9A 44               [ 4] 3606 	ld	b, h
                                   3607 ;GameObject.c:54: go->velx = add(go->velx, x);
      000E9B F8 3B            [12] 3608 	ldhl	sp,	#59
      000E9D 2A               [ 8] 3609 	ld	a,	(hl+)
      000E9E 66               [ 8] 3610 	ld	h, (hl)
      000E9F 6F               [ 4] 3611 	ld	l, a
      000EA0 79               [ 4] 3612 	ld	a, c
      000EA1 22               [ 8] 3613 	ld	(hl+), a
      000EA2 70               [ 8] 3614 	ld	(hl), b
                                   3615 ;GameObject.c:55: go->vely = add(go->vely, y);
      000EA3 F8 39            [12] 3616 	ldhl	sp,#57
      000EA5 2A               [ 8] 3617 	ld	a, (hl+)
      000EA6 5F               [ 4] 3618 	ld	e, a
      000EA7 56               [ 8] 3619 	ld	d, (hl)
      000EA8 21 06 00         [12] 3620 	ld	hl, #0x0006
      000EAB 19               [ 8] 3621 	add	hl, de
      000EAC 4D               [ 4] 3622 	ld	c, l
      000EAD 44               [ 4] 3623 	ld	b, h
      000EAE 59               [ 4] 3624 	ld	e, c
      000EAF 50               [ 4] 3625 	ld	d, b
      000EB0 1A               [ 8] 3626 	ld	a, (de)
      000EB1 F8 3B            [12] 3627 	ldhl	sp,	#59
      000EB3 22               [ 8] 3628 	ld	(hl+), a
      000EB4 13               [ 8] 3629 	inc	de
      000EB5 1A               [ 8] 3630 	ld	a, (de)
                                   3631 ;fixed.c:13: return a + b;
      000EB6 32               [ 8] 3632 	ld	(hl-), a
      000EB7 2A               [ 8] 3633 	ld	a, (hl+)
      000EB8 5F               [ 4] 3634 	ld	e, a
      000EB9 56               [ 8] 3635 	ld	d, (hl)
      000EBA F8 37            [12] 3636 	ldhl	sp,	#55
      000EBC 2A               [ 8] 3637 	ld	a,	(hl+)
      000EBD 66               [ 8] 3638 	ld	h, (hl)
      000EBE 6F               [ 4] 3639 	ld	l, a
      000EBF 19               [ 8] 3640 	add	hl, de
      000EC0 5D               [ 4] 3641 	ld	e, l
      000EC1 54               [ 4] 3642 	ld	d, h
                                   3643 ;GameObject.c:55: go->vely = add(go->vely, y);
      000EC2 7B               [ 4] 3644 	ld	a, e
      000EC3 02               [ 8] 3645 	ld	(bc), a
      000EC4 03               [ 8] 3646 	inc	bc
      000EC5 7A               [ 4] 3647 	ld	a, d
      000EC6 02               [ 8] 3648 	ld	(bc), a
                           000EC7  3649 	C$main.c$173$7_3$283	= .
                                   3650 	.globl	C$main.c$173$7_3$283
                                   3651 ;main.c:173: applyDragToGameObject(&enemies[i].gameObject, enemies[i].dragShifts);
      000EC7 F8 31            [12] 3652 	ldhl	sp,#49
      000EC9 2A               [ 8] 3653 	ld	a, (hl+)
      000ECA 5F               [ 4] 3654 	ld	e, a
      000ECB 56               [ 8] 3655 	ld	d, (hl)
      000ECC 21 14 00         [12] 3656 	ld	hl, #0x0014
      000ECF 19               [ 8] 3657 	add	hl, de
      000ED0 4D               [ 4] 3658 	ld	c, l
      000ED1 44               [ 4] 3659 	ld	b, h
      000ED2 0A               [ 8] 3660 	ld	a, (bc)
      000ED3 4F               [ 4] 3661 	ld	c, a
      000ED4 F8 31            [12] 3662 	ldhl	sp,	#49
      000ED6 2A               [ 8] 3663 	ld	a, (hl+)
      000ED7 5F               [ 4] 3664 	ld	e, a
      000ED8 56               [ 8] 3665 	ld	d, (hl)
      000ED9 79               [ 4] 3666 	ld	a, c
      000EDA CDr0Er05         [24] 3667 	call	_applyDragToGameObject
                           000EDD  3668 	C$main.c$174$7_3$283	= .
                                   3669 	.globl	C$main.c$174$7_3$283
                                   3670 ;main.c:174: setRotatedSprite(2 + i, 4, x, y);
      000EDD F8 3F            [12] 3671 	ldhl	sp,	#63
      000EDF 4E               [ 8] 3672 	ld	c, (hl)
      000EE0 0C               [ 4] 3673 	inc	c
      000EE1 0C               [ 4] 3674 	inc	c
      000EE2 F8 2C            [12] 3675 	ldhl	sp,	#44
      000EE4 2A               [ 8] 3676 	ld	a, (hl+)
      000EE5 5F               [ 4] 3677 	ld	e, a
      000EE6 56               [ 8] 3678 	ld	d, (hl)
      000EE7 D5               [16] 3679 	push	de
      000EE8 F8 2C            [12] 3680 	ldhl	sp,	#44
      000EEA 2A               [ 8] 3681 	ld	a, (hl+)
      000EEB 5F               [ 4] 3682 	ld	e, a
      000EEC 56               [ 8] 3683 	ld	d, (hl)
      000EED D5               [16] 3684 	push	de
      000EEE 1E 04            [ 8] 3685 	ld	e, #0x04
      000EF0 79               [ 4] 3686 	ld	a, c
      000EF1 CDr8Br05         [24] 3687 	call	_setRotatedSprite
      000EF4                       3688 00109$:
                           000EF4  3689 	C$main.c$176$6_3$282	= .
                                   3690 	.globl	C$main.c$176$6_3$282
                                   3691 ;main.c:176: updateGameObject(&enemies[i].gameObject, &player.gameObject);
      000EF4 F8 31            [12] 3692 	ldhl	sp,	#49
      000EF6 2A               [ 8] 3693 	ld	a, (hl+)
      000EF7 5F               [ 4] 3694 	ld	e, a
      000EF8 56               [ 8] 3695 	ld	d, (hl)
      000EF9 21 00 00         [12] 3696 	ld	hl, #0
      000EFC 39               [ 8] 3697 	add	hl, sp
      000EFD 4D               [ 4] 3698 	ld	c, l
      000EFE 44               [ 4] 3699 	ld	b, h
      000EFF CDrBBr02         [24] 3700 	call	_updateGameObject
      000F02                       3701 00160$:
                           000F02  3702 	C$main.c$154$3_3$278	= .
                                   3703 	.globl	C$main.c$154$3_3$278
                                   3704 ;main.c:154: for (uint8_t i = 0; i < maxEnemyNumber; i++)
      000F02 F8 3F            [12] 3705 	ldhl	sp,	#63
      000F04 34               [12] 3706 	inc	(hl)
      000F05 C3rC7r0B         [16] 3707 	jp	00159$
      000F08                       3708 00116$:
                           000F08  3709 	C$main.c$181$2_3$273	= .
                                   3710 	.globl	C$main.c$181$2_3$273
                                   3711 ;main.c:181: enemyUpdate++;
      000F08 21rC0r04         [12] 3712 	ld	hl, #_enemyUpdate
      000F0B 34               [12] 3713 	inc	(hl)
                           000F0C  3714 	C$main.c$182$2_3$273	= .
                                   3715 	.globl	C$main.c$182$2_3$273
                                   3716 ;main.c:182: if (enemyUpdate == 4)
      000F0C 7E               [ 8] 3717 	ld	a, (hl)
      000F0D D6 04            [ 8] 3718 	sub	a, #0x04
      000F0F 20 05            [12] 3719 	jr	NZ, 00118$
                           000F11  3720 	C$main.c$184$3_3$284	= .
                                   3721 	.globl	C$main.c$184$3_3$284
                                   3722 ;main.c:184: enemyUpdate = 0;
      000F11 21rC0r04         [12] 3723 	ld	hl, #_enemyUpdate
      000F14 36 00            [12] 3724 	ld	(hl), #0x00
      000F16                       3725 00118$:
                           000F16  3726 	C$main.c$187$2_3$273	= .
                                   3727 	.globl	C$main.c$187$2_3$273
                                   3728 ;main.c:187: enemyTimer--;
      000F16 F8 3D            [12] 3729 	ldhl	sp,	#61
                           000F18  3730 	C$main.c$188$2_3$273	= .
                                   3731 	.globl	C$main.c$188$2_3$273
                                   3732 ;main.c:188: if (enemyTimer == 0)
      000F18 35               [12] 3733 	dec	(hl)
      000F19 7E               [ 8] 3734 	ld	a, (hl)
      000F1A C2r08r10         [16] 3735 	jp	NZ, 00123$
                                   3736 ;main.c:57: for (uint8_t i = 0; i < maxEnemyNumber; i++)
                           000F1D  3737 	C$main.c$190$1_3$269	= .
                                   3738 	.globl	C$main.c$190$1_3$269
                                   3739 ;main.c:190: int8_t index = loadEnemy();
      000F1D 0E 00            [ 8] 3740 	ld	c, #0x00
      000F1F 59               [ 4] 3741 	ld	e, c
      000F20                       3742 00156$:
      000F20 7B               [ 4] 3743 	ld	a, e
      000F21 D6 08            [ 8] 3744 	sub	a, #0x08
      000F23 30 15            [12] 3745 	jr	NC, 00150$
      000F25 21rA8r00         [12] 3746 	ld	hl, #_activeEnemies
      000F28 16 00            [ 8] 3747 	ld	d, #0x00
      000F2A 19               [ 8] 3748 	add	hl, de
      000F2B 7E               [ 8] 3749 	ld	a, (hl)
      000F2C B7               [ 4] 3750 	or	a, a
      000F2D 20 07            [12] 3751 	jr	NZ, 00157$
      000F2F 36 01            [12] 3752 	ld	(hl), #0x01
      000F31 F8 3F            [12] 3753 	ldhl	sp,	#63
      000F33 71               [ 8] 3754 	ld	(hl), c
      000F34 18 08            [12] 3755 	jr	00151$
      000F36                       3756 00157$:
      000F36 1C               [ 4] 3757 	inc	e
      000F37 4B               [ 4] 3758 	ld	c, e
      000F38 18 E6            [12] 3759 	jr	00156$
      000F3A                       3760 00150$:
      000F3A F8 3F            [12] 3761 	ldhl	sp,	#63
      000F3C 36 FF            [12] 3762 	ld	(hl), #0xff
      000F3E                       3763 00151$:
                           000F3E  3764 	C$main.c$191$3_3$285	= .
                                   3765 	.globl	C$main.c$191$3_3$285
                                   3766 ;main.c:191: if (index != -1)
      000F3E F8 3F            [12] 3767 	ldhl	sp,	#63
      000F40 7E               [ 8] 3768 	ld	a, (hl)
      000F41 3C               [ 4] 3769 	inc	a
      000F42 CAr05r10         [16] 3770 	jp	Z,00120$
                           000F45  3771 	C$main.c$193$4_3$286	= .
                                   3772 	.globl	C$main.c$193$4_3$286
                                   3773 ;main.c:193: enemies[index].accelerationShifts = 11;
      000F45 F8 3F            [12] 3774 	ldhl	sp,	#63
      000F47 4E               [ 8] 3775 	ld	c, (hl)
      000F48 79               [ 4] 3776 	ld	a, c
      000F49 07               [ 4] 3777 	rlca
      000F4A 9F               [ 4] 3778 	sbc	a, a
      000F4B 47               [ 4] 3779 	ld	b, a
      000F4C 69               [ 4] 3780 	ld	l, c
      000F4D 60               [ 4] 3781 	ld	h, b
      000F4E 29               [ 8] 3782 	add	hl, hl
      000F4F 29               [ 8] 3783 	add	hl, hl
      000F50 09               [ 8] 3784 	add	hl, bc
      000F51 29               [ 8] 3785 	add	hl, hl
      000F52 29               [ 8] 3786 	add	hl, hl
      000F53 09               [ 8] 3787 	add	hl, bc
      000F54 01r00r00         [12] 3788 	ld	bc,#_enemies
      000F57 09               [ 8] 3789 	add	hl,bc
      000F58 4D               [ 4] 3790 	ld	c, l
      000F59 44               [ 4] 3791 	ld	b, h
      000F5A 21 13 00         [12] 3792 	ld	hl, #0x0013
      000F5D 09               [ 8] 3793 	add	hl, bc
      000F5E 36 0B            [12] 3794 	ld	(hl), #0x0b
                           000F60  3795 	C$main.c$194$4_3$286	= .
                                   3796 	.globl	C$main.c$194$4_3$286
                                   3797 ;main.c:194: enemies[index].dragShifts = 4;
      000F60 21 14 00         [12] 3798 	ld	hl, #0x0014
      000F63 09               [ 8] 3799 	add	hl, bc
      000F64 36 04            [12] 3800 	ld	(hl), #0x04
                           000F66  3801 	C$main.c$195$4_3$286	= .
                                   3802 	.globl	C$main.c$195$4_3$286
                                   3803 ;main.c:195: enemies[index].gameObject.firstSprite = 2 + index;
      000F66 21 10 00         [12] 3804 	ld	hl, #0x0010
      000F69 09               [ 8] 3805 	add	hl, bc
      000F6A 5D               [ 4] 3806 	ld	e, l
      000F6B 54               [ 4] 3807 	ld	d, h
      000F6C F8 3F            [12] 3808 	ldhl	sp,	#63
      000F6E 7E               [ 8] 3809 	ld	a, (hl)
      000F6F 3C               [ 4] 3810 	inc	a
      000F70 3C               [ 4] 3811 	inc	a
      000F71 12               [ 8] 3812 	ld	(de), a
                           000F72  3813 	C$main.c$196$4_3$286	= .
                                   3814 	.globl	C$main.c$196$4_3$286
                                   3815 ;main.c:196: enemies[index].gameObject.spriteSizex = 1;
      000F72 21 11 00         [12] 3816 	ld	hl, #0x0011
      000F75 09               [ 8] 3817 	add	hl, bc
      000F76 36 01            [12] 3818 	ld	(hl), #0x01
                           000F78  3819 	C$main.c$197$4_3$286	= .
                                   3820 	.globl	C$main.c$197$4_3$286
                                   3821 ;main.c:197: enemies[index].gameObject.spriteSizey = 1;
      000F78 21 12 00         [12] 3822 	ld	hl, #0x0012
      000F7B 09               [ 8] 3823 	add	hl, bc
      000F7C 36 01            [12] 3824 	ld	(hl), #0x01
                           000F7E  3825 	C$main.c$198$4_3$286	= .
                                   3826 	.globl	C$main.c$198$4_3$286
                                   3827 ;main.c:198: enemies[index].gameObject.posx = player.gameObject.posx;
      000F7E F8 00            [12] 3828 	ldhl	sp,	#0
      000F80 7E               [ 8] 3829 	ld	a, (hl)
      000F81 F8 36            [12] 3830 	ldhl	sp,	#54
      000F83 77               [ 8] 3831 	ld	(hl), a
      000F84 F8 01            [12] 3832 	ldhl	sp,	#1
      000F86 7E               [ 8] 3833 	ld	a, (hl)
      000F87 F8 37            [12] 3834 	ldhl	sp,	#55
      000F89 32               [ 8] 3835 	ld	(hl-), a
      000F8A 59               [ 4] 3836 	ld	e, c
      000F8B 50               [ 4] 3837 	ld	d, b
      000F8C 2A               [ 8] 3838 	ld	a, (hl+)
      000F8D 12               [ 8] 3839 	ld	(de), a
      000F8E 13               [ 8] 3840 	inc	de
      000F8F 7E               [ 8] 3841 	ld	a, (hl)
      000F90 12               [ 8] 3842 	ld	(de), a
                           000F91  3843 	C$main.c$199$4_3$286	= .
                                   3844 	.globl	C$main.c$199$4_3$286
                                   3845 ;main.c:199: enemies[index].gameObject.posy = sub(player.gameObject.posy, FIXED(80));
      000F91 21 02 00         [12] 3846 	ld	hl, #0x0002
      000F94 09               [ 8] 3847 	add	hl, bc
      000F95 E5               [16] 3848 	push	hl
      000F96 7D               [ 4] 3849 	ld	a, l
      000F97 F8 3A            [12] 3850 	ldhl	sp,	#58
      000F99 77               [ 8] 3851 	ld	(hl), a
      000F9A E1               [12] 3852 	pop	hl
      000F9B 7C               [ 4] 3853 	ld	a, h
      000F9C F8 39            [12] 3854 	ldhl	sp,	#57
      000F9E 77               [ 8] 3855 	ld	(hl), a
      000F9F F8 02            [12] 3856 	ldhl	sp,	#2
      000FA1 7E               [ 8] 3857 	ld	a, (hl)
      000FA2 F8 3A            [12] 3858 	ldhl	sp,	#58
      000FA4 77               [ 8] 3859 	ld	(hl), a
      000FA5 F8 03            [12] 3860 	ldhl	sp,	#3
      000FA7 7E               [ 8] 3861 	ld	a, (hl)
      000FA8 F8 3B            [12] 3862 	ldhl	sp,	#59
                                   3863 ;fixed.c:17: return a - b;
      000FAA 32               [ 8] 3864 	ld	(hl-), a
      000FAB 2A               [ 8] 3865 	ld	a, (hl+)
      000FAC 5F               [ 4] 3866 	ld	e, a
      000FAD 56               [ 8] 3867 	ld	d, (hl)
      000FAE 21 00 50         [12] 3868 	ld	hl, #0x5000
      000FB1 7B               [ 4] 3869 	ld	a, e
      000FB2 95               [ 4] 3870 	sub	a, l
      000FB3 5F               [ 4] 3871 	ld	e, a
      000FB4 7A               [ 4] 3872 	ld	a, d
      000FB5 9C               [ 4] 3873 	sbc	a, h
      000FB6 F8 3D            [12] 3874 	ldhl	sp,	#61
      000FB8 32               [ 8] 3875 	ld	(hl-), a
      000FB9 73               [ 8] 3876 	ld	(hl), e
                           000FBA  3877 	C$main.c$199$6_3$358	= .
                                   3878 	.globl	C$main.c$199$6_3$358
                                   3879 ;main.c:199: enemies[index].gameObject.posy = sub(player.gameObject.posy, FIXED(80));
      000FBA F8 38            [12] 3880 	ldhl	sp,#56
      000FBC 2A               [ 8] 3881 	ld	a, (hl+)
      000FBD 5F               [ 4] 3882 	ld	e, a
      000FBE 56               [ 8] 3883 	ld	d, (hl)
      000FBF F8 3C            [12] 3884 	ldhl	sp,	#60
      000FC1 2A               [ 8] 3885 	ld	a, (hl+)
      000FC2 12               [ 8] 3886 	ld	(de), a
      000FC3 13               [ 8] 3887 	inc	de
      000FC4 7E               [ 8] 3888 	ld	a, (hl)
      000FC5 12               [ 8] 3889 	ld	(de), a
                           000FC6  3890 	C$main.c$200$4_3$286	= .
                                   3891 	.globl	C$main.c$200$4_3$286
                                   3892 ;main.c:200: enemies[index].gameObject.velx = FIXED(0);
      000FC6 21 04 00         [12] 3893 	ld	hl, #0x0004
      000FC9 09               [ 8] 3894 	add	hl, bc
      000FCA AF               [ 4] 3895 	xor	a, a
      000FCB 22               [ 8] 3896 	ld	(hl+), a
      000FCC 77               [ 8] 3897 	ld	(hl), a
                           000FCD  3898 	C$main.c$201$4_3$286	= .
                                   3899 	.globl	C$main.c$201$4_3$286
                                   3900 ;main.c:201: enemies[index].gameObject.vely = FIXED(0);
      000FCD 21 06 00         [12] 3901 	ld	hl, #0x0006
      000FD0 09               [ 8] 3902 	add	hl, bc
      000FD1 AF               [ 4] 3903 	xor	a, a
      000FD2 22               [ 8] 3904 	ld	(hl+), a
      000FD3 77               [ 8] 3905 	ld	(hl), a
                           000FD4  3906 	C$main.c$202$4_3$286	= .
                                   3907 	.globl	C$main.c$202$4_3$286
                                   3908 ;main.c:202: enemies[index].gameObject.collider.posx = enemies[index].gameObject.posx;
      000FD4 21 08 00         [12] 3909 	ld	hl, #0x0008
      000FD7 09               [ 8] 3910 	add	hl, bc
      000FD8 5D               [ 4] 3911 	ld	e, l
      000FD9 54               [ 4] 3912 	ld	d, h
      000FDA F8 36            [12] 3913 	ldhl	sp,	#54
      000FDC 2A               [ 8] 3914 	ld	a, (hl+)
      000FDD 12               [ 8] 3915 	ld	(de), a
      000FDE 13               [ 8] 3916 	inc	de
      000FDF 7E               [ 8] 3917 	ld	a, (hl)
      000FE0 12               [ 8] 3918 	ld	(de), a
                           000FE1  3919 	C$main.c$203$4_3$286	= .
                                   3920 	.globl	C$main.c$203$4_3$286
                                   3921 ;main.c:203: enemies[index].gameObject.collider.posy = enemies[index].gameObject.posy;
      000FE1 21 0A 00         [12] 3922 	ld	hl, #0x000a
      000FE4 09               [ 8] 3923 	add	hl, bc
      000FE5 5D               [ 4] 3924 	ld	e, l
      000FE6 54               [ 4] 3925 	ld	d, h
      000FE7 F8 3C            [12] 3926 	ldhl	sp,	#60
      000FE9 2A               [ 8] 3927 	ld	a, (hl+)
      000FEA 12               [ 8] 3928 	ld	(de), a
      000FEB 13               [ 8] 3929 	inc	de
      000FEC 7E               [ 8] 3930 	ld	a, (hl)
      000FED 12               [ 8] 3931 	ld	(de), a
                           000FEE  3932 	C$main.c$204$4_3$286	= .
                                   3933 	.globl	C$main.c$204$4_3$286
                                   3934 ;main.c:204: enemies[index].gameObject.collider.sizex = FIXED(8);
      000FEE 21 0C 00         [12] 3935 	ld	hl, #0x000c
      000FF1 09               [ 8] 3936 	add	hl, bc
      000FF2 AF               [ 4] 3937 	xor	a, a
      000FF3 22               [ 8] 3938 	ld	(hl+), a
      000FF4 36 08            [12] 3939 	ld	(hl), #0x08
                           000FF6  3940 	C$main.c$205$4_3$286	= .
                                   3941 	.globl	C$main.c$205$4_3$286
                                   3942 ;main.c:205: enemies[index].gameObject.collider.sizey = FIXED(8);
      000FF6 21 0E 00         [12] 3943 	ld	hl, #0x000e
      000FF9 09               [ 8] 3944 	add	hl, bc
      000FFA AF               [ 4] 3945 	xor	a, a
      000FFB 22               [ 8] 3946 	ld	(hl+), a
      000FFC 36 08            [12] 3947 	ld	(hl), #0x08
                           000FFE  3948 	C$main.c$207$4_3$286	= .
                                   3949 	.globl	C$main.c$207$4_3$286
                                   3950 ;main.c:207: enemyTimer = resetEnemyTimer;
      000FFE F8 3E            [12] 3951 	ldhl	sp,	#62
      001000 3A               [ 8] 3952 	ld	a, (hl-)
                           001001  3953 	C$main.c$208$4_3$286	= .
                                   3954 	.globl	C$main.c$208$4_3$286
                                   3955 ;main.c:208: resetEnemyTimer--;
      001001 22               [ 8] 3956 	ld	(hl+), a
      001002 35               [12] 3957 	dec	(hl)
      001003 18 03            [12] 3958 	jr	00123$
      001005                       3959 00120$:
                           001005  3960 	C$main.c$212$4_3$287	= .
                                   3961 	.globl	C$main.c$212$4_3$287
                                   3962 ;main.c:212: enemyTimer++;
      001005 F8 3D            [12] 3963 	ldhl	sp,	#61
      001007 34               [12] 3964 	inc	(hl)
      001008                       3965 00123$:
                                   3966 ;main.c:216: moveBackground(&player.gameObject);
                                   3967 ;GameObject.c:101: move_bkg(INT(player->posx), INT(player->posy));
      001008 F8 02            [12] 3968 	ldhl	sp,	#2
      00100A 2A               [ 8] 3969 	ld	a, (hl+)
      00100B 46               [ 8] 3970 	ld	b, (hl)
      00100C F8 00            [12] 3971 	ldhl	sp,	#0
      00100E 2A               [ 8] 3972 	ld	a, (hl+)
      00100F 7E               [ 8] 3973 	ld	a, (hl)
      001010 E0r00            [12] 3974 	ldh	(_SCX_REG + 0), a
                                   3975 ;C:/gbdk-win64/gbdk/include/gb/gb.h:1208: SCX_REG=x, SCY_REG=y;
      001012 78               [ 4] 3976 	ld	a, b
      001013 E0r00            [12] 3977 	ldh	(_SCY_REG + 0), a
                           001015  3978 	C$main.c$218$2_3$273	= .
                                   3979 	.globl	C$main.c$218$2_3$273
                                   3980 ;main.c:218: wait_vbl_done();
      001015 CDr00r00         [24] 3981 	call	_wait_vbl_done
      001018 C3rB4r09         [16] 3982 	jp	00125$
                           00101B  3983 	C$main.c$220$1_3$269	= .
                                   3984 	.globl	C$main.c$220$1_3$269
                                   3985 ;main.c:220: }
      00101B E8 40            [16] 3986 	add	sp, #64
                           00101D  3987 	C$main.c$220$1_3$269	= .
                                   3988 	.globl	C$main.c$220$1_3$269
                           00101D  3989 	XG$main$0$0	= .
                                   3990 	.globl	XG$main$0$0
      00101D C9               [16] 3991 	ret
                                   3992 	.area _CODE
                                   3993 	.area _INITIALIZER
                           000000  3994 Fmain$__xinit_SpaceShipTiles$0_0$0 == .
      000000                       3995 __xinit__SpaceShipTiles:
      000000 18                    3996 	.db #0x18	; 24
      000001 18                    3997 	.db #0x18	; 24
      000002 18                    3998 	.db #0x18	; 24
      000003 18                    3999 	.db #0x18	; 24
      000004 24                    4000 	.db #0x24	; 36
      000005 3C                    4001 	.db #0x3c	; 60
      000006 24                    4002 	.db #0x24	; 36
      000007 3C                    4003 	.db #0x3c	; 60
      000008 3C                    4004 	.db #0x3c	; 60
      000009 3C                    4005 	.db #0x3c	; 60
      00000A 7E                    4006 	.db #0x7e	; 126
      00000B 3C                    4007 	.db #0x3c	; 60
      00000C 7E                    4008 	.db #0x7e	; 126
      00000D 3C                    4009 	.db #0x3c	; 60
      00000E 66                    4010 	.db #0x66	; 102	'f'
      00000F 24                    4011 	.db #0x24	; 36
      000010 C0                    4012 	.db #0xc0	; 192
      000011 C0                    4013 	.db #0xc0	; 192
      000012 F0                    4014 	.db #0xf0	; 240
      000013 F0                    4015 	.db #0xf0	; 240
      000014 4E                    4016 	.db #0x4e	; 78	'N'
      000015 7C                    4017 	.db #0x7c	; 124
      000016 4F                    4018 	.db #0x4f	; 79	'O'
      000017 7E                    4019 	.db #0x7e	; 126
      000018 3C                    4020 	.db #0x3c	; 60
      000019 3C                    4021 	.db #0x3c	; 60
      00001A 38                    4022 	.db #0x38	; 56	'8'
      00001B 38                    4023 	.db #0x38	; 56	'8'
      00001C 30                    4024 	.db #0x30	; 48	'0'
      00001D 10                    4025 	.db #0x10	; 16
      00001E 10                    4026 	.db #0x10	; 16
      00001F 00                    4027 	.db #0x00	; 0
      000020 00                    4028 	.db #0x00	; 0
      000021 00                    4029 	.db #0x00	; 0
      000022 07                    4030 	.db #0x07	; 7
      000023 00                    4031 	.db #0x00	; 0
      000024 3F                    4032 	.db #0x3f	; 63
      000025 3F                    4033 	.db #0x3f	; 63
      000026 CE                    4034 	.db #0xce	; 206
      000027 FE                    4035 	.db #0xfe	; 254
      000028 CE                    4036 	.db #0xce	; 206
      000029 FE                    4037 	.db #0xfe	; 254
      00002A 3F                    4038 	.db #0x3f	; 63
      00002B 3F                    4039 	.db #0x3f	; 63
      00002C 07                    4040 	.db #0x07	; 7
      00002D 00                    4041 	.db #0x00	; 0
      00002E 00                    4042 	.db #0x00	; 0
      00002F 00                    4043 	.db #0x00	; 0
      000030 08                    4044 	.db #0x08	; 8
      000031 10                    4045 	.db #0x10	; 16
      000032 56                    4046 	.db #0x56	; 86	'V'
      000033 3E                    4047 	.db #0x3e	; 62
      000034 2C                    4048 	.db #0x2c	; 44
      000035 7E                    4049 	.db #0x7e	; 126
      000036 52                    4050 	.db #0x52	; 82	'R'
      000037 ED                    4051 	.db #0xed	; 237
      000038 AD                    4052 	.db #0xad	; 173
      000039 7F                    4053 	.db #0x7f	; 127
      00003A 3A                    4054 	.db #0x3a	; 58
      00003B 7E                    4055 	.db #0x7e	; 126
      00003C 44                    4056 	.db #0x44	; 68	'D'
      00003D 3A                    4057 	.db #0x3a	; 58
      00003E 10                    4058 	.db #0x10	; 16
      00003F 08                    4059 	.db #0x08	; 8
      000040 00                    4060 	.db #0x00	; 0
      000041 00                    4061 	.db #0x00	; 0
      000042 3C                    4062 	.db #0x3c	; 60
      000043 3C                    4063 	.db #0x3c	; 60
      000044 66                    4064 	.db #0x66	; 102	'f'
      000045 7E                    4065 	.db #0x7e	; 126
      000046 E7                    4066 	.db #0xe7	; 231
      000047 7E                    4067 	.db #0x7e	; 126
      000048 FF                    4068 	.db #0xff	; 255
      000049 7E                    4069 	.db #0x7e	; 126
      00004A FF                    4070 	.db #0xff	; 255
      00004B 7E                    4071 	.db #0x7e	; 126
      00004C C3                    4072 	.db #0xc3	; 195
      00004D 00                    4073 	.db #0x00	; 0
      00004E 00                    4074 	.db #0x00	; 0
      00004F 00                    4075 	.db #0x00	; 0
      000050 00                    4076 	.db #0x00	; 0
      000051 00                    4077 	.db #0x00	; 0
      000052 3C                    4078 	.db #0x3c	; 60
      000053 3C                    4079 	.db #0x3c	; 60
      000054 4E                    4080 	.db #0x4e	; 78	'N'
      000055 7C                    4081 	.db #0x7c	; 124
      000056 4F                    4082 	.db #0x4f	; 79	'O'
      000057 7C                    4083 	.db #0x7c	; 124
      000058 7C                    4084 	.db #0x7c	; 124
      000059 7C                    4085 	.db #0x7c	; 124
      00005A 78                    4086 	.db #0x78	; 120	'x'
      00005B 78                    4087 	.db #0x78	; 120	'x'
      00005C 30                    4088 	.db #0x30	; 48	'0'
      00005D 00                    4089 	.db #0x00	; 0
      00005E 10                    4090 	.db #0x10	; 16
      00005F 00                    4091 	.db #0x00	; 0
      000060 1E                    4092 	.db #0x1e	; 30
      000061 00                    4093 	.db #0x00	; 0
      000062 3E                    4094 	.db #0x3e	; 62
      000063 3C                    4095 	.db #0x3c	; 60
      000064 7C                    4096 	.db #0x7c	; 124
      000065 7C                    4097 	.db #0x7c	; 124
      000066 4C                    4098 	.db #0x4c	; 76	'L'
      000067 7C                    4099 	.db #0x7c	; 124
      000068 4C                    4100 	.db #0x4c	; 76	'L'
      000069 7C                    4101 	.db #0x7c	; 124
      00006A 7C                    4102 	.db #0x7c	; 124
      00006B 7C                    4103 	.db #0x7c	; 124
      00006C 3E                    4104 	.db #0x3e	; 62
      00006D 3C                    4105 	.db #0x3c	; 60
      00006E 1E                    4106 	.db #0x1e	; 30
      00006F 00                    4107 	.db #0x00	; 0
                           000070  4108 Fmain$__xinit_SpaceTiles$0_0$0 == .
      000070                       4109 __xinit__SpaceTiles:
      000070 FF                    4110 	.db #0xff	; 255
      000071 FF                    4111 	.db #0xff	; 255
      000072 FF                    4112 	.db #0xff	; 255
      000073 FF                    4113 	.db #0xff	; 255
      000074 FF                    4114 	.db #0xff	; 255
      000075 FF                    4115 	.db #0xff	; 255
      000076 FF                    4116 	.db #0xff	; 255
      000077 FF                    4117 	.db #0xff	; 255
      000078 FF                    4118 	.db #0xff	; 255
      000079 FF                    4119 	.db #0xff	; 255
      00007A FF                    4120 	.db #0xff	; 255
      00007B FF                    4121 	.db #0xff	; 255
      00007C FF                    4122 	.db #0xff	; 255
      00007D FF                    4123 	.db #0xff	; 255
      00007E FF                    4124 	.db #0xff	; 255
      00007F FF                    4125 	.db #0xff	; 255
      000080 FF                    4126 	.db #0xff	; 255
      000081 FF                    4127 	.db #0xff	; 255
      000082 FF                    4128 	.db #0xff	; 255
      000083 FF                    4129 	.db #0xff	; 255
      000084 FF                    4130 	.db #0xff	; 255
      000085 FF                    4131 	.db #0xff	; 255
      000086 FF                    4132 	.db #0xff	; 255
      000087 FF                    4133 	.db #0xff	; 255
      000088 EF                    4134 	.db #0xef	; 239
      000089 FF                    4135 	.db #0xff	; 255
      00008A FF                    4136 	.db #0xff	; 255
      00008B FF                    4137 	.db #0xff	; 255
      00008C FF                    4138 	.db #0xff	; 255
      00008D FF                    4139 	.db #0xff	; 255
      00008E FF                    4140 	.db #0xff	; 255
      00008F FF                    4141 	.db #0xff	; 255
      000090 FF                    4142 	.db #0xff	; 255
      000091 FF                    4143 	.db #0xff	; 255
      000092 FF                    4144 	.db #0xff	; 255
      000093 FF                    4145 	.db #0xff	; 255
      000094 FF                    4146 	.db #0xff	; 255
      000095 FF                    4147 	.db #0xff	; 255
      000096 F7                    4148 	.db #0xf7	; 247
      000097 FF                    4149 	.db #0xff	; 255
      000098 EB                    4150 	.db #0xeb	; 235
      000099 F7                    4151 	.db #0xf7	; 247
      00009A F7                    4152 	.db #0xf7	; 247
      00009B FF                    4153 	.db #0xff	; 255
      00009C FF                    4154 	.db #0xff	; 255
      00009D FF                    4155 	.db #0xff	; 255
      00009E FF                    4156 	.db #0xff	; 255
      00009F FF                    4157 	.db #0xff	; 255
      0000A0 FF                    4158 	.db #0xff	; 255
      0000A1 FF                    4159 	.db #0xff	; 255
      0000A2 FF                    4160 	.db #0xff	; 255
      0000A3 FF                    4161 	.db #0xff	; 255
      0000A4 DF                    4162 	.db #0xdf	; 223
      0000A5 FF                    4163 	.db #0xff	; 255
      0000A6 FF                    4164 	.db #0xff	; 255
      0000A7 DF                    4165 	.db #0xdf	; 223
      0000A8 57                    4166 	.db #0x57	; 87	'W'
      0000A9 8F                    4167 	.db #0x8f	; 143
      0000AA FF                    4168 	.db #0xff	; 255
      0000AB DF                    4169 	.db #0xdf	; 223
      0000AC DF                    4170 	.db #0xdf	; 223
      0000AD FF                    4171 	.db #0xff	; 255
      0000AE FF                    4172 	.db #0xff	; 255
      0000AF FF                    4173 	.db #0xff	; 255
      0000B0 00                    4174 	.db #0x00	; 0
      0000B1 00                    4175 	.db #0x00	; 0
      0000B2 00                    4176 	.db #0x00	; 0
      0000B3 00                    4177 	.db #0x00	; 0
      0000B4 00                    4178 	.db #0x00	; 0
      0000B5 00                    4179 	.db #0x00	; 0
      0000B6 00                    4180 	.db #0x00	; 0
      0000B7 00                    4181 	.db #0x00	; 0
      0000B8 00                    4182 	.db #0x00	; 0
      0000B9 00                    4183 	.db #0x00	; 0
      0000BA 00                    4184 	.db #0x00	; 0
      0000BB 00                    4185 	.db #0x00	; 0
      0000BC 00                    4186 	.db #0x00	; 0
      0000BD 00                    4187 	.db #0x00	; 0
      0000BE 00                    4188 	.db #0x00	; 0
      0000BF 00                    4189 	.db #0x00	; 0
                           0000C0  4190 Fmain$__xinit_SpaceMap$0_0$0 == .
      0000C0                       4191 __xinit__SpaceMap:
      0000C0 00                    4192 	.db #0x00	; 0
      0000C1 00                    4193 	.db #0x00	; 0
      0000C2 03                    4194 	.db #0x03	; 3
      0000C3 00                    4195 	.db #0x00	; 0
      0000C4 00                    4196 	.db #0x00	; 0
      0000C5 00                    4197 	.db #0x00	; 0
      0000C6 00                    4198 	.db #0x00	; 0
      0000C7 00                    4199 	.db #0x00	; 0
      0000C8 00                    4200 	.db #0x00	; 0
      0000C9 00                    4201 	.db #0x00	; 0
      0000CA 00                    4202 	.db #0x00	; 0
      0000CB 00                    4203 	.db #0x00	; 0
      0000CC 00                    4204 	.db #0x00	; 0
      0000CD 00                    4205 	.db #0x00	; 0
      0000CE 00                    4206 	.db #0x00	; 0
      0000CF 00                    4207 	.db #0x00	; 0
      0000D0 00                    4208 	.db #0x00	; 0
      0000D1 00                    4209 	.db #0x00	; 0
      0000D2 00                    4210 	.db #0x00	; 0
      0000D3 00                    4211 	.db #0x00	; 0
      0000D4 00                    4212 	.db #0x00	; 0
      0000D5 00                    4213 	.db #0x00	; 0
      0000D6 00                    4214 	.db #0x00	; 0
      0000D7 00                    4215 	.db #0x00	; 0
      0000D8 00                    4216 	.db #0x00	; 0
      0000D9 00                    4217 	.db #0x00	; 0
      0000DA 00                    4218 	.db #0x00	; 0
      0000DB 00                    4219 	.db #0x00	; 0
      0000DC 00                    4220 	.db #0x00	; 0
      0000DD 00                    4221 	.db #0x00	; 0
      0000DE 00                    4222 	.db #0x00	; 0
      0000DF 00                    4223 	.db #0x00	; 0
      0000E0 00                    4224 	.db #0x00	; 0
      0000E1 00                    4225 	.db #0x00	; 0
      0000E2 00                    4226 	.db #0x00	; 0
      0000E3 00                    4227 	.db #0x00	; 0
      0000E4 00                    4228 	.db #0x00	; 0
      0000E5 00                    4229 	.db #0x00	; 0
      0000E6 00                    4230 	.db #0x00	; 0
      0000E7 00                    4231 	.db #0x00	; 0
      0000E8 02                    4232 	.db #0x02	; 2
      0000E9 00                    4233 	.db #0x00	; 0
      0000EA 00                    4234 	.db #0x00	; 0
      0000EB 00                    4235 	.db #0x00	; 0
      0000EC 00                    4236 	.db #0x00	; 0
      0000ED 00                    4237 	.db #0x00	; 0
      0000EE 00                    4238 	.db #0x00	; 0
      0000EF 00                    4239 	.db #0x00	; 0
      0000F0 00                    4240 	.db #0x00	; 0
      0000F1 00                    4241 	.db #0x00	; 0
      0000F2 00                    4242 	.db #0x00	; 0
      0000F3 00                    4243 	.db #0x00	; 0
      0000F4 03                    4244 	.db #0x03	; 3
      0000F5 00                    4245 	.db #0x00	; 0
      0000F6 02                    4246 	.db #0x02	; 2
      0000F7 00                    4247 	.db #0x00	; 0
      0000F8 00                    4248 	.db #0x00	; 0
      0000F9 00                    4249 	.db #0x00	; 0
      0000FA 00                    4250 	.db #0x00	; 0
      0000FB 00                    4251 	.db #0x00	; 0
      0000FC 02                    4252 	.db #0x02	; 2
      0000FD 00                    4253 	.db #0x00	; 0
      0000FE 00                    4254 	.db #0x00	; 0
      0000FF 00                    4255 	.db #0x00	; 0
      000100 00                    4256 	.db #0x00	; 0
      000101 00                    4257 	.db #0x00	; 0
      000102 00                    4258 	.db #0x00	; 0
      000103 00                    4259 	.db #0x00	; 0
      000104 00                    4260 	.db #0x00	; 0
      000105 00                    4261 	.db #0x00	; 0
      000106 00                    4262 	.db #0x00	; 0
      000107 00                    4263 	.db #0x00	; 0
      000108 00                    4264 	.db #0x00	; 0
      000109 00                    4265 	.db #0x00	; 0
      00010A 00                    4266 	.db #0x00	; 0
      00010B 00                    4267 	.db #0x00	; 0
      00010C 00                    4268 	.db #0x00	; 0
      00010D 00                    4269 	.db #0x00	; 0
      00010E 00                    4270 	.db #0x00	; 0
      00010F 00                    4271 	.db #0x00	; 0
      000110 03                    4272 	.db #0x03	; 3
      000111 00                    4273 	.db #0x00	; 0
      000112 00                    4274 	.db #0x00	; 0
      000113 00                    4275 	.db #0x00	; 0
      000114 00                    4276 	.db #0x00	; 0
      000115 00                    4277 	.db #0x00	; 0
      000116 00                    4278 	.db #0x00	; 0
      000117 00                    4279 	.db #0x00	; 0
      000118 00                    4280 	.db #0x00	; 0
      000119 00                    4281 	.db #0x00	; 0
      00011A 00                    4282 	.db #0x00	; 0
      00011B 00                    4283 	.db #0x00	; 0
      00011C 00                    4284 	.db #0x00	; 0
      00011D 00                    4285 	.db #0x00	; 0
      00011E 00                    4286 	.db #0x00	; 0
      00011F 00                    4287 	.db #0x00	; 0
      000120 00                    4288 	.db #0x00	; 0
      000121 00                    4289 	.db #0x00	; 0
      000122 00                    4290 	.db #0x00	; 0
      000123 01                    4291 	.db #0x01	; 1
      000124 00                    4292 	.db #0x00	; 0
      000125 00                    4293 	.db #0x00	; 0
      000126 00                    4294 	.db #0x00	; 0
      000127 00                    4295 	.db #0x00	; 0
      000128 00                    4296 	.db #0x00	; 0
      000129 00                    4297 	.db #0x00	; 0
      00012A 00                    4298 	.db #0x00	; 0
      00012B 00                    4299 	.db #0x00	; 0
      00012C 00                    4300 	.db #0x00	; 0
      00012D 00                    4301 	.db #0x00	; 0
      00012E 00                    4302 	.db #0x00	; 0
      00012F 00                    4303 	.db #0x00	; 0
      000130 00                    4304 	.db #0x00	; 0
      000131 00                    4305 	.db #0x00	; 0
      000132 00                    4306 	.db #0x00	; 0
      000133 00                    4307 	.db #0x00	; 0
      000134 00                    4308 	.db #0x00	; 0
      000135 00                    4309 	.db #0x00	; 0
      000136 00                    4310 	.db #0x00	; 0
      000137 00                    4311 	.db #0x00	; 0
      000138 00                    4312 	.db #0x00	; 0
      000139 00                    4313 	.db #0x00	; 0
      00013A 00                    4314 	.db #0x00	; 0
      00013B 00                    4315 	.db #0x00	; 0
      00013C 00                    4316 	.db #0x00	; 0
      00013D 00                    4317 	.db #0x00	; 0
      00013E 00                    4318 	.db #0x00	; 0
      00013F 03                    4319 	.db #0x03	; 3
      000140 00                    4320 	.db #0x00	; 0
      000141 00                    4321 	.db #0x00	; 0
      000142 02                    4322 	.db #0x02	; 2
      000143 00                    4323 	.db #0x00	; 0
      000144 00                    4324 	.db #0x00	; 0
      000145 00                    4325 	.db #0x00	; 0
      000146 00                    4326 	.db #0x00	; 0
      000147 00                    4327 	.db #0x00	; 0
      000148 00                    4328 	.db #0x00	; 0
      000149 03                    4329 	.db #0x03	; 3
      00014A 00                    4330 	.db #0x00	; 0
      00014B 00                    4331 	.db #0x00	; 0
      00014C 00                    4332 	.db #0x00	; 0
      00014D 00                    4333 	.db #0x00	; 0
      00014E 00                    4334 	.db #0x00	; 0
      00014F 00                    4335 	.db #0x00	; 0
      000150 00                    4336 	.db #0x00	; 0
      000151 01                    4337 	.db #0x01	; 1
      000152 00                    4338 	.db #0x00	; 0
      000153 00                    4339 	.db #0x00	; 0
      000154 00                    4340 	.db #0x00	; 0
      000155 00                    4341 	.db #0x00	; 0
      000156 00                    4342 	.db #0x00	; 0
      000157 00                    4343 	.db #0x00	; 0
      000158 00                    4344 	.db #0x00	; 0
      000159 00                    4345 	.db #0x00	; 0
      00015A 00                    4346 	.db #0x00	; 0
      00015B 00                    4347 	.db #0x00	; 0
      00015C 00                    4348 	.db #0x00	; 0
      00015D 00                    4349 	.db #0x00	; 0
      00015E 00                    4350 	.db #0x00	; 0
      00015F 00                    4351 	.db #0x00	; 0
      000160 00                    4352 	.db #0x00	; 0
      000161 00                    4353 	.db #0x00	; 0
      000162 01                    4354 	.db #0x01	; 1
      000163 00                    4355 	.db #0x00	; 0
      000164 00                    4356 	.db #0x00	; 0
      000165 02                    4357 	.db #0x02	; 2
      000166 00                    4358 	.db #0x00	; 0
      000167 00                    4359 	.db #0x00	; 0
      000168 00                    4360 	.db #0x00	; 0
      000169 00                    4361 	.db #0x00	; 0
      00016A 00                    4362 	.db #0x00	; 0
      00016B 00                    4363 	.db #0x00	; 0
      00016C 00                    4364 	.db #0x00	; 0
      00016D 00                    4365 	.db #0x00	; 0
      00016E 01                    4366 	.db #0x01	; 1
      00016F 00                    4367 	.db #0x00	; 0
      000170 00                    4368 	.db #0x00	; 0
      000171 00                    4369 	.db #0x00	; 0
      000172 00                    4370 	.db #0x00	; 0
      000173 00                    4371 	.db #0x00	; 0
      000174 00                    4372 	.db #0x00	; 0
      000175 00                    4373 	.db #0x00	; 0
      000176 00                    4374 	.db #0x00	; 0
      000177 00                    4375 	.db #0x00	; 0
      000178 00                    4376 	.db #0x00	; 0
      000179 00                    4377 	.db #0x00	; 0
      00017A 00                    4378 	.db #0x00	; 0
      00017B 00                    4379 	.db #0x00	; 0
      00017C 02                    4380 	.db #0x02	; 2
      00017D 00                    4381 	.db #0x00	; 0
      00017E 00                    4382 	.db #0x00	; 0
      00017F 00                    4383 	.db #0x00	; 0
      000180 00                    4384 	.db #0x00	; 0
      000181 00                    4385 	.db #0x00	; 0
      000182 00                    4386 	.db #0x00	; 0
      000183 00                    4387 	.db #0x00	; 0
      000184 00                    4388 	.db #0x00	; 0
      000185 00                    4389 	.db #0x00	; 0
      000186 00                    4390 	.db #0x00	; 0
      000187 00                    4391 	.db #0x00	; 0
      000188 00                    4392 	.db #0x00	; 0
      000189 00                    4393 	.db #0x00	; 0
      00018A 00                    4394 	.db #0x00	; 0
      00018B 00                    4395 	.db #0x00	; 0
      00018C 00                    4396 	.db #0x00	; 0
      00018D 00                    4397 	.db #0x00	; 0
      00018E 02                    4398 	.db #0x02	; 2
      00018F 00                    4399 	.db #0x00	; 0
      000190 00                    4400 	.db #0x00	; 0
      000191 00                    4401 	.db #0x00	; 0
      000192 00                    4402 	.db #0x00	; 0
      000193 00                    4403 	.db #0x00	; 0
      000194 00                    4404 	.db #0x00	; 0
      000195 00                    4405 	.db #0x00	; 0
      000196 03                    4406 	.db #0x03	; 3
      000197 00                    4407 	.db #0x00	; 0
      000198 00                    4408 	.db #0x00	; 0
      000199 00                    4409 	.db #0x00	; 0
      00019A 00                    4410 	.db #0x00	; 0
      00019B 00                    4411 	.db #0x00	; 0
      00019C 00                    4412 	.db #0x00	; 0
      00019D 00                    4413 	.db #0x00	; 0
      00019E 00                    4414 	.db #0x00	; 0
      00019F 00                    4415 	.db #0x00	; 0
      0001A0 00                    4416 	.db #0x00	; 0
      0001A1 00                    4417 	.db #0x00	; 0
      0001A2 00                    4418 	.db #0x00	; 0
      0001A3 00                    4419 	.db #0x00	; 0
      0001A4 00                    4420 	.db #0x00	; 0
      0001A5 00                    4421 	.db #0x00	; 0
      0001A6 00                    4422 	.db #0x00	; 0
      0001A7 02                    4423 	.db #0x02	; 2
      0001A8 00                    4424 	.db #0x00	; 0
      0001A9 01                    4425 	.db #0x01	; 1
      0001AA 00                    4426 	.db #0x00	; 0
      0001AB 00                    4427 	.db #0x00	; 0
      0001AC 00                    4428 	.db #0x00	; 0
      0001AD 00                    4429 	.db #0x00	; 0
      0001AE 00                    4430 	.db #0x00	; 0
      0001AF 00                    4431 	.db #0x00	; 0
      0001B0 00                    4432 	.db #0x00	; 0
      0001B1 00                    4433 	.db #0x00	; 0
      0001B2 00                    4434 	.db #0x00	; 0
      0001B3 00                    4435 	.db #0x00	; 0
      0001B4 00                    4436 	.db #0x00	; 0
      0001B5 00                    4437 	.db #0x00	; 0
      0001B6 00                    4438 	.db #0x00	; 0
      0001B7 00                    4439 	.db #0x00	; 0
      0001B8 00                    4440 	.db #0x00	; 0
      0001B9 00                    4441 	.db #0x00	; 0
      0001BA 00                    4442 	.db #0x00	; 0
      0001BB 00                    4443 	.db #0x00	; 0
      0001BC 00                    4444 	.db #0x00	; 0
      0001BD 00                    4445 	.db #0x00	; 0
      0001BE 00                    4446 	.db #0x00	; 0
      0001BF 00                    4447 	.db #0x00	; 0
      0001C0 00                    4448 	.db #0x00	; 0
      0001C1 00                    4449 	.db #0x00	; 0
      0001C2 00                    4450 	.db #0x00	; 0
      0001C3 00                    4451 	.db #0x00	; 0
      0001C4 00                    4452 	.db #0x00	; 0
      0001C5 00                    4453 	.db #0x00	; 0
      0001C6 00                    4454 	.db #0x00	; 0
      0001C7 00                    4455 	.db #0x00	; 0
      0001C8 00                    4456 	.db #0x00	; 0
      0001C9 00                    4457 	.db #0x00	; 0
      0001CA 00                    4458 	.db #0x00	; 0
      0001CB 00                    4459 	.db #0x00	; 0
      0001CC 00                    4460 	.db #0x00	; 0
      0001CD 00                    4461 	.db #0x00	; 0
      0001CE 00                    4462 	.db #0x00	; 0
      0001CF 02                    4463 	.db #0x02	; 2
      0001D0 00                    4464 	.db #0x00	; 0
      0001D1 00                    4465 	.db #0x00	; 0
      0001D2 00                    4466 	.db #0x00	; 0
      0001D3 00                    4467 	.db #0x00	; 0
      0001D4 02                    4468 	.db #0x02	; 2
      0001D5 00                    4469 	.db #0x00	; 0
      0001D6 00                    4470 	.db #0x00	; 0
      0001D7 00                    4471 	.db #0x00	; 0
      0001D8 00                    4472 	.db #0x00	; 0
      0001D9 01                    4473 	.db #0x01	; 1
      0001DA 00                    4474 	.db #0x00	; 0
      0001DB 00                    4475 	.db #0x00	; 0
      0001DC 00                    4476 	.db #0x00	; 0
      0001DD 00                    4477 	.db #0x00	; 0
      0001DE 00                    4478 	.db #0x00	; 0
      0001DF 00                    4479 	.db #0x00	; 0
      0001E0 00                    4480 	.db #0x00	; 0
      0001E1 00                    4481 	.db #0x00	; 0
      0001E2 01                    4482 	.db #0x01	; 1
      0001E3 00                    4483 	.db #0x00	; 0
      0001E4 00                    4484 	.db #0x00	; 0
      0001E5 00                    4485 	.db #0x00	; 0
      0001E6 00                    4486 	.db #0x00	; 0
      0001E7 00                    4487 	.db #0x00	; 0
      0001E8 00                    4488 	.db #0x00	; 0
      0001E9 00                    4489 	.db #0x00	; 0
      0001EA 00                    4490 	.db #0x00	; 0
      0001EB 00                    4491 	.db #0x00	; 0
      0001EC 00                    4492 	.db #0x00	; 0
      0001ED 00                    4493 	.db #0x00	; 0
      0001EE 00                    4494 	.db #0x00	; 0
      0001EF 00                    4495 	.db #0x00	; 0
      0001F0 00                    4496 	.db #0x00	; 0
      0001F1 00                    4497 	.db #0x00	; 0
      0001F2 00                    4498 	.db #0x00	; 0
      0001F3 00                    4499 	.db #0x00	; 0
      0001F4 00                    4500 	.db #0x00	; 0
      0001F5 00                    4501 	.db #0x00	; 0
      0001F6 00                    4502 	.db #0x00	; 0
      0001F7 00                    4503 	.db #0x00	; 0
      0001F8 00                    4504 	.db #0x00	; 0
      0001F9 00                    4505 	.db #0x00	; 0
      0001FA 00                    4506 	.db #0x00	; 0
      0001FB 00                    4507 	.db #0x00	; 0
      0001FC 00                    4508 	.db #0x00	; 0
      0001FD 00                    4509 	.db #0x00	; 0
      0001FE 00                    4510 	.db #0x00	; 0
      0001FF 02                    4511 	.db #0x02	; 2
      000200 00                    4512 	.db #0x00	; 0
      000201 00                    4513 	.db #0x00	; 0
      000202 00                    4514 	.db #0x00	; 0
      000203 00                    4515 	.db #0x00	; 0
      000204 00                    4516 	.db #0x00	; 0
      000205 00                    4517 	.db #0x00	; 0
      000206 00                    4518 	.db #0x00	; 0
      000207 00                    4519 	.db #0x00	; 0
      000208 00                    4520 	.db #0x00	; 0
      000209 00                    4521 	.db #0x00	; 0
      00020A 01                    4522 	.db #0x01	; 1
      00020B 00                    4523 	.db #0x00	; 0
      00020C 01                    4524 	.db #0x01	; 1
      00020D 00                    4525 	.db #0x00	; 0
      00020E 00                    4526 	.db #0x00	; 0
      00020F 00                    4527 	.db #0x00	; 0
      000210 00                    4528 	.db #0x00	; 0
      000211 00                    4529 	.db #0x00	; 0
      000212 00                    4530 	.db #0x00	; 0
      000213 00                    4531 	.db #0x00	; 0
      000214 00                    4532 	.db #0x00	; 0
      000215 00                    4533 	.db #0x00	; 0
      000216 00                    4534 	.db #0x00	; 0
      000217 00                    4535 	.db #0x00	; 0
      000218 00                    4536 	.db #0x00	; 0
      000219 00                    4537 	.db #0x00	; 0
      00021A 03                    4538 	.db #0x03	; 3
      00021B 00                    4539 	.db #0x00	; 0
      00021C 00                    4540 	.db #0x00	; 0
      00021D 00                    4541 	.db #0x00	; 0
      00021E 00                    4542 	.db #0x00	; 0
      00021F 00                    4543 	.db #0x00	; 0
      000220 00                    4544 	.db #0x00	; 0
      000221 00                    4545 	.db #0x00	; 0
      000222 00                    4546 	.db #0x00	; 0
      000223 00                    4547 	.db #0x00	; 0
      000224 03                    4548 	.db #0x03	; 3
      000225 00                    4549 	.db #0x00	; 0
      000226 00                    4550 	.db #0x00	; 0
      000227 00                    4551 	.db #0x00	; 0
      000228 00                    4552 	.db #0x00	; 0
      000229 00                    4553 	.db #0x00	; 0
      00022A 00                    4554 	.db #0x00	; 0
      00022B 00                    4555 	.db #0x00	; 0
      00022C 00                    4556 	.db #0x00	; 0
      00022D 00                    4557 	.db #0x00	; 0
      00022E 00                    4558 	.db #0x00	; 0
      00022F 00                    4559 	.db #0x00	; 0
      000230 00                    4560 	.db #0x00	; 0
      000231 00                    4561 	.db #0x00	; 0
      000232 03                    4562 	.db #0x03	; 3
      000233 00                    4563 	.db #0x00	; 0
      000234 00                    4564 	.db #0x00	; 0
      000235 00                    4565 	.db #0x00	; 0
      000236 00                    4566 	.db #0x00	; 0
      000237 01                    4567 	.db #0x01	; 1
      000238 00                    4568 	.db #0x00	; 0
      000239 00                    4569 	.db #0x00	; 0
      00023A 00                    4570 	.db #0x00	; 0
      00023B 00                    4571 	.db #0x00	; 0
      00023C 00                    4572 	.db #0x00	; 0
      00023D 00                    4573 	.db #0x00	; 0
      00023E 00                    4574 	.db #0x00	; 0
      00023F 00                    4575 	.db #0x00	; 0
      000240 00                    4576 	.db #0x00	; 0
      000241 00                    4577 	.db #0x00	; 0
      000242 00                    4578 	.db #0x00	; 0
      000243 00                    4579 	.db #0x00	; 0
      000244 00                    4580 	.db #0x00	; 0
      000245 00                    4581 	.db #0x00	; 0
      000246 00                    4582 	.db #0x00	; 0
      000247 00                    4583 	.db #0x00	; 0
      000248 00                    4584 	.db #0x00	; 0
      000249 00                    4585 	.db #0x00	; 0
      00024A 00                    4586 	.db #0x00	; 0
      00024B 02                    4587 	.db #0x02	; 2
      00024C 00                    4588 	.db #0x00	; 0
      00024D 00                    4589 	.db #0x00	; 0
      00024E 00                    4590 	.db #0x00	; 0
      00024F 00                    4591 	.db #0x00	; 0
      000250 00                    4592 	.db #0x00	; 0
      000251 00                    4593 	.db #0x00	; 0
      000252 00                    4594 	.db #0x00	; 0
      000253 00                    4595 	.db #0x00	; 0
      000254 00                    4596 	.db #0x00	; 0
      000255 00                    4597 	.db #0x00	; 0
      000256 00                    4598 	.db #0x00	; 0
      000257 00                    4599 	.db #0x00	; 0
      000258 00                    4600 	.db #0x00	; 0
      000259 00                    4601 	.db #0x00	; 0
      00025A 00                    4602 	.db #0x00	; 0
      00025B 00                    4603 	.db #0x00	; 0
      00025C 00                    4604 	.db #0x00	; 0
      00025D 00                    4605 	.db #0x00	; 0
      00025E 00                    4606 	.db #0x00	; 0
      00025F 00                    4607 	.db #0x00	; 0
      000260 00                    4608 	.db #0x00	; 0
      000261 00                    4609 	.db #0x00	; 0
      000262 00                    4610 	.db #0x00	; 0
      000263 00                    4611 	.db #0x00	; 0
      000264 00                    4612 	.db #0x00	; 0
      000265 00                    4613 	.db #0x00	; 0
      000266 00                    4614 	.db #0x00	; 0
      000267 00                    4615 	.db #0x00	; 0
      000268 00                    4616 	.db #0x00	; 0
      000269 00                    4617 	.db #0x00	; 0
      00026A 00                    4618 	.db #0x00	; 0
      00026B 00                    4619 	.db #0x00	; 0
      00026C 00                    4620 	.db #0x00	; 0
      00026D 00                    4621 	.db #0x00	; 0
      00026E 00                    4622 	.db #0x00	; 0
      00026F 00                    4623 	.db #0x00	; 0
      000270 00                    4624 	.db #0x00	; 0
      000271 00                    4625 	.db #0x00	; 0
      000272 00                    4626 	.db #0x00	; 0
      000273 00                    4627 	.db #0x00	; 0
      000274 00                    4628 	.db #0x00	; 0
      000275 00                    4629 	.db #0x00	; 0
      000276 00                    4630 	.db #0x00	; 0
      000277 00                    4631 	.db #0x00	; 0
      000278 00                    4632 	.db #0x00	; 0
      000279 00                    4633 	.db #0x00	; 0
      00027A 00                    4634 	.db #0x00	; 0
      00027B 00                    4635 	.db #0x00	; 0
      00027C 00                    4636 	.db #0x00	; 0
      00027D 00                    4637 	.db #0x00	; 0
      00027E 00                    4638 	.db #0x00	; 0
      00027F 00                    4639 	.db #0x00	; 0
      000280 00                    4640 	.db #0x00	; 0
      000281 01                    4641 	.db #0x01	; 1
      000282 00                    4642 	.db #0x00	; 0
      000283 00                    4643 	.db #0x00	; 0
      000284 01                    4644 	.db #0x01	; 1
      000285 02                    4645 	.db #0x02	; 2
      000286 00                    4646 	.db #0x00	; 0
      000287 00                    4647 	.db #0x00	; 0
      000288 00                    4648 	.db #0x00	; 0
      000289 02                    4649 	.db #0x02	; 2
      00028A 00                    4650 	.db #0x00	; 0
      00028B 00                    4651 	.db #0x00	; 0
      00028C 00                    4652 	.db #0x00	; 0
      00028D 01                    4653 	.db #0x01	; 1
      00028E 00                    4654 	.db #0x00	; 0
      00028F 00                    4655 	.db #0x00	; 0
      000290 00                    4656 	.db #0x00	; 0
      000291 00                    4657 	.db #0x00	; 0
      000292 00                    4658 	.db #0x00	; 0
      000293 00                    4659 	.db #0x00	; 0
      000294 00                    4660 	.db #0x00	; 0
      000295 02                    4661 	.db #0x02	; 2
      000296 00                    4662 	.db #0x00	; 0
      000297 00                    4663 	.db #0x00	; 0
      000298 00                    4664 	.db #0x00	; 0
      000299 02                    4665 	.db #0x02	; 2
      00029A 00                    4666 	.db #0x00	; 0
      00029B 00                    4667 	.db #0x00	; 0
      00029C 00                    4668 	.db #0x00	; 0
      00029D 00                    4669 	.db #0x00	; 0
      00029E 00                    4670 	.db #0x00	; 0
      00029F 00                    4671 	.db #0x00	; 0
      0002A0 00                    4672 	.db #0x00	; 0
      0002A1 03                    4673 	.db #0x03	; 3
      0002A2 00                    4674 	.db #0x00	; 0
      0002A3 00                    4675 	.db #0x00	; 0
      0002A4 00                    4676 	.db #0x00	; 0
      0002A5 00                    4677 	.db #0x00	; 0
      0002A6 00                    4678 	.db #0x00	; 0
      0002A7 00                    4679 	.db #0x00	; 0
      0002A8 00                    4680 	.db #0x00	; 0
      0002A9 00                    4681 	.db #0x00	; 0
      0002AA 00                    4682 	.db #0x00	; 0
      0002AB 00                    4683 	.db #0x00	; 0
      0002AC 00                    4684 	.db #0x00	; 0
      0002AD 00                    4685 	.db #0x00	; 0
      0002AE 00                    4686 	.db #0x00	; 0
      0002AF 02                    4687 	.db #0x02	; 2
      0002B0 00                    4688 	.db #0x00	; 0
      0002B1 00                    4689 	.db #0x00	; 0
      0002B2 00                    4690 	.db #0x00	; 0
      0002B3 00                    4691 	.db #0x00	; 0
      0002B4 00                    4692 	.db #0x00	; 0
      0002B5 00                    4693 	.db #0x00	; 0
      0002B6 00                    4694 	.db #0x00	; 0
      0002B7 00                    4695 	.db #0x00	; 0
      0002B8 00                    4696 	.db #0x00	; 0
      0002B9 00                    4697 	.db #0x00	; 0
      0002BA 00                    4698 	.db #0x00	; 0
      0002BB 00                    4699 	.db #0x00	; 0
      0002BC 02                    4700 	.db #0x02	; 2
      0002BD 01                    4701 	.db #0x01	; 1
      0002BE 00                    4702 	.db #0x00	; 0
      0002BF 00                    4703 	.db #0x00	; 0
      0002C0 00                    4704 	.db #0x00	; 0
      0002C1 00                    4705 	.db #0x00	; 0
      0002C2 00                    4706 	.db #0x00	; 0
      0002C3 00                    4707 	.db #0x00	; 0
      0002C4 00                    4708 	.db #0x00	; 0
      0002C5 00                    4709 	.db #0x00	; 0
      0002C6 00                    4710 	.db #0x00	; 0
      0002C7 00                    4711 	.db #0x00	; 0
      0002C8 00                    4712 	.db #0x00	; 0
      0002C9 00                    4713 	.db #0x00	; 0
      0002CA 00                    4714 	.db #0x00	; 0
      0002CB 00                    4715 	.db #0x00	; 0
      0002CC 00                    4716 	.db #0x00	; 0
      0002CD 00                    4717 	.db #0x00	; 0
      0002CE 00                    4718 	.db #0x00	; 0
      0002CF 00                    4719 	.db #0x00	; 0
      0002D0 00                    4720 	.db #0x00	; 0
      0002D1 02                    4721 	.db #0x02	; 2
      0002D2 00                    4722 	.db #0x00	; 0
      0002D3 00                    4723 	.db #0x00	; 0
      0002D4 00                    4724 	.db #0x00	; 0
      0002D5 00                    4725 	.db #0x00	; 0
      0002D6 01                    4726 	.db #0x01	; 1
      0002D7 00                    4727 	.db #0x00	; 0
      0002D8 00                    4728 	.db #0x00	; 0
      0002D9 00                    4729 	.db #0x00	; 0
      0002DA 00                    4730 	.db #0x00	; 0
      0002DB 00                    4731 	.db #0x00	; 0
      0002DC 00                    4732 	.db #0x00	; 0
      0002DD 00                    4733 	.db #0x00	; 0
      0002DE 00                    4734 	.db #0x00	; 0
      0002DF 00                    4735 	.db #0x00	; 0
      0002E0 00                    4736 	.db #0x00	; 0
      0002E1 00                    4737 	.db #0x00	; 0
      0002E2 00                    4738 	.db #0x00	; 0
      0002E3 00                    4739 	.db #0x00	; 0
      0002E4 00                    4740 	.db #0x00	; 0
      0002E5 00                    4741 	.db #0x00	; 0
      0002E6 00                    4742 	.db #0x00	; 0
      0002E7 00                    4743 	.db #0x00	; 0
      0002E8 00                    4744 	.db #0x00	; 0
      0002E9 00                    4745 	.db #0x00	; 0
      0002EA 00                    4746 	.db #0x00	; 0
      0002EB 00                    4747 	.db #0x00	; 0
      0002EC 00                    4748 	.db #0x00	; 0
      0002ED 00                    4749 	.db #0x00	; 0
      0002EE 00                    4750 	.db #0x00	; 0
      0002EF 00                    4751 	.db #0x00	; 0
      0002F0 00                    4752 	.db #0x00	; 0
      0002F1 00                    4753 	.db #0x00	; 0
      0002F2 00                    4754 	.db #0x00	; 0
      0002F3 00                    4755 	.db #0x00	; 0
      0002F4 03                    4756 	.db #0x03	; 3
      0002F5 00                    4757 	.db #0x00	; 0
      0002F6 00                    4758 	.db #0x00	; 0
      0002F7 00                    4759 	.db #0x00	; 0
      0002F8 00                    4760 	.db #0x00	; 0
      0002F9 00                    4761 	.db #0x00	; 0
      0002FA 00                    4762 	.db #0x00	; 0
      0002FB 00                    4763 	.db #0x00	; 0
      0002FC 00                    4764 	.db #0x00	; 0
      0002FD 00                    4765 	.db #0x00	; 0
      0002FE 00                    4766 	.db #0x00	; 0
      0002FF 00                    4767 	.db #0x00	; 0
      000300 00                    4768 	.db #0x00	; 0
      000301 00                    4769 	.db #0x00	; 0
      000302 02                    4770 	.db #0x02	; 2
      000303 00                    4771 	.db #0x00	; 0
      000304 00                    4772 	.db #0x00	; 0
      000305 00                    4773 	.db #0x00	; 0
      000306 00                    4774 	.db #0x00	; 0
      000307 00                    4775 	.db #0x00	; 0
      000308 00                    4776 	.db #0x00	; 0
      000309 00                    4777 	.db #0x00	; 0
      00030A 00                    4778 	.db #0x00	; 0
      00030B 00                    4779 	.db #0x00	; 0
      00030C 01                    4780 	.db #0x01	; 1
      00030D 00                    4781 	.db #0x00	; 0
      00030E 00                    4782 	.db #0x00	; 0
      00030F 00                    4783 	.db #0x00	; 0
      000310 00                    4784 	.db #0x00	; 0
      000311 00                    4785 	.db #0x00	; 0
      000312 00                    4786 	.db #0x00	; 0
      000313 00                    4787 	.db #0x00	; 0
      000314 00                    4788 	.db #0x00	; 0
      000315 00                    4789 	.db #0x00	; 0
      000316 00                    4790 	.db #0x00	; 0
      000317 00                    4791 	.db #0x00	; 0
      000318 00                    4792 	.db #0x00	; 0
      000319 00                    4793 	.db #0x00	; 0
      00031A 00                    4794 	.db #0x00	; 0
      00031B 00                    4795 	.db #0x00	; 0
      00031C 00                    4796 	.db #0x00	; 0
      00031D 00                    4797 	.db #0x00	; 0
      00031E 02                    4798 	.db #0x02	; 2
      00031F 00                    4799 	.db #0x00	; 0
      000320 00                    4800 	.db #0x00	; 0
      000321 00                    4801 	.db #0x00	; 0
      000322 00                    4802 	.db #0x00	; 0
      000323 00                    4803 	.db #0x00	; 0
      000324 01                    4804 	.db #0x01	; 1
      000325 00                    4805 	.db #0x00	; 0
      000326 00                    4806 	.db #0x00	; 0
      000327 01                    4807 	.db #0x01	; 1
      000328 00                    4808 	.db #0x00	; 0
      000329 00                    4809 	.db #0x00	; 0
      00032A 03                    4810 	.db #0x03	; 3
      00032B 00                    4811 	.db #0x00	; 0
      00032C 01                    4812 	.db #0x01	; 1
      00032D 00                    4813 	.db #0x00	; 0
      00032E 00                    4814 	.db #0x00	; 0
      00032F 00                    4815 	.db #0x00	; 0
      000330 00                    4816 	.db #0x00	; 0
      000331 00                    4817 	.db #0x00	; 0
      000332 00                    4818 	.db #0x00	; 0
      000333 00                    4819 	.db #0x00	; 0
      000334 00                    4820 	.db #0x00	; 0
      000335 00                    4821 	.db #0x00	; 0
      000336 00                    4822 	.db #0x00	; 0
      000337 00                    4823 	.db #0x00	; 0
      000338 00                    4824 	.db #0x00	; 0
      000339 01                    4825 	.db #0x01	; 1
      00033A 00                    4826 	.db #0x00	; 0
      00033B 00                    4827 	.db #0x00	; 0
      00033C 00                    4828 	.db #0x00	; 0
      00033D 00                    4829 	.db #0x00	; 0
      00033E 00                    4830 	.db #0x00	; 0
      00033F 00                    4831 	.db #0x00	; 0
      000340 00                    4832 	.db #0x00	; 0
      000341 00                    4833 	.db #0x00	; 0
      000342 00                    4834 	.db #0x00	; 0
      000343 00                    4835 	.db #0x00	; 0
      000344 00                    4836 	.db #0x00	; 0
      000345 00                    4837 	.db #0x00	; 0
      000346 00                    4838 	.db #0x00	; 0
      000347 00                    4839 	.db #0x00	; 0
      000348 00                    4840 	.db #0x00	; 0
      000349 00                    4841 	.db #0x00	; 0
      00034A 00                    4842 	.db #0x00	; 0
      00034B 00                    4843 	.db #0x00	; 0
      00034C 00                    4844 	.db #0x00	; 0
      00034D 00                    4845 	.db #0x00	; 0
      00034E 00                    4846 	.db #0x00	; 0
      00034F 00                    4847 	.db #0x00	; 0
      000350 00                    4848 	.db #0x00	; 0
      000351 00                    4849 	.db #0x00	; 0
      000352 00                    4850 	.db #0x00	; 0
      000353 00                    4851 	.db #0x00	; 0
      000354 00                    4852 	.db #0x00	; 0
      000355 00                    4853 	.db #0x00	; 0
      000356 00                    4854 	.db #0x00	; 0
      000357 00                    4855 	.db #0x00	; 0
      000358 00                    4856 	.db #0x00	; 0
      000359 00                    4857 	.db #0x00	; 0
      00035A 00                    4858 	.db #0x00	; 0
      00035B 00                    4859 	.db #0x00	; 0
      00035C 00                    4860 	.db #0x00	; 0
      00035D 00                    4861 	.db #0x00	; 0
      00035E 00                    4862 	.db #0x00	; 0
      00035F 00                    4863 	.db #0x00	; 0
      000360 00                    4864 	.db #0x00	; 0
      000361 00                    4865 	.db #0x00	; 0
      000362 00                    4866 	.db #0x00	; 0
      000363 02                    4867 	.db #0x02	; 2
      000364 00                    4868 	.db #0x00	; 0
      000365 00                    4869 	.db #0x00	; 0
      000366 00                    4870 	.db #0x00	; 0
      000367 00                    4871 	.db #0x00	; 0
      000368 00                    4872 	.db #0x00	; 0
      000369 00                    4873 	.db #0x00	; 0
      00036A 00                    4874 	.db #0x00	; 0
      00036B 00                    4875 	.db #0x00	; 0
      00036C 00                    4876 	.db #0x00	; 0
      00036D 00                    4877 	.db #0x00	; 0
      00036E 00                    4878 	.db #0x00	; 0
      00036F 00                    4879 	.db #0x00	; 0
      000370 00                    4880 	.db #0x00	; 0
      000371 00                    4881 	.db #0x00	; 0
      000372 01                    4882 	.db #0x01	; 1
      000373 00                    4883 	.db #0x00	; 0
      000374 01                    4884 	.db #0x01	; 1
      000375 00                    4885 	.db #0x00	; 0
      000376 00                    4886 	.db #0x00	; 0
      000377 00                    4887 	.db #0x00	; 0
      000378 00                    4888 	.db #0x00	; 0
      000379 02                    4889 	.db #0x02	; 2
      00037A 00                    4890 	.db #0x00	; 0
      00037B 00                    4891 	.db #0x00	; 0
      00037C 00                    4892 	.db #0x00	; 0
      00037D 00                    4893 	.db #0x00	; 0
      00037E 00                    4894 	.db #0x00	; 0
      00037F 00                    4895 	.db #0x00	; 0
      000380 00                    4896 	.db #0x00	; 0
      000381 00                    4897 	.db #0x00	; 0
      000382 00                    4898 	.db #0x00	; 0
      000383 00                    4899 	.db #0x00	; 0
      000384 00                    4900 	.db #0x00	; 0
      000385 00                    4901 	.db #0x00	; 0
      000386 01                    4902 	.db #0x01	; 1
      000387 00                    4903 	.db #0x00	; 0
      000388 00                    4904 	.db #0x00	; 0
      000389 00                    4905 	.db #0x00	; 0
      00038A 00                    4906 	.db #0x00	; 0
      00038B 00                    4907 	.db #0x00	; 0
      00038C 00                    4908 	.db #0x00	; 0
      00038D 00                    4909 	.db #0x00	; 0
      00038E 00                    4910 	.db #0x00	; 0
      00038F 00                    4911 	.db #0x00	; 0
      000390 02                    4912 	.db #0x02	; 2
      000391 00                    4913 	.db #0x00	; 0
      000392 00                    4914 	.db #0x00	; 0
      000393 00                    4915 	.db #0x00	; 0
      000394 00                    4916 	.db #0x00	; 0
      000395 00                    4917 	.db #0x00	; 0
      000396 00                    4918 	.db #0x00	; 0
      000397 00                    4919 	.db #0x00	; 0
      000398 00                    4920 	.db #0x00	; 0
      000399 00                    4921 	.db #0x00	; 0
      00039A 00                    4922 	.db #0x00	; 0
      00039B 00                    4923 	.db #0x00	; 0
      00039C 03                    4924 	.db #0x03	; 3
      00039D 00                    4925 	.db #0x00	; 0
      00039E 00                    4926 	.db #0x00	; 0
      00039F 00                    4927 	.db #0x00	; 0
      0003A0 00                    4928 	.db #0x00	; 0
      0003A1 00                    4929 	.db #0x00	; 0
      0003A2 00                    4930 	.db #0x00	; 0
      0003A3 00                    4931 	.db #0x00	; 0
      0003A4 00                    4932 	.db #0x00	; 0
      0003A5 00                    4933 	.db #0x00	; 0
      0003A6 00                    4934 	.db #0x00	; 0
      0003A7 00                    4935 	.db #0x00	; 0
      0003A8 00                    4936 	.db #0x00	; 0
      0003A9 00                    4937 	.db #0x00	; 0
      0003AA 00                    4938 	.db #0x00	; 0
      0003AB 00                    4939 	.db #0x00	; 0
      0003AC 00                    4940 	.db #0x00	; 0
      0003AD 01                    4941 	.db #0x01	; 1
      0003AE 00                    4942 	.db #0x00	; 0
      0003AF 00                    4943 	.db #0x00	; 0
      0003B0 00                    4944 	.db #0x00	; 0
      0003B1 00                    4945 	.db #0x00	; 0
      0003B2 00                    4946 	.db #0x00	; 0
      0003B3 00                    4947 	.db #0x00	; 0
      0003B4 00                    4948 	.db #0x00	; 0
      0003B5 00                    4949 	.db #0x00	; 0
      0003B6 00                    4950 	.db #0x00	; 0
      0003B7 00                    4951 	.db #0x00	; 0
      0003B8 00                    4952 	.db #0x00	; 0
      0003B9 00                    4953 	.db #0x00	; 0
      0003BA 01                    4954 	.db #0x01	; 1
      0003BB 00                    4955 	.db #0x00	; 0
      0003BC 00                    4956 	.db #0x00	; 0
      0003BD 00                    4957 	.db #0x00	; 0
      0003BE 00                    4958 	.db #0x00	; 0
      0003BF 00                    4959 	.db #0x00	; 0
      0003C0 00                    4960 	.db #0x00	; 0
      0003C1 00                    4961 	.db #0x00	; 0
      0003C2 00                    4962 	.db #0x00	; 0
      0003C3 00                    4963 	.db #0x00	; 0
      0003C4 00                    4964 	.db #0x00	; 0
      0003C5 00                    4965 	.db #0x00	; 0
      0003C6 00                    4966 	.db #0x00	; 0
      0003C7 00                    4967 	.db #0x00	; 0
      0003C8 00                    4968 	.db #0x00	; 0
      0003C9 00                    4969 	.db #0x00	; 0
      0003CA 00                    4970 	.db #0x00	; 0
      0003CB 00                    4971 	.db #0x00	; 0
      0003CC 03                    4972 	.db #0x03	; 3
      0003CD 00                    4973 	.db #0x00	; 0
      0003CE 00                    4974 	.db #0x00	; 0
      0003CF 00                    4975 	.db #0x00	; 0
      0003D0 00                    4976 	.db #0x00	; 0
      0003D1 00                    4977 	.db #0x00	; 0
      0003D2 00                    4978 	.db #0x00	; 0
      0003D3 00                    4979 	.db #0x00	; 0
      0003D4 00                    4980 	.db #0x00	; 0
      0003D5 00                    4981 	.db #0x00	; 0
      0003D6 00                    4982 	.db #0x00	; 0
      0003D7 00                    4983 	.db #0x00	; 0
      0003D8 00                    4984 	.db #0x00	; 0
      0003D9 00                    4985 	.db #0x00	; 0
      0003DA 00                    4986 	.db #0x00	; 0
      0003DB 00                    4987 	.db #0x00	; 0
      0003DC 00                    4988 	.db #0x00	; 0
      0003DD 00                    4989 	.db #0x00	; 0
      0003DE 02                    4990 	.db #0x02	; 2
      0003DF 00                    4991 	.db #0x00	; 0
      0003E0 00                    4992 	.db #0x00	; 0
      0003E1 03                    4993 	.db #0x03	; 3
      0003E2 00                    4994 	.db #0x00	; 0
      0003E3 00                    4995 	.db #0x00	; 0
      0003E4 00                    4996 	.db #0x00	; 0
      0003E5 00                    4997 	.db #0x00	; 0
      0003E6 00                    4998 	.db #0x00	; 0
      0003E7 00                    4999 	.db #0x00	; 0
      0003E8 00                    5000 	.db #0x00	; 0
      0003E9 00                    5001 	.db #0x00	; 0
      0003EA 00                    5002 	.db #0x00	; 0
      0003EB 00                    5003 	.db #0x00	; 0
      0003EC 00                    5004 	.db #0x00	; 0
      0003ED 00                    5005 	.db #0x00	; 0
      0003EE 00                    5006 	.db #0x00	; 0
      0003EF 00                    5007 	.db #0x00	; 0
      0003F0 00                    5008 	.db #0x00	; 0
      0003F1 00                    5009 	.db #0x00	; 0
      0003F2 01                    5010 	.db #0x01	; 1
      0003F3 00                    5011 	.db #0x00	; 0
      0003F4 00                    5012 	.db #0x00	; 0
      0003F5 00                    5013 	.db #0x00	; 0
      0003F6 00                    5014 	.db #0x00	; 0
      0003F7 00                    5015 	.db #0x00	; 0
      0003F8 00                    5016 	.db #0x00	; 0
      0003F9 00                    5017 	.db #0x00	; 0
      0003FA 00                    5018 	.db #0x00	; 0
      0003FB 00                    5019 	.db #0x00	; 0
      0003FC 00                    5020 	.db #0x00	; 0
      0003FD 00                    5021 	.db #0x00	; 0
      0003FE 00                    5022 	.db #0x00	; 0
      0003FF 00                    5023 	.db #0x00	; 0
      000400 00                    5024 	.db #0x00	; 0
      000401 00                    5025 	.db #0x00	; 0
      000402 00                    5026 	.db #0x00	; 0
      000403 01                    5027 	.db #0x01	; 1
      000404 00                    5028 	.db #0x00	; 0
      000405 00                    5029 	.db #0x00	; 0
      000406 00                    5030 	.db #0x00	; 0
      000407 00                    5031 	.db #0x00	; 0
      000408 00                    5032 	.db #0x00	; 0
      000409 00                    5033 	.db #0x00	; 0
      00040A 00                    5034 	.db #0x00	; 0
      00040B 00                    5035 	.db #0x00	; 0
      00040C 00                    5036 	.db #0x00	; 0
      00040D 00                    5037 	.db #0x00	; 0
      00040E 00                    5038 	.db #0x00	; 0
      00040F 00                    5039 	.db #0x00	; 0
      000410 00                    5040 	.db #0x00	; 0
      000411 00                    5041 	.db #0x00	; 0
      000412 00                    5042 	.db #0x00	; 0
      000413 00                    5043 	.db #0x00	; 0
      000414 00                    5044 	.db #0x00	; 0
      000415 03                    5045 	.db #0x03	; 3
      000416 01                    5046 	.db #0x01	; 1
      000417 00                    5047 	.db #0x00	; 0
      000418 00                    5048 	.db #0x00	; 0
      000419 00                    5049 	.db #0x00	; 0
      00041A 00                    5050 	.db #0x00	; 0
      00041B 00                    5051 	.db #0x00	; 0
      00041C 00                    5052 	.db #0x00	; 0
      00041D 00                    5053 	.db #0x00	; 0
      00041E 00                    5054 	.db #0x00	; 0
      00041F 00                    5055 	.db #0x00	; 0
      000420 00                    5056 	.db #0x00	; 0
      000421 00                    5057 	.db #0x00	; 0
      000422 00                    5058 	.db #0x00	; 0
      000423 00                    5059 	.db #0x00	; 0
      000424 00                    5060 	.db #0x00	; 0
      000425 00                    5061 	.db #0x00	; 0
      000426 00                    5062 	.db #0x00	; 0
      000427 00                    5063 	.db #0x00	; 0
      000428 01                    5064 	.db #0x01	; 1
      000429 02                    5065 	.db #0x02	; 2
      00042A 00                    5066 	.db #0x00	; 0
      00042B 00                    5067 	.db #0x00	; 0
      00042C 00                    5068 	.db #0x00	; 0
      00042D 00                    5069 	.db #0x00	; 0
      00042E 00                    5070 	.db #0x00	; 0
      00042F 00                    5071 	.db #0x00	; 0
      000430 00                    5072 	.db #0x00	; 0
      000431 00                    5073 	.db #0x00	; 0
      000432 00                    5074 	.db #0x00	; 0
      000433 00                    5075 	.db #0x00	; 0
      000434 00                    5076 	.db #0x00	; 0
      000435 00                    5077 	.db #0x00	; 0
      000436 00                    5078 	.db #0x00	; 0
      000437 00                    5079 	.db #0x00	; 0
      000438 00                    5080 	.db #0x00	; 0
      000439 01                    5081 	.db #0x01	; 1
      00043A 00                    5082 	.db #0x00	; 0
      00043B 00                    5083 	.db #0x00	; 0
      00043C 01                    5084 	.db #0x01	; 1
      00043D 00                    5085 	.db #0x00	; 0
      00043E 00                    5086 	.db #0x00	; 0
      00043F 00                    5087 	.db #0x00	; 0
      000440 00                    5088 	.db #0x00	; 0
      000441 00                    5089 	.db #0x00	; 0
      000442 00                    5090 	.db #0x00	; 0
      000443 00                    5091 	.db #0x00	; 0
      000444 00                    5092 	.db #0x00	; 0
      000445 00                    5093 	.db #0x00	; 0
      000446 00                    5094 	.db #0x00	; 0
      000447 00                    5095 	.db #0x00	; 0
      000448 00                    5096 	.db #0x00	; 0
      000449 00                    5097 	.db #0x00	; 0
      00044A 00                    5098 	.db #0x00	; 0
      00044B 00                    5099 	.db #0x00	; 0
      00044C 00                    5100 	.db #0x00	; 0
      00044D 00                    5101 	.db #0x00	; 0
      00044E 00                    5102 	.db #0x00	; 0
      00044F 00                    5103 	.db #0x00	; 0
      000450 01                    5104 	.db #0x01	; 1
      000451 00                    5105 	.db #0x00	; 0
      000452 00                    5106 	.db #0x00	; 0
      000453 00                    5107 	.db #0x00	; 0
      000454 02                    5108 	.db #0x02	; 2
      000455 00                    5109 	.db #0x00	; 0
      000456 00                    5110 	.db #0x00	; 0
      000457 00                    5111 	.db #0x00	; 0
      000458 00                    5112 	.db #0x00	; 0
      000459 00                    5113 	.db #0x00	; 0
      00045A 00                    5114 	.db #0x00	; 0
      00045B 00                    5115 	.db #0x00	; 0
      00045C 00                    5116 	.db #0x00	; 0
      00045D 00                    5117 	.db #0x00	; 0
      00045E 00                    5118 	.db #0x00	; 0
      00045F 00                    5119 	.db #0x00	; 0
      000460 00                    5120 	.db #0x00	; 0
      000461 00                    5121 	.db #0x00	; 0
      000462 00                    5122 	.db #0x00	; 0
      000463 00                    5123 	.db #0x00	; 0
      000464 00                    5124 	.db #0x00	; 0
      000465 00                    5125 	.db #0x00	; 0
      000466 00                    5126 	.db #0x00	; 0
      000467 00                    5127 	.db #0x00	; 0
      000468 00                    5128 	.db #0x00	; 0
      000469 02                    5129 	.db #0x02	; 2
      00046A 00                    5130 	.db #0x00	; 0
      00046B 00                    5131 	.db #0x00	; 0
      00046C 00                    5132 	.db #0x00	; 0
      00046D 00                    5133 	.db #0x00	; 0
      00046E 00                    5134 	.db #0x00	; 0
      00046F 00                    5135 	.db #0x00	; 0
      000470 00                    5136 	.db #0x00	; 0
      000471 00                    5137 	.db #0x00	; 0
      000472 00                    5138 	.db #0x00	; 0
      000473 00                    5139 	.db #0x00	; 0
      000474 00                    5140 	.db #0x00	; 0
      000475 00                    5141 	.db #0x00	; 0
      000476 00                    5142 	.db #0x00	; 0
      000477 00                    5143 	.db #0x00	; 0
      000478 00                    5144 	.db #0x00	; 0
      000479 00                    5145 	.db #0x00	; 0
      00047A 00                    5146 	.db #0x00	; 0
      00047B 00                    5147 	.db #0x00	; 0
      00047C 00                    5148 	.db #0x00	; 0
      00047D 00                    5149 	.db #0x00	; 0
      00047E 00                    5150 	.db #0x00	; 0
      00047F 00                    5151 	.db #0x00	; 0
      000480 00                    5152 	.db #0x00	; 0
      000481 00                    5153 	.db #0x00	; 0
      000482 00                    5154 	.db #0x00	; 0
      000483 00                    5155 	.db #0x00	; 0
      000484 00                    5156 	.db #0x00	; 0
      000485 03                    5157 	.db #0x03	; 3
      000486 00                    5158 	.db #0x00	; 0
      000487 00                    5159 	.db #0x00	; 0
      000488 00                    5160 	.db #0x00	; 0
      000489 00                    5161 	.db #0x00	; 0
      00048A 00                    5162 	.db #0x00	; 0
      00048B 00                    5163 	.db #0x00	; 0
      00048C 00                    5164 	.db #0x00	; 0
      00048D 00                    5165 	.db #0x00	; 0
      00048E 00                    5166 	.db #0x00	; 0
      00048F 03                    5167 	.db #0x03	; 3
      000490 00                    5168 	.db #0x00	; 0
      000491 00                    5169 	.db #0x00	; 0
      000492 00                    5170 	.db #0x00	; 0
      000493 00                    5171 	.db #0x00	; 0
      000494 00                    5172 	.db #0x00	; 0
      000495 00                    5173 	.db #0x00	; 0
      000496 00                    5174 	.db #0x00	; 0
      000497 00                    5175 	.db #0x00	; 0
      000498 00                    5176 	.db #0x00	; 0
      000499 00                    5177 	.db #0x00	; 0
      00049A 00                    5178 	.db #0x00	; 0
      00049B 00                    5179 	.db #0x00	; 0
      00049C 00                    5180 	.db #0x00	; 0
      00049D 03                    5181 	.db #0x03	; 3
      00049E 00                    5182 	.db #0x00	; 0
      00049F 00                    5183 	.db #0x00	; 0
      0004A0 00                    5184 	.db #0x00	; 0
      0004A1 00                    5185 	.db #0x00	; 0
      0004A2 00                    5186 	.db #0x00	; 0
      0004A3 00                    5187 	.db #0x00	; 0
      0004A4 00                    5188 	.db #0x00	; 0
      0004A5 00                    5189 	.db #0x00	; 0
      0004A6 00                    5190 	.db #0x00	; 0
      0004A7 00                    5191 	.db #0x00	; 0
      0004A8 00                    5192 	.db #0x00	; 0
      0004A9 00                    5193 	.db #0x00	; 0
      0004AA 00                    5194 	.db #0x00	; 0
      0004AB 00                    5195 	.db #0x00	; 0
      0004AC 00                    5196 	.db #0x00	; 0
      0004AD 00                    5197 	.db #0x00	; 0
      0004AE 00                    5198 	.db #0x00	; 0
      0004AF 00                    5199 	.db #0x00	; 0
      0004B0 00                    5200 	.db #0x00	; 0
      0004B1 00                    5201 	.db #0x00	; 0
      0004B2 00                    5202 	.db #0x00	; 0
      0004B3 00                    5203 	.db #0x00	; 0
      0004B4 00                    5204 	.db #0x00	; 0
      0004B5 00                    5205 	.db #0x00	; 0
      0004B6 00                    5206 	.db #0x00	; 0
      0004B7 00                    5207 	.db #0x00	; 0
      0004B8 00                    5208 	.db #0x00	; 0
      0004B9 02                    5209 	.db #0x02	; 2
      0004BA 00                    5210 	.db #0x00	; 0
      0004BB 00                    5211 	.db #0x00	; 0
      0004BC 00                    5212 	.db #0x00	; 0
      0004BD 00                    5213 	.db #0x00	; 0
      0004BE 00                    5214 	.db #0x00	; 0
      0004BF 00                    5215 	.db #0x00	; 0
                           0004C0  5216 Fmain$__xinit_enemyUpdate$0_0$0 == .
      0004C0                       5217 __xinit__enemyUpdate:
      0004C0 00                    5218 	.db #0x00	; 0
                                   5219 	.area _CABS (ABS)
